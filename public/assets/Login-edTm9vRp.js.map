{"version":3,"mappings":";wYAMA,MAAMA,EAAiB,IAAM,OAElB,4BAAY,OAAAC,KAAA,mCAAE,MAAMC,GAAO,QAAQ,MAAM,4BAA6BA,CAAG,CAAC,CACrF,EAEA,SAAwBC,GAAQ,CAC5B,KAAM,CAACC,EAAOC,CAAQ,EAAIC,WAAS,EAAE,EAC/B,CAACC,EAAUC,CAAW,EAAIF,WAAS,EAAE,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,WAAS,EAAE,EAC/B,CAAE,MAAAK,EAAO,gBAAAC,EAAiB,QAAAC,CAAA,EAAYC,EAAQ,EAC9CC,EAAWC,EAAY,EAG7BC,YAAU,IAAM,CACRL,GACAG,EAAS,UAAU,CACvB,EACD,CAACH,EAAiBG,CAAQ,CAAC,EAGxB,MAAAG,EAAsBC,GAAuBC,EAAA,sBAC/CD,EAAE,eAAe,EACjBT,EAAS,EAAE,EAIIV,EAAA,GAEC,MAAMW,EAAMP,EAAOG,CAAQ,IAExCG,EAAS,qBAAqB,CAErC,GAGI,OAAAW,EAAA,KAAC,MAAI,WAAU,6EACX,UAACA,OAAA,OAAI,UAAU,mCACX,UAACC,EAAA,UAAG,UAAU,oDAAoD,SAAW,gBAC5EA,EAAA,UAAG,UAAU,oDAAoD,SAElE,6BACJ,QAEC,MAAI,WAAU,wCACX,SAACD,EAAA,YAAI,UAAU,mDACX,UAAAA,EAAA,KAAC,OAAK,WAAU,YAAY,SAAUH,EACjC,UAAAT,GACIa,EAAA,WAAI,UAAU,iEACV,SACLb,EAAA,SAGH,MACG,WAAAa,MAAC,QAAM,SAAQ,QAAQ,UAAU,0CAA0C,SAE3E,kBACAA,MAAC,MAAI,WAAU,OACX,SAAAA,EAAA,IAAC,SACG,GAAG,QACH,KAAK,QACL,KAAK,QACL,aAAa,QACb,SAAQ,GACR,MAAOlB,EACP,SAAWe,GAAMd,EAASc,EAAE,OAAO,KAAK,EACxC,UAAU,4KAElB,IACJ,SAEC,MACG,WAAAG,MAAC,QAAM,SAAQ,WAAW,UAAU,0CAA0C,SAE9E,aACAA,MAAC,MAAI,WAAU,OACX,SAAAA,EAAA,IAAC,SACG,GAAG,WACH,KAAK,WACL,KAAK,WACL,aAAa,mBACb,SAAQ,GACR,MAAOf,EACP,SAAWY,GAAMX,EAAYW,EAAE,OAAO,KAAK,EAC3C,UAAU,4KAElB,IACJ,QAEC,MACG,UAAAE,EAAA,KAAC,UACG,KAAK,SACL,SAAUR,EACV,UAAU,+NAET,UAAAA,EAAU,gBAAkB,UAAU,OAE/C,IACJ,EAEAQ,OAAC,MAAI,WAAU,OACX,UAACA,OAAA,OAAI,UAAU,WACX,UAAAC,MAAC,OAAI,UAAU,qCACX,eAAC,MAAI,WAAU,kCAAkC,CACrD,GACAA,MAAC,OAAI,UAAU,uCACX,eAAC,OAAK,WAAU,8BAA8B,iCAE9C,EACJ,IACJ,QAEC,MAAI,WAAU,OACX,SAACD,EAAA,YAAI,UAAU,iBACX,UAAAC,EAAA,IAAC,KACG,KAAK,YACL,UAAU,qKACb,oBAED,EACAA,EAAA,IAAC,KACG,KAAK,qBACL,UAAU,sJACb,4BAED,EACJ,CACJ,GACJ,IACJ,CACJ,IACJ,CAER","names":["preloadMainApp","n","err","Login","email","setEmail","useState","password","setPassword","error","setError","login","isAuthenticated","loading","useAuth","navigate","useNavigate","useEffect","handleSubmit","e","__async","jsxs","jsx"],"ignoreList":[],"sources":["../../src/pages/Login.tsx"],"sourcesContent":["//pages/Login.tsx\nimport React, { useState, useEffect } from 'react'; // Import useEffect\nimport { useAuth } from '../AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\n// Add preload function for MainApp\nconst preloadMainApp = () => {\n    // This will load the MainApp component in the background\n    import('../MainApp').catch(err => console.error('Error preloading MainApp:', err));\n};\n\nexport default function Login() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const { login, isAuthenticated, loading } = useAuth(); // Get isAuthenticated and loading\n    const navigate = useNavigate();\n\n    // Use useEffect to redirect AFTER authentication state changes\n    useEffect(() => {\n        if (isAuthenticated) {\n            navigate('/mainapp');\n        }\n    }, [isAuthenticated, navigate]); // Depend on isAuthenticated\n\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setError(''); // Clear previous error\n        \n        // Start preloading MainApp when login button is clicked\n        // This gives us a head start on loading the component\n        preloadMainApp();\n        \n        const success = await login(email, password);  // await the login promise\n        if (!success) {\n           setError(\"Invalid Credentials\")\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n                <h2 className=\"text-center text-3xl font-extrabold text-gray-900\">AML Checker</h2>\n                <h3 className=\"mt-6 text-center text-2xl font-bold text-gray-900\">\n                    Sign in to your account\n                </h3>\n            </div>\n\n            <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n                <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n                    <form className=\"space-y-6\" onSubmit={handleSubmit}>\n                        {error && (\n                            <div className=\"bg-red-50 border border-red-400 text-red-700 px-4 py-3 rounded\">\n                                {error}\n                            </div>\n                        )}\n\n                        <div>\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                                Email address\n                            </label>\n                            <div className=\"mt-1\">\n                                <input\n                                    id=\"email\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    autoComplete=\"email\"\n                                    required\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-purple-500 focus:border-purple-500\"\n                                />\n                            </div>\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                                Password\n                            </label>\n                            <div className=\"mt-1\">\n                                <input\n                                    id=\"password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    autoComplete=\"current-password\"\n                                    required\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-purple-500 focus:border-purple-500\"\n                                />\n                            </div>\n                        </div>\n\n                        <div>\n                            <button\n                                type=\"submit\"\n                                disabled={loading} // Disable button while loading\n                                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-[#4A1D96] hover:bg-[#5D2BA8] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500\"\n                            >\n                                {loading ? 'Signing in...' : 'Sign in'}  {/* Show loading text */}\n                            </button>\n                        </div>\n                    </form>\n\n                    <div className=\"mt-6\">\n                        <div className=\"relative\">\n                            <div className=\"absolute inset-0 flex items-center\">\n                                <div className=\"w-full border-t border-gray-300\" />\n                            </div>\n                            <div className=\"relative flex justify-center text-sm\">\n                                <span className=\"px-2 bg-white text-gray-500\">\n                                    Don't have an account?\n                                </span>\n                            </div>\n                        </div>\n\n                        <div className=\"mt-6\">\n                            <div className=\"flex space-x-2\">\n                                <a\n                                    href=\"/register\"\n                                    className=\"flex-1 flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-[#4A1D96] bg-white border-purple-600 hover:bg-gray-50\"\n                                >\n                                    Register\n                                </a>\n                                <a\n                                    href=\"/kycbox/index.html\"\n                                    className=\"flex-1 flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-gray-600 bg-gray-100 hover:bg-gray-200\"\n                                >\n                                    Back to KYCSYNC\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}"],"file":"assets/Login-edTm9vRp.js"}
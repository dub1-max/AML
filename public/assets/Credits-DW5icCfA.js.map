{"version":3,"file":"Credits-DW5icCfA.js","sources":["../../src/pages/Credits.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CreditCard, Loader2, CreditCard as CreditCardIcon, CheckCircle, Star } from 'lucide-react';\r\nimport { useAuth } from '../AuthContext';\r\nimport Layout from '../components/Layout';\r\nimport { getApiBaseUrl } from '../config';\r\n\r\nconst API_BASE_URL = getApiBaseUrl();\r\n\r\n// Add PayPal type declarations\r\ndeclare global {\r\n    interface Window {\r\n        paypal: any;\r\n    }\r\n}\r\n\r\ninterface CreditsProps {}\r\n\r\ninterface SubscriptionPlan {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    currency: string;\r\n    profileLimit: number;\r\n    isPopular: boolean;\r\n    isActive: boolean;\r\n}\r\n\r\nconst Credits: React.FC<CreditsProps> = () => {\r\n    const { user } = useAuth();\r\n    const [credits, setCredits] = useState<number>(0);\r\n    const [loadingCredits, setLoadingCredits] = useState<boolean>(true);\r\n    const [purchaseAmount, setPurchaseAmount] = useState<number>(100);\r\n    const [processingPayment, setProcessingPayment] = useState<boolean>(false);\r\n    const [selectedPaymentMethod, setSelectedPaymentMethod] = useState<'paypal'>('paypal');\r\n    \r\n    // Subscription state\r\n    const [loadingSubscription, setLoadingSubscription] = useState<boolean>(true);\r\n    const [activeSubscription, setActiveSubscription] = useState<SubscriptionPlan | null>(null);\r\n    const [subscriptionPlans, setSubscriptionPlans] = useState<SubscriptionPlan[]>([\r\n        {\r\n            id: 'starter',\r\n            name: 'Starter',\r\n            price: 200,\r\n            currency: 'AED',\r\n            profileLimit: 100,\r\n            isPopular: false,\r\n            isActive: false\r\n        },\r\n        {\r\n            id: 'essential',\r\n            name: 'Essential',\r\n            price: 500, \r\n            currency: 'AED',\r\n            profileLimit: 250,\r\n            isPopular: true,\r\n            isActive: false\r\n        },\r\n        {\r\n            id: 'business',\r\n            name: 'Business',\r\n            price: 1000,\r\n            currency: 'AED',\r\n            profileLimit: 500,\r\n            isPopular: false,\r\n            isActive: false\r\n        },\r\n        {\r\n            id: 'corporate',\r\n            name: 'Corporate',\r\n            price: 1500,\r\n            currency: 'AED',\r\n            profileLimit: 750,\r\n            isPopular: false,\r\n            isActive: false\r\n        }\r\n    ]);\r\n    \r\n    // PayPal script loading state\r\n    const [paypalReady, setPaypalReady] = useState<boolean>(false);\r\n    const [paypalError, setPaypalError] = useState<string | null>(null);\r\n    \r\n    // Processing states\r\n    const [purchasingSubscription, setPurchasingSubscription] = useState<boolean>(false);\r\n    const [purchaseSuccess, setPurchaseSuccess] = useState<boolean>(false);\r\n    const [purchaseError, setPurchaseError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        fetchCredits();\r\n        fetchSubscription();\r\n        \r\n        // Load PayPal SDK\r\n        const loadPayPalScript = () => {\r\n            const script = document.createElement('script');\r\n            script.src = \"https://www.paypal.com/sdk/js?client-id=AW_r5mx6frqH8LQR7iXk6x8H9UYQpZ6KtUJlz9paGXi4P5DGQM4E-IZrYHPt4MxlG-jnIm6Pv-9HFf15&currency=AED\";\r\n            script.async = true;\r\n            script.onload = () => {\r\n                console.log('PayPal SDK loaded');\r\n                setPaypalReady(true);\r\n            };\r\n            script.onerror = () => {\r\n                console.error('PayPal SDK loading failed');\r\n                setPaypalError('Failed to load PayPal. Please try again later.');\r\n            };\r\n            document.body.appendChild(script);\r\n        };\r\n\r\n        if (!document.querySelector('script[src*=\"paypal.com/sdk\"]')) {\r\n            loadPayPalScript();\r\n        } else {\r\n            setPaypalReady(true);\r\n        }\r\n    }, []);\r\n\r\n    // Initialize PayPal buttons when SDK is ready\r\n    useEffect(() => {\r\n        if (paypalReady && window.paypal) {\r\n            try {\r\n                const paypalButtonsContainer = document.getElementById('paypal-button-container');\r\n                \r\n                // Clear container first\r\n                if (paypalButtonsContainer) {\r\n                    paypalButtonsContainer.innerHTML = '';\r\n                    \r\n                    window.paypal.Buttons({\r\n                        createOrder: async (_data: any, actions: any) => {\r\n                            // Set up the transaction details\r\n                            return actions.order.create({\r\n                                purchase_units: [{\r\n                                    amount: {\r\n                                        value: purchaseAmount.toString(),\r\n                                        currency_code: 'AED'\r\n                                    },\r\n                                    description: `Purchase ${purchaseAmount} credits for AML Checker`\r\n                                }]\r\n                            });\r\n                        },\r\n                        onApprove: async (_data: any, actions: any) => {\r\n                            setProcessingPayment(true);\r\n                            // Capture the funds\r\n                            const order = await actions.order.capture();\r\n                            console.log('Payment successful', order);\r\n                            \r\n                            // Process the credit purchase on your server\r\n                            try {\r\n                                const response = await fetch(`${API_BASE_URL}/credits/purchase`, {\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    credentials: 'include',\r\n                                    body: JSON.stringify({\r\n                                        amount: purchaseAmount,\r\n                                        paymentMethod: 'paypal',\r\n                                        paymentId: order.id,\r\n                                        paymentDetails: order\r\n                                    }),\r\n                                });\r\n                                \r\n                                if (!response.ok) {\r\n                                    throw new Error('Failed to process credits purchase');\r\n                                }\r\n                                \r\n                                const result = await response.json();\r\n                                \r\n                                // Update credits balance\r\n                                setCredits(result.newBalance);\r\n                                alert(`Successfully purchased ${purchaseAmount} credits!`);\r\n                            } catch (error) {\r\n                                console.error('Error processing credit purchase:', error);\r\n                                alert('Payment was successful, but we had trouble adding credits to your account. Please contact support.');\r\n                            } finally {\r\n                                setProcessingPayment(false);\r\n                            }\r\n                        },\r\n                        onError: (err: any) => {\r\n                            console.error('PayPal error:', err);\r\n                            setPaypalError('An error occurred with PayPal. Please try again.');\r\n                        }\r\n                    }).render('#paypal-button-container');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error rendering PayPal buttons:', error);\r\n                setPaypalError('Error setting up PayPal payment. Please try again later.');\r\n            }\r\n        }\r\n    }, [paypalReady, purchaseAmount]);\r\n\r\n    const fetchCredits = async () => {\r\n        try {\r\n            setLoadingCredits(true);\r\n            const response = await fetch(`${API_BASE_URL}/credits`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to fetch credits: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            \r\n            if (typeof data.credits === 'number') {\r\n                setCredits(data.credits);\r\n            } else {\r\n                console.error('Invalid credits data received:', data);\r\n                const parsedCredits = parseInt(data.credits);\r\n                setCredits(isNaN(parsedCredits) ? 0 : parsedCredits);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching credits:', error);\r\n            setCredits(0);\r\n        } finally {\r\n            setLoadingCredits(false);\r\n        }\r\n    };\r\n    \r\n    const fetchSubscription = async () => {\r\n        try {\r\n            setLoadingSubscription(true);\r\n            // This endpoint doesn't exist yet - you'll need to implement it\r\n            const response = await fetch(`${API_BASE_URL}/subscription`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                if (data.subscription) {\r\n                    setActiveSubscription(data.subscription);\r\n                    \r\n                    // Update subscription plans to mark active plan\r\n                    setSubscriptionPlans(prevPlans => \r\n                        prevPlans.map(plan => ({\r\n                            ...plan,\r\n                            isActive: plan.id === data.subscription.id\r\n                        }))\r\n                    );\r\n                }\r\n            } else {\r\n                // If endpoint doesn't exist yet or no subscription, we'll show defaults\r\n                console.log('No active subscription or endpoint not available');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching subscription:', error);\r\n        } finally {\r\n            setLoadingSubscription(false);\r\n        }\r\n    };\r\n\r\n    // Legacy method (will be replaced with PayPal)\r\n    const handlePurchase = async () => {\r\n        // This is kept for backward compatibility\r\n        alert(`Please use PayPal to purchase credits`);\r\n    };\r\n    \r\n    const handleSubscriptionSelect = async (planId: string) => {\r\n        if (activeSubscription?.id === planId) {\r\n            alert('You are already subscribed to this plan.');\r\n            return;\r\n        }\r\n        \r\n        const confirmed = window.confirm(`Are you sure you want to purchase the ${planId.charAt(0).toUpperCase() + planId.slice(1)} plan? Your payment method will be charged accordingly.`);\r\n        \r\n        if (!confirmed) return;\r\n        \r\n        try {\r\n            setPurchasingSubscription(true);\r\n            setPurchaseError(null);\r\n            \r\n            // For demonstration, using manual payment\r\n            const response = await fetch(`${API_BASE_URL}/api/subscription/purchase`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    planId: planId,\r\n                    paymentMethod: 'manual',\r\n                    paymentId: `manual_${Date.now()}`\r\n                }),\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Failed to purchase subscription');\r\n            }\r\n            \r\n            const result = await response.json();\r\n            \r\n            // Set purchase success and refresh subscription data\r\n            setPurchaseSuccess(true);\r\n            setActiveSubscription(result.subscription);\r\n            \r\n            // Update subscription plans to mark active plan\r\n            setSubscriptionPlans(prevPlans => \r\n                prevPlans.map(plan => ({\r\n                    ...plan,\r\n                    isActive: plan.id === planId\r\n                }))\r\n            );\r\n            \r\n            // Show success message\r\n            alert(`Successfully subscribed to ${result.subscription.name} plan!`);\r\n            \r\n            // Refresh subscription data\r\n            await fetchSubscription();\r\n            \r\n        } catch (error: any) {\r\n            setPurchaseError(error.message || 'An error occurred while purchasing the subscription');\r\n            alert(`Error: ${error.message || 'Failed to purchase subscription'}`);\r\n        } finally {\r\n            setPurchasingSubscription(false);\r\n        }\r\n    };\r\n\r\n    const creditPackages = [\r\n        { amount: 50, price: '100 AED', popular: false },\r\n        { amount: 100, price: '200 AED', popular: true },\r\n        { amount: 200, price: '400 AED', popular: false },\r\n    ];\r\n\r\n    return (\r\n        <Layout\r\n            activeSection=\"credits\"\r\n            credits={credits}\r\n            loadingCredits={loadingCredits}\r\n        >\r\n            <div className=\"p-8\">\r\n                <h1 className=\"text-2xl font-bold mb-6\">Manage Credits</h1>\r\n                \r\n                <div className=\"bg-white rounded-lg shadow-sm p-6 mb-8\">\r\n                    <div className=\"flex items-center mb-4\">\r\n                        <CreditCard className=\"w-6 h-6 mr-3 text-purple-600\" />\r\n                        <h2 className=\"text-xl font-semibold\">Current Balance</h2>\r\n                    </div>\r\n                    \r\n                    {loadingCredits ? (\r\n                        <div className=\"flex items-center mt-4\">\r\n                            <Loader2 className=\"w-5 h-5 animate-spin mr-2 text-purple-600\" />\r\n                            <span>Loading credits...</span>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"mt-2\">\r\n                            <div className=\"text-4xl font-bold text-purple-700\">{credits}</div>\r\n                            <p className=\"text-gray-500 mt-1\">Available credits</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                \r\n                {/* Subscription Plans Section */}\r\n                <div className=\"bg-white rounded-lg shadow-sm p-6 mb-8\">\r\n                    <h2 className=\"text-2xl font-bold text-center text-purple-700 mb-2\">Subscription Plans</h2>\r\n                    <p className=\"text-center text-gray-600 mb-8\">Choose the plan that fits your business needs</p>\r\n                    \r\n                    {loadingSubscription ? (\r\n                        <div className=\"flex justify-center items-center py-8\">\r\n                            <Loader2 className=\"w-8 h-8 animate-spin text-purple-600\" />\r\n                            <span className=\"ml-2\">Loading subscription details...</span>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\r\n                                {subscriptionPlans.map(plan => (\r\n                                    <div \r\n                                        key={plan.id}\r\n                                        className={`relative rounded-lg border ${plan.isActive ? 'border-purple-500 ring-2 ring-purple-300' : 'border-gray-200'} \r\n                                        p-6 flex flex-col items-center transition-all hover:shadow-md`}\r\n                                    >\r\n                                        {plan.isActive && (\r\n                                            <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-purple-600 text-xs text-white px-3 py-1 rounded-full flex items-center\">\r\n                                                <CheckCircle className=\"w-3 h-3 mr-1\" />\r\n                                                CURRENT PLAN\r\n                                            </div>\r\n                                        )}\r\n                                        \r\n                                        {plan.isPopular && !plan.isActive && (\r\n                                            <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-yellow-400 text-xs text-yellow-800 px-3 py-1 rounded-full\">\r\n                                                Most Popular\r\n                                            </div>\r\n                                        )}\r\n                                        \r\n                                        <h3 className=\"text-xl font-bold text-gray-800 mb-6\">{plan.name}</h3>\r\n                                        \r\n                                        <div className=\"text-5xl font-bold text-purple-600 mb-1\">\r\n                                            {plan.price}\r\n                                            <span className=\"text-base font-normal text-gray-500 ml-1\">{plan.currency}/Year</span>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"text-gray-600 my-4\">Up to {plan.profileLimit} profiles</div>\r\n                                        <div className=\"text-xs text-gray-500 mb-6\">All prices are exclusive of VAT</div>\r\n                                        \r\n                                        {plan.isActive && (\r\n                                            <div className=\"flex items-center justify-center text-green-600\">\r\n                                                <CheckCircle className=\"w-5 h-5 mr-2\" />\r\n                                                <span className=\"font-medium\">Active</span>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            \r\n                            {purchaseError && (\r\n                                <div className=\"bg-red-50 border border-red-200 text-red-700 p-4 rounded-md mb-6\">\r\n                                    <p className=\"font-semibold\">Error!</p>\r\n                                    <p>{purchaseError}</p>\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {purchaseSuccess && (\r\n                                <div className=\"bg-green-50 border border-green-200 text-green-700 p-4 rounded-md mb-6\">\r\n                                    <p className=\"font-semibold\">Success!</p>\r\n                                    <p>Your subscription has been updated successfully.</p>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </div>\r\n                \r\n                <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-4\">Purchase Credits</h2>\r\n                    \r\n                    {/* Credit packages */}\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n                        {creditPackages.map((pkg) => (\r\n                            <div \r\n                                key={pkg.amount}\r\n                                onClick={() => setPurchaseAmount(pkg.amount)}\r\n                                className={`border ${purchaseAmount === pkg.amount ? 'border-purple-500 bg-purple-50' : 'border-gray-200'} \r\n                                    rounded-lg p-4 cursor-pointer relative transition-all hover:shadow-md`}\r\n                            >\r\n                                {pkg.popular && (\r\n                                    <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-yellow-400 text-xs text-yellow-800 px-2 py-0.5 rounded-full\">\r\n                                        POPULAR\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"text-center\">\r\n                                    <div className=\"text-lg font-bold\">{pkg.amount} Credits</div>\r\n                                    <div className=\"text-2xl font-bold text-purple-600 mt-2\">{pkg.price}</div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {/* Custom amount */}\r\n                    <div className=\"mb-6\">\r\n                        <label htmlFor=\"creditAmount\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            Or enter custom amount:\r\n                        </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"creditAmount\"\r\n                            value={purchaseAmount}\r\n                            onChange={(e) => setPurchaseAmount(Number(e.target.value))}\r\n                            min=\"10\"\r\n                            step=\"10\"\r\n                            className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Payment method selection */}\r\n                    <div className=\"mb-6\">\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            Select Payment Method\r\n                        </label>\r\n                        <div>\r\n                            <div \r\n                                className={`border rounded-lg p-4 flex items-center cursor-pointer transition-all ${selectedPaymentMethod === 'paypal' ? 'border-purple-500 bg-purple-50' : 'border-gray-200'}`}\r\n                                onClick={() => setSelectedPaymentMethod('paypal')}\r\n                            >\r\n                                <img src=\"https://www.paypalobjects.com/webstatic/mktg/logo/pp_cc_mark_37x23.jpg\" alt=\"PayPal\" className=\"h-6 mr-2\" />\r\n                                <span>PayPal</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* PayPal button container */}\r\n                    {selectedPaymentMethod === 'paypal' && (\r\n                        <div className=\"mb-4\">\r\n                            {paypalError && (\r\n                                <div className=\"bg-red-50 border border-red-200 text-red-700 p-3 rounded-md mb-4\">\r\n                                    {paypalError}\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {!paypalReady && !paypalError && (\r\n                                <div className=\"flex justify-center items-center py-8\">\r\n                                    <Loader2 className=\"w-8 h-8 animate-spin text-purple-600\" />\r\n                                    <span className=\"ml-2\">Loading PayPal...</span>\r\n                                </div>\r\n                            )}\r\n                            \r\n                            <div id=\"paypal-button-container\" className=\"w-full\"></div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Credits; "],"names":["API_BASE_URL","getApiBaseUrl","Credits","user","useAuth","credits","setCredits","useState","loadingCredits","setLoadingCredits","purchaseAmount","setPurchaseAmount","processingPayment","setProcessingPayment","selectedPaymentMethod","setSelectedPaymentMethod","loadingSubscription","setLoadingSubscription","activeSubscription","setActiveSubscription","subscriptionPlans","setSubscriptionPlans","paypalReady","setPaypalReady","paypalError","setPaypalError","purchasingSubscription","setPurchasingSubscription","purchaseSuccess","setPurchaseSuccess","purchaseError","setPurchaseError","useEffect","fetchCredits","fetchSubscription","loadPayPalScript","script","paypalButtonsContainer","_data","actions","__async","order","response","result","error","err","data","parsedCredits","prevPlans","plan","__spreadProps","__spreadValues","creditPackages","jsx","Layout","jsxs","CreditCard","Loader2","Fragment","CheckCircle","pkg","e"],"mappings":"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"}
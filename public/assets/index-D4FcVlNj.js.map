{"version":3,"mappings":"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","names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","API_BASE_URLS","getApiBaseUrl","API_BASE_URL","AuthContext","createContext","__async","useAuth","useContext","AuthProvider","children","authState","setAuthState","useState","loading","setLoading","fetchUser","useCallback","response","data","error","useEffect","login","email","password","errorData","register","name","role","logout","contextValue","generateCustomerPDF","person","pdf","jsPDF","pageWidth","currentY","addInfoRow","label","value","getCategoryFromDataset","dataset","disclaimer","splitDisclaimer","fileName","ConfirmationDialog","isOpen","onConfirm","onCancel","jsxs","jsx","AlertCircle","Profiles","searchResults","initialLoading","currentPage","totalPages","totalResults","onPageChange","user","navigate","useNavigate","tracking","setTracking","trackedResults","setTrackedResults","isLoading","setIsLoading","setError","generatingPdf","setGeneratingPdf","pageLoading","setPageLoading","confirmDialog","setConfirmDialog","calculateAging","result","trackingInfo","safeSearchResults","getRiskColor","percentage","handleToggleTracking","currentTrackingStatus","_b","_a","toggleTracking","handleConfirmTracking","__spreadProps","__spreadValues","prev","handleCancelTracking","changePage","newPage","handleGeneratePDF","Loader2","Fragment","index","XCircle","FileText","ChevronsLeft","ChevronLeft","_","i","page","ChevronRight","ChevronsRight","countriesList","statesByCountry","getSortedCountries","IndividualOB","fullName","setFullName","setEmail","residentStatus","setResidentStatus","gender","setGender","dateOfBirth","setDateOfBirth","nationality","setNationality","countryOfResidence","setCountryOfResidence","otherNationalities","setOtherNationalities","specifiedOtherNationalities","setSpecifiedOtherNationalities","nationalIdNumber","setNationalIdNumber","nationalIdExpiry","setNationalIdExpiry","passportNumber","setPassportNumber","passportExpiry","setPassportExpiry","address","setAddress","state","setState","city","setCity","zipCode","setZipCode","contactNumber","setContactNumber","dialingCode","setDialingCode","workType","setWorkType","industry","setIndustry","productTypeOffered","setProductTypeOffered","productOffered","setProductOffered","companyName","setCompanyName","positionInCompany","setPositionInCompany","countries","states","handleSubmit","event","formatDate","dateString","formData","params","country","stateName","CompanyOB","setFormData","handleChange","prevData","date","formattedFormData","err","CustomerList","customers","status","onViewCustomer","getCustomerDate","customer","dateValue","getCustomerName","User","Building","ArrowRight","CustomerDetails","onBack","ArrowLeft","key","formattedKey","str","ActivityTimeline","ResponsiveContainer","AreaChart","CartesianGrid","XAxis","YAxis","Tooltip","Area","DonutChart","title","centerText","sum","item","PieChart","Pie","entry","Cell","Insights","_props","fromDateOpen","setFromDateOpen","toDateOpen","setToDateOpen","fromDate","setFromDate","toDate","setToDate","customerCount","setCustomerCount","pendingCustomers","setPendingCustomers","approvedCustomers","setApprovedCustomers","rejectedCustomers","setRejectedCustomers","individualCustomers","setIndividualCustomers","companyCustomers","setCompanyCustomers","currentView","setCurrentView","selectedStatus","setSelectedStatus","selectedCustomer","setSelectedCustomer","timelineData","setTimelineData","customerOnboardingData","setCustomerOnboardingData","fromDateRef","useRef","toDateRef","handleClickOutside","processTimelineData","dateMap","formattedDate","count","fetchData","individualResponse","individualData","companyResponse","companyData","company","allCustomers","pending","approved","rejected","customersWithAlert","customersWithoutAlert","getCustomersByStatus","handleSectionClick","handleViewCustomer","handleBack","renderDashboard","current","ActiveTracking","onToggleTracking","lastUpdated","setLastUpdated","sortColumn","setSortColumn","sortDirection","setSortDirection","nameQuery","setNameQuery","idQuery","setIdQuery","appliedNameQuery","setAppliedNameQuery","appliedIdQuery","setAppliedIdQuery","activeFilter","setActiveFilter","MIN_SEARCH_LENGTH","safeTrackedResults","handleSort","column","renderSortIndicator","ChevronUp","ChevronDown","applySearch","resetFilters","getFilteredResults","matchesName","matchesId","getFilteredAndSortedResults","aIsTracking","multiplier","aAging","bAging","aBlacklist","bBlacklist","aStatus","bStatus","aDataset","bDataset","handleEditProfile","filteredAndSortedResults","resultsCount","totalCount","handleManualRefresh","newStatus","pendingStatus","refreshCreditsEvent","Search","RefreshCw","CheckCircle","_c","_d","_e","Edit","ErrorBoundary","Component","__publicField","errorInfo","addLog","message","type","Layout","activeSection","deepLinkSubSection","credits","loadingCredits","handleSidebarNavigation","handleDeepLinkClick","handleIndividualOBClick","handleCompanyOBClick","location","useLocation","isDeepLinkOpen","setIsDeepLinkOpen","lastKnownCredit","setLastKnownCredit","previousSection","setPreviousSection","defaultNavHandler","section","defaultDeepLinkHandler","defaultIndividualHandler","defaultCompanyHandler","navHandler","deepLinkHandler","individualHandler","companyHandler","isDropdownOpen","handleCreditsClick","Shield","Users","Link","CreditCard","LogOut","MainApp","setSearchResults","searchTerm","setSearchTerm","searchId","setSearchId","showDashboard","setShowDashboard","setActiveSection","setDeepLinkSubSection","showIndividualOB","setShowIndividualOB","showCompanyOB","setShowCompanyOB","pendingApprovals","setPendingApprovals","searchCache","trackingCache","setTrackingCache","lastRefreshTimestamp","setLastRefreshTimestamp","setCredits","setLoadingCredits","setCurrentPage","setTotalPages","setTotalResults","CACHE_DURATION","TRACKING_CACHE_DURATION","REFRESH_COOLDOWN","fetchTrackedData","now","trackedPersonsResponse","responseData","trackedPersons","transformedTracking","tracked","fetchPendingApprovals","individualsResponse","companiesResponse","individuals","companies","pendingStatuses","pendingIndividuals","ind","pendingCompanies","comp","pendingList","matchPromises","searchResponse","matches","checkedList","customersWithNoMatches","filteredList","refreshInterval","updateTracking","newTrackingStatus","updatedTracking","updatedResults","fetchUserCredits","handleTabChange","shouldRefreshData","handleMatchApproval","customerId","customerType","matchId","matchName","action","updatedApprovals","customerIndex","filteredApprovals","prevApprovals","handleSearch","cacheKey","cachedData","url","results","totalPagesFromServer","totalResultsFromServer","debouncedSearch","debounce","handlePageChange","urlParams","sectionParam","refreshParam","shouldRefresh","subSection","parsedCredits","handleRefreshCredits","React","Eye","match","Login","lazy","__vitePreload","Register","EditProfile","Credits","LoadingSpinner","preloadComponent","importFn","PreloadEditProfile","isAuthenticated","timer","ProtectedRoute","Navigate","App","Router","Suspense","Routes","Route","createRoot","StrictMode"],"ignoreList":[0,1,2],"sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/config.ts","../../src/AuthContext.tsx","../../src/utils/pdfGenerator.ts","../../src/Profiles.tsx","../../src/utils/countries.ts","../../src/IndividualOB.tsx","../../src/CompanyOB.tsx","../../src/components/CustomerList.tsx","../../src/components/CustomerDetails.tsx","../../src/components/ActivityTimeline.tsx","../../src/components/DonutChart.tsx","../../src/Insights.tsx","../../src/ActiveTracking.tsx","../../src/components/ErrorBoundary.tsx","../../src/components/DebugLog.tsx","../../src/components/Layout.tsx","../../src/MainApp.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","export const FRONTEND_URLS = [\n    'https://kycsync.com',\n    'http://kycsync.com'\n];\n\nexport const API_BASE_URLS = [\n    'https://kycsync.com/api',\n    'http://kycsync.com/api'\n];\n\n// Function to get the appropriate API URL based on the environment\nexport const getApiBaseUrl = () => {\n    // Check for environment variables\n    if (typeof window !== 'undefined') {\n        // Use HTTPS by default\n        return API_BASE_URLS[0];\n    }\n    return API_BASE_URLS[0];\n};\n\n// Function to get the appropriate Frontend URL based on the environment\nexport const getFrontendUrl = () => {\n    // Check for environment variables\n    if (typeof window !== 'undefined') {\n        // Use HTTPS by default\n        return FRONTEND_URLS[0];\n    }\n    return FRONTEND_URLS[0];\n}; ","// src/AuthContext.tsx\r\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport type { AuthState, User } from './types';\r\nimport { getApiBaseUrl } from './config';\r\n\r\ninterface AuthContextProps {\r\n    user: User | null;\r\n    isAuthenticated: boolean;\r\n    login: (email: string, password: string) => Promise<boolean>;\r\n    register: (email: string, password: string, name: string, role: string) => Promise<boolean>;\r\n    logout: () => Promise<void>; // Make logout async\r\n    loading: boolean;\r\n}\r\n\r\nconst API_BASE_URL = getApiBaseUrl();\r\n\r\nconst AuthContext = createContext<AuthContextProps>({\r\n    user: null,\r\n    isAuthenticated: false,\r\n    login: async () => false,\r\n    register: async () => false,\r\n    logout: async () => { },\r\n    loading: true,\r\n});\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [authState, setAuthState] = useState<AuthState>({\r\n        user: null,\r\n        isAuthenticated: false,\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const fetchUser = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            // *** IMPORTANT: Include credentials for cross-origin requests ***\r\n            const response = await fetch(`${API_BASE_URL}/auth/user`, { credentials: 'include' });\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setAuthState({ user: data.user, isAuthenticated: true });\r\n            } else {\r\n                setAuthState({ user: null, isAuthenticated: false });\r\n                // Only log an error if it's NOT a 401 (unauthorized)\r\n                if (response.status !== 401) {\r\n                    console.error(\"Failed to fetch user:\", response.status);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching user:\", error);\r\n            setAuthState({ user: null, isAuthenticated: false }); // Clear user on network errors\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchUser();\r\n    }, [fetchUser]);\r\n\r\n    const login = useCallback(async (email: string, password: string) => {\r\n        setLoading(true);  //Set loading here\r\n        try {\r\n            // *** IMPORTANT: Include credentials for cross-origin requests ***\r\n            const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email, password }),\r\n                credentials: 'include', // Send cookies\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setAuthState({ user: data.user, isAuthenticated: true });\r\n                return true;\r\n            } else {\r\n                const errorData = await response.json();\r\n                console.error('Login failed:', errorData.message);\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            return false;\r\n        } finally {\r\n            setLoading(false); // Set loading to false after login attempt\r\n        }\r\n    }, []);\r\n\r\n    const register = useCallback(async (email: string, password: string, name: string, role: string) => {\r\n        setLoading(true); //set loading here\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email, password, name, role }),\r\n                // No 'include' needed for register; it doesn't rely on existing session\r\n            });\r\n\r\n            if (response.ok) {\r\n                // Optionally, auto-login the user after successful registration\r\n                // This would involve calling `login` here.  But, it's often better\r\n                // to let the user explicitly log in.\r\n                return true;\r\n            } else {\r\n                const errorData = await response.json();\r\n                console.error('Registration failed:', errorData.message);\r\n                return false;\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.error('Registration error:', error);\r\n            return false;\r\n        } finally {\r\n          setLoading(false); //set loading to false.\r\n        }\r\n    }, []);\r\n\r\n    const logout = useCallback(async () => {\r\n      setLoading(true);\r\n      try {\r\n          const response = await fetch(`${API_BASE_URL}/auth/logout`, {\r\n              method: 'POST',\r\n              credentials: 'include', // Important for clearing the session cookie\r\n          });\r\n\r\n          if (response.ok) {\r\n              setAuthState({ user: null, isAuthenticated: false });\r\n          } else {\r\n              console.error('Logout failed:', response.status);\r\n          }\r\n      } catch (error) {\r\n          console.error('Logout error:', error);\r\n      } finally {\r\n          setLoading(false);\r\n      }\r\n  }, []);\r\n\r\n\r\n    const contextValue: AuthContextProps = {\r\n        user: authState.user,\r\n        isAuthenticated: authState.isAuthenticated,\r\n        login,\r\n        register,\r\n        logout,\r\n        loading,\r\n    };\r\n\r\n    \r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n          {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { SearchResult } from '../types';\n\nexport const generateCustomerPDF = async (person: SearchResult) => {\n    // Create a PDF document\n    const pdf = new jsPDF('p', 'mm', 'a4');\n    const pageWidth = pdf.internal.pageSize.getWidth();\n    \n    // Set fonts\n    pdf.setFont(\"helvetica\");\n    \n    // Add AML logo text in top left\n    pdf.setTextColor(85, 37, 131); // Purple color\n    pdf.setFontSize(24);\n    pdf.text(\"AML\", 20, 20);\n    pdf.setTextColor(0, 0, 0); // Reset to black\n    \n    // Start directly with Customer Information section\n    let currentY = 40;\n    pdf.setFontSize(14);\n    pdf.setTextColor(0, 0, 0);\n    pdf.text(\"Customer Information\", 20, currentY);\n    \n    // Customer info table\n    currentY += 10;\n    const addInfoRow = (label: string, value: string) => {\n        pdf.setFillColor(240, 240, 240);\n        pdf.rect(20, currentY - 4, pageWidth - 40, 7, 'F');\n        \n        pdf.setFontSize(9);\n        pdf.setTextColor(100, 100, 100);\n        pdf.text(label, 22, currentY);\n        \n        pdf.setTextColor(0, 0, 0);\n        pdf.text(value || 'N/A', 80, currentY);\n        \n        currentY += 7;\n    };\n    \n    // Create rows with only dynamic customer data\n    addInfoRow(\"ID\", person.id.toString());\n    addInfoRow(\"Full Name\", person.name);\n    addInfoRow(\"Country of Residence\", person.country || \"N/A\");\n    addInfoRow(\"Nationality\", person.country || \"N/A\");\n    \n    // Display category info\n    const getCategoryFromDataset = (dataset: string) => {\n        if (dataset === 'onboarded') return 'Onboarded';\n        if (dataset.includes('peps')) return 'PEP';\n        if (dataset.includes('terrorists')) return 'Terrorist';\n        if (dataset.includes('sanctions')) return 'Sanctions';\n        if (dataset.includes('debarment')) return 'Debarred';\n        return dataset;\n    };\n    \n    addInfoRow(\"Name Screening Hit\", person.dataset !== 'onboarded' ? \"YES\" : \"NO\");\n    addInfoRow(\"Category\", getCategoryFromDataset(person.dataset));\n    \n    // Key Findings section\n    currentY += 10;\n    pdf.setFontSize(14);\n    pdf.text(\"Key Findings\", 20, currentY);\n    \n    currentY += 10;\n    addInfoRow(\"Total Matches\", \"0\");\n    addInfoRow(\"Resolved Matches\", \"0\");\n    addInfoRow(\"Unresolved Matches\", \"0\");\n    \n    // Add disclaimer at the bottom\n    const disclaimer = \"This report is generated automatically for AML compliance purposes. This document contains confidential information and should be handled accordingly.\";\n    pdf.setFontSize(8);\n    pdf.setTextColor(120, 120, 120);\n    \n    const splitDisclaimer = pdf.splitTextToSize(disclaimer, pageWidth - 60);\n    pdf.text(splitDisclaimer, pageWidth / 2, 280, { align: 'center' });\n    \n    // Save PDF with person's name\n    const fileName = `Customer_Report_${person.name.replace(/\\s+/g, '_')}.pdf`;\n    pdf.save(fileName);\n}; ","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Loader2, XCircle, CheckCircle, FileText, AlertCircle, ChevronLeft, ChevronRight, ChevronsLeft, ChevronsRight } from 'lucide-react';\r\nimport { useAuth } from './AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getApiBaseUrl } from './config';\r\nimport { generateCustomerPDF } from './utils/pdfGenerator';\r\nimport { SearchResult as AppSearchResult } from './types';\r\n\r\ninterface Tracking {\r\n  [key: string]: {\r\n    isTracking: boolean;\r\n    startDate?: string;\r\n    stopDate?: string;\r\n  };\r\n}\r\n\r\ninterface ProfilesProps {\r\n  searchResults: AppSearchResult[];  // Initial search results from parent\r\n  isLoading: boolean;            // Initial loading state from parent\r\n  currentPage?: number;          // Current page number\r\n  totalPages?: number;           // Total number of pages\r\n  totalResults?: number;         // Total number of results\r\n  onPageChange?: (page: number) => void; // Callback for page changes\r\n}\r\n\r\n// Add confirmation dialog component\r\nconst ConfirmationDialog = ({ isOpen, onConfirm, onCancel, name }: {\r\n  isOpen: boolean,\r\n  onConfirm: () => void,\r\n  onCancel: () => void,\r\n  name: string\r\n}) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 shadow-xl max-w-md w-full\">\r\n        <div className=\"flex items-center mb-4 text-amber-600\">\r\n          <AlertCircle className=\"w-6 h-6 mr-2\" />\r\n          <h3 className=\"text-lg font-semibold\">Confirm Tracking</h3>\r\n        </div>\r\n        <p className=\"mb-4\">\r\n          This action will deduct <span className=\"font-bold\">1 credit</span> from your account to start tracking <span className=\"font-bold\">{name}</span>.\r\n        </p>\r\n        <p className=\"mb-6 text-sm text-gray-600\">\r\n          Credits are only deducted the first time you track a profile. You can pause and resume tracking at any time without additional charges.\r\n        </p>\r\n        <div className=\"flex justify-end space-x-3\">\r\n          <button\r\n            onClick={onCancel}\r\n            className=\"px-4 py-2 text-gray-700 border border-gray-300 rounded-md hover:bg-gray-100\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={onConfirm}\r\n            className=\"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\"\r\n          >\r\n            Confirm\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Profiles({ searchResults = [], isLoading: initialLoading = false, currentPage, totalPages, totalResults, onPageChange }: ProfilesProps) {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const API_BASE_URL = getApiBaseUrl();\r\n\r\n  // Initialize state\r\n  const [tracking, setTracking] = useState<Tracking>({});\r\n  const [trackedResults, setTrackedResults] = useState<AppSearchResult[]>([]);\r\n  const [isLoading, setIsLoading] = useState(initialLoading);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [generatingPdf, setGeneratingPdf] = useState<{[key: number]: boolean}>({});\r\n  const [pageLoading, setPageLoading] = useState(false); // Loading state for pagination\r\n\r\n  // Add state for confirmation dialog\r\n  const [confirmDialog, setConfirmDialog] = useState<{\r\n    isOpen: boolean;\r\n    name: string;\r\n    currentStatus: boolean;\r\n  }>({\r\n    isOpen: false,\r\n    name: '',\r\n    currentStatus: false\r\n  });\r\n\r\n  // Calculate aging with memoization\r\n  const calculateAging = useCallback((result: AppSearchResult): string => {\r\n    const trackingInfo = tracking[result.name];\r\n    \r\n    if (!trackingInfo) return 'None';\r\n    \r\n    if (trackingInfo.isTracking) {\r\n      return trackingInfo.startDate\r\n        ? `${Math.floor((Date.now() - new Date(trackingInfo.startDate).getTime()) / (1000 * 60 * 60 * 24))}D`\r\n        : '0D';\r\n    }\r\n    \r\n    if (trackingInfo.stopDate && trackingInfo.startDate) {\r\n      const diffInDays = Math.floor(\r\n        (new Date(trackingInfo.stopDate).getTime() - new Date(trackingInfo.startDate).getTime()) / \r\n        (1000 * 60 * 60 * 24)\r\n      );\r\n      return `<span style=\"color: red;\">${diffInDays}D</span>`;\r\n    }\r\n    \r\n    return 'None';\r\n  }, [tracking]);\r\n\r\n  // Add safety check for searchResults\r\n  const safeSearchResults = Array.isArray(searchResults) ? searchResults : [];\r\n\r\n  const getRiskColor = (percentage: number): string => {\r\n    if (percentage >= 85) return 'text-red-600';\r\n    if (percentage >= 60) return 'text-yellow-600';\r\n    return 'text-green-600';\r\n  };\r\n\r\n  // Modified to show confirmation dialog\r\n  const handleToggleTracking = (name: string) => {\r\n    const currentTrackingStatus = tracking[name]?.isTracking ?? false;\r\n    \r\n    // If turning off tracking, no need for confirmation\r\n    if (currentTrackingStatus) {\r\n      toggleTracking(name);\r\n      return;\r\n    }\r\n    \r\n    // Check if this profile was ever tracked before (even if inactive now)\r\n    const wasEverTracked = name in tracking;\r\n    \r\n    // If profile was previously tracked, skip confirmation and just toggle\r\n    if (wasEverTracked) {\r\n      toggleTracking(name);\r\n      return;\r\n    }\r\n    \r\n    // Only show confirmation dialog for first-time tracking\r\n    setConfirmDialog({\r\n      isOpen: true,\r\n      name,\r\n      currentStatus: currentTrackingStatus\r\n    });\r\n  };\r\n\r\n  // Confirm tracking change from dialog\r\n  const handleConfirmTracking = () => {\r\n    const { name } = confirmDialog;\r\n    setConfirmDialog(prev => ({ ...prev, isOpen: false }));\r\n    toggleTracking(name);\r\n  };\r\n\r\n  // Cancel tracking change\r\n  const handleCancelTracking = () => {\r\n    setConfirmDialog({ isOpen: false, name: '', currentStatus: false });\r\n  };\r\n\r\n  // Handle page change with loading state and scroll to top\r\n  const changePage = (newPage: number) => {\r\n    if (!onPageChange || newPage < 1 || newPage > (totalPages || 1) || newPage === currentPage) {\r\n      return;\r\n    }\r\n    \r\n    // Show loading state\r\n    setPageLoading(true);\r\n    \r\n    // Scroll to top of the page\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    \r\n    // Call the page change handler\r\n    onPageChange(newPage);\r\n  };\r\n  \r\n  // Watch for searchResults changes to detect when new page data arrives\r\n  useEffect(() => {\r\n    if (pageLoading) {\r\n      setPageLoading(false);\r\n    }\r\n  }, [searchResults]);\r\n\r\n  const toggleTracking = async (name: string) => {\r\n    try {\r\n      const currentTrackingStatus = tracking[name]?.isTracking ?? false;\r\n      const response = await fetch(`${API_BASE_URL}/tracking/${name}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ isTracking: !currentTrackingStatus }),\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          navigate('/login');\r\n          return;\r\n        }\r\n        \r\n        // Handle insufficient credits error\r\n        if (response.status === 402) {\r\n          const data = await response.json();\r\n          if (data.needCredits) {\r\n            alert('You do not have enough credits to track this profile. Please purchase more credits.');\r\n            navigate('/credits');\r\n            return;\r\n          }\r\n        }\r\n        \r\n        throw new Error('Failed to update tracking');\r\n      }\r\n\r\n      setTracking(prev => ({\r\n        ...prev,\r\n        [name]: {\r\n          ...prev[name],\r\n          isTracking: !currentTrackingStatus,\r\n          startDate: !currentTrackingStatus ? new Date().toISOString() : prev[name]?.startDate,\r\n          stopDate: currentTrackingStatus ? new Date().toISOString() : undefined\r\n        }\r\n      }));\r\n\r\n    } catch (error) {\r\n      console.error('Error updating tracking:', error);\r\n    }\r\n  };\r\n\r\n  const handleGeneratePDF = async (person: AppSearchResult) => {\r\n    try {\r\n      // Set PDF generation status for this person\r\n      setGeneratingPdf(prev => ({ ...prev, [person.id]: true }));\r\n      \r\n      // Generate the PDF\r\n      await generateCustomerPDF(person);\r\n      \r\n      // Reset PDF generation status\r\n      setGeneratingPdf(prev => ({ ...prev, [person.id]: false }));\r\n    } catch (error) {\r\n      console.error('Error generating PDF:', error);\r\n      setGeneratingPdf(prev => ({ ...prev, [person.id]: false }));\r\n      alert('Failed to generate PDF. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Show error state if there's an error\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\r\n          <strong className=\"font-bold\">Error: </strong>\r\n          <span className=\"block sm:inline\">{error}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <Loader2 className=\"w-8 h-8 animate-spin text-purple-600\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"overflow-x-auto relative\">\r\n            {pageLoading && (\r\n              <div className=\"absolute inset-0 bg-white bg-opacity-70 flex items-center justify-center z-10\">\r\n                <div className=\"flex flex-col items-center\">\r\n                  <Loader2 className=\"w-8 h-8 animate-spin text-purple-600\" />\r\n                  <p className=\"mt-2 text-sm text-purple-700 font-medium\">Loading results...</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <table className=\"w-full\">\r\n              <thead>\r\n                <tr className=\"text-left text-sm text-gray-500\">\r\n                  <th className=\"pb-4 px-6 whitespace-nowrap\">CUSTOMER</th>\r\n                  <th className=\"pb-4 px-6 whitespace-nowrap text-center\">FULL NAME</th>\r\n                  <th className=\"pb-4 px-6 whitespace-nowrap text-center\">NATIONALITY</th>\r\n                  <th className=\"pb-4 px-6 whitespace-nowrap text-center\">AGING</th>\r\n                  <th className=\"pb-4 px-6 whitespace-nowrap text-center\">NAME SCREENING</th>\r\n                  <th className=\"pb-4 px-6 whitespace-nowrap text-center\">CATEGORY</th>\r\n                  <th className=\"pb-4 px-6 whitespace-nowrap text-center\">DOCUMENTATION</th>\r\n                  <th className=\"pb-4 px-6 whitespace-nowrap text-center\">RISK RATING</th>\r\n                  <th className=\"pb-4 px-6 whitespace-nowrap text-center\">STATUS</th>\r\n                  <th className=\"pb-4 px-6 whitespace-nowrap text-center\">TRACKING</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {safeSearchResults.map((result, index) => (\r\n                  <tr key={`search-${index}`} className=\"border-t border-gray-100 hover:bg-gray-50\">\r\n                    <td className=\"py-4 px-6\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <img src={`https://ui-avatars.com/api/?name=${result.name}`} alt={result.name} className=\"w-8 h-8 rounded-full\" />\r\n                        <span className=\"text-sm\">{result.identifiers}</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-4 px-6 text-sm text-center\">{result.name}</td>\r\n                    <td className=\"py-4 px-6 text-sm text-center\">\r\n                      {result.country && result.country !== 'Unknown' && result.country !== 'N/A' ? (\r\n                        <div className=\"flex items-center justify-center\">\r\n                          <img \r\n                            src={`https://flagcdn.com/w20/${result.country.toLowerCase()}.png`}\r\n                            alt={result.country}\r\n                            className=\"mr-2 h-3 rounded shadow-sm\"\r\n                            title={result.country}\r\n                          />\r\n                          {result.country}\r\n                        </div>\r\n                      ) : (\r\n                        \"-\"\r\n                      )}\r\n                    </td>\r\n                    <td className=\"py-4 px-6 text-sm text-center\" dangerouslySetInnerHTML={{ __html: calculateAging(result) }} />\r\n                    <td className=\"py-4 px-6 text-center\">\r\n                      <div className=\"flex justify-center\">\r\n                        <div className=\"w-6 h-6 rounded-full bg-red-100 flex items-center justify-center\">\r\n                          <XCircle className=\"w-4 h-4 text-red-500\" />\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-4 px-6 text-center\">\r\n                      {result.dataset ? (\r\n                        <span className={`px-2 py-1 text-xs rounded-full ${\r\n                          result.dataset === 'onboarded' \r\n                            ? 'bg-green-100 text-green-700'\r\n                            : result.dataset.includes('peps')\r\n                              ? 'bg-yellow-100 text-yellow-700'\r\n                              : result.dataset.includes('terrorists')\r\n                                ? 'bg-red-100 text-red-700'\r\n                                : result.dataset.includes('sanctions')\r\n                                  ? 'bg-orange-100 text-orange-700'\r\n                                  : result.dataset.includes('debarment')\r\n                                    ? 'bg-purple-100 text-purple-700'\r\n                                    : 'bg-blue-100 text-blue-700'\r\n                        }`}>\r\n                          {result.dataset === 'onboarded' \r\n                            ? 'Onboarded' \r\n                            : result.dataset.includes('peps') \r\n                              ? 'PEP' \r\n                              : result.dataset.includes('terrorists') \r\n                                ? 'Terrorist' \r\n                                : result.dataset.includes('sanctions') \r\n                                  ? 'Sanctions' \r\n                                  : result.dataset.includes('debarment') \r\n                                    ? 'Debarred' \r\n                                    : result.dataset}\r\n                        </span>\r\n                      ) : (\r\n                        <span>-</span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"py-4 px-6 text-center\">\r\n                      <div className=\"flex justify-center\">\r\n                        <button \r\n                          onClick={() => handleGeneratePDF(result)}\r\n                          disabled={generatingPdf[result.id]}\r\n                          className=\"flex items-center justify-center bg-blue-50 hover:bg-blue-100 text-blue-700 p-2 rounded-full transition-colors duration-200\"\r\n                          title=\"Download Report\"\r\n                        >\r\n                          {generatingPdf[result.id] ? (\r\n                            <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                          ) : (\r\n                            <FileText className=\"w-4 h-4\" />\r\n                          )}\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-4 px-6 text-center\">\r\n                      <span className={`text-sm ${getRiskColor(result.riskLevel)}`}>{result.riskLevel}%</span>\r\n                    </td>\r\n                    <td className=\"py-4 px-6 text-center\">\r\n                      <div className=\"flex justify-center\">\r\n                        <span className=\"px-2 py-1 text-xs rounded-full bg-yellow-100 text-yellow-800\">Review</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-4 px-6 text-center\">\r\n                      <div className=\"flex justify-center\">\r\n                        <button\r\n                          onClick={() => handleToggleTracking(result.name)}\r\n                          className={`w-8 h-5 rounded-full flex items-center transition-colors duration-300 focus:outline-none ${\r\n                            tracking[result.name]?.isTracking ? 'bg-purple-500' : 'bg-gray-300'\r\n                          }`}\r\n                        >\r\n                          <div\r\n                            className={`w-3 h-3 rounded-full bg-white shadow-md transform transition-transform duration-300 ${\r\n                              tracking[result.name]?.isTracking ? 'translate-x-4' : 'translate-x-1'\r\n                            }`}\r\n                          ></div>\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                {safeSearchResults.length === 0 && !isLoading && (\r\n                  <tr>\r\n                    <td colSpan={10} className=\"py-4 px-6 text-center text-gray-500\">\r\n                      No results found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          {/* Pagination */}\r\n          {totalPages && totalPages > 1 && onPageChange && (\r\n            <div className=\"mt-6 flex items-center justify-between\">\r\n              <div className=\"text-sm text-gray-500\">\r\n                Showing page {currentPage} of {totalPages} ({totalResults} total results)\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                {/* First page button */}\r\n                <button\r\n                  onClick={() => changePage(1)}\r\n                  disabled={currentPage === 1 || pageLoading}\r\n                  className={`p-2 rounded-md ${\r\n                    currentPage === 1 || pageLoading\r\n                      ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                      : 'bg-purple-100 text-purple-700 hover:bg-purple-200'\r\n                  }`}\r\n                  aria-label=\"First page\"\r\n                >\r\n                  <ChevronsLeft className=\"w-4 h-4\" />\r\n                </button>\r\n                \r\n                {/* Previous page button */}\r\n                <button\r\n                  onClick={() => changePage(currentPage! - 1)}\r\n                  disabled={currentPage === 1 || pageLoading}\r\n                  className={`p-2 rounded-md ${\r\n                    currentPage === 1 || pageLoading\r\n                      ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                      : 'bg-purple-100 text-purple-700 hover:bg-purple-200'\r\n                  }`}\r\n                  aria-label=\"Previous page\"\r\n                >\r\n                  <ChevronLeft className=\"w-4 h-4\" />\r\n                </button>\r\n                \r\n                {/* Page selector */}\r\n                <div className=\"flex items-center px-2\">\r\n                  <select\r\n                    value={currentPage}\r\n                    onChange={(e) => changePage(Number(e.target.value))}\r\n                    disabled={pageLoading}\r\n                    className=\"px-2 py-1 border border-gray-300 rounded text-sm bg-white\"\r\n                  >\r\n                    {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\r\n                      <option key={page} value={page}>\r\n                        {page}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                \r\n                {/* Next page button */}\r\n                <button\r\n                  onClick={() => changePage(currentPage! + 1)}\r\n                  disabled={currentPage === totalPages || pageLoading}\r\n                  className={`p-2 rounded-md ${\r\n                    currentPage === totalPages || pageLoading\r\n                      ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                      : 'bg-purple-100 text-purple-700 hover:bg-purple-200'\r\n                  }`}\r\n                  aria-label=\"Next page\"\r\n                >\r\n                  <ChevronRight className=\"w-4 h-4\" />\r\n                </button>\r\n                \r\n                {/* Last page button */}\r\n                <button\r\n                  onClick={() => changePage(totalPages!)}\r\n                  disabled={currentPage === totalPages || pageLoading}\r\n                  className={`p-2 rounded-md ${\r\n                    currentPage === totalPages || pageLoading\r\n                      ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                      : 'bg-purple-100 text-purple-700 hover:bg-purple-200'\r\n                  }`}\r\n                  aria-label=\"Last page\"\r\n                >\r\n                  <ChevronsRight className=\"w-4 h-4\" />\r\n                </button>\r\n                \r\n                {/* Loading indicator */}\r\n                {pageLoading && (\r\n                  <span className=\"ml-2\">\r\n                    <Loader2 className=\"w-4 h-4 animate-spin text-purple-600\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Confirmation Dialog */}\r\n      <ConfirmationDialog\r\n        isOpen={confirmDialog.isOpen}\r\n        onConfirm={handleConfirmTracking}\r\n        onCancel={handleCancelTracking}\r\n        name={confirmDialog.name}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profiles;","export interface Country {\r\n  code: string;\r\n  name: string;\r\n}\r\n\r\nexport const countriesList: Country[] = [\r\n  { code: \"AF\", name: \"Afghanistan\" },\r\n  { code: \"AL\", name: \"Albania\" },\r\n  { code: \"DZ\", name: \"Algeria\" },\r\n  { code: \"AD\", name: \"Andorra\" },\r\n  { code: \"AO\", name: \"Angola\" },\r\n  { code: \"AG\", name: \"Antigua and Barbuda\" },\r\n  { code: \"AR\", name: \"Argentina\" },\r\n  { code: \"AM\", name: \"Armenia\" },\r\n  { code: \"AU\", name: \"Australia\" },\r\n  { code: \"AT\", name: \"Austria\" },\r\n  { code: \"AZ\", name: \"Azerbaijan\" },\r\n  { code: \"BS\", name: \"Bahamas\" },\r\n  { code: \"BH\", name: \"Bahrain\" },\r\n  { code: \"BD\", name: \"Bangladesh\" },\r\n  { code: \"BB\", name: \"Barbados\" },\r\n  { code: \"BY\", name: \"Belarus\" },\r\n  { code: \"BE\", name: \"Belgium\" },\r\n  { code: \"BZ\", name: \"Belize\" },\r\n  { code: \"BJ\", name: \"Benin\" },\r\n  { code: \"BT\", name: \"Bhutan\" },\r\n  { code: \"BO\", name: \"Bolivia\" },\r\n  { code: \"BA\", name: \"Bosnia and Herzegovina\" },\r\n  { code: \"BW\", name: \"Botswana\" },\r\n  { code: \"BR\", name: \"Brazil\" },\r\n  { code: \"BN\", name: \"Brunei\" },\r\n  { code: \"BG\", name: \"Bulgaria\" },\r\n  { code: \"BF\", name: \"Burkina Faso\" },\r\n  { code: \"BI\", name: \"Burundi\" },\r\n  { code: \"CV\", name: \"Cabo Verde\" },\r\n  { code: \"KH\", name: \"Cambodia\" },\r\n  { code: \"CM\", name: \"Cameroon\" },\r\n  { code: \"CA\", name: \"Canada\" },\r\n  { code: \"CF\", name: \"Central African Republic\" },\r\n  { code: \"TD\", name: \"Chad\" },\r\n  { code: \"CL\", name: \"Chile\" },\r\n  { code: \"CN\", name: \"China\" },\r\n  { code: \"CO\", name: \"Colombia\" },\r\n  { code: \"KM\", name: \"Comoros\" },\r\n  { code: \"CG\", name: \"Congo\" },\r\n  { code: \"CD\", name: \"Congo (Democratic Republic)\" },\r\n  { code: \"CR\", name: \"Costa Rica\" },\r\n  { code: \"CI\", name: \"Côte d'Ivoire\" },\r\n  { code: \"HR\", name: \"Croatia\" },\r\n  { code: \"CU\", name: \"Cuba\" },\r\n  { code: \"CY\", name: \"Cyprus\" },\r\n  { code: \"CZ\", name: \"Czech Republic\" },\r\n  { code: \"DK\", name: \"Denmark\" },\r\n  { code: \"DJ\", name: \"Djibouti\" },\r\n  { code: \"DM\", name: \"Dominica\" },\r\n  { code: \"DO\", name: \"Dominican Republic\" },\r\n  { code: \"EC\", name: \"Ecuador\" },\r\n  { code: \"EG\", name: \"Egypt\" },\r\n  { code: \"SV\", name: \"El Salvador\" },\r\n  { code: \"GQ\", name: \"Equatorial Guinea\" },\r\n  { code: \"ER\", name: \"Eritrea\" },\r\n  { code: \"EE\", name: \"Estonia\" },\r\n  { code: \"SZ\", name: \"Eswatini\" },\r\n  { code: \"ET\", name: \"Ethiopia\" },\r\n  { code: \"FJ\", name: \"Fiji\" },\r\n  { code: \"FI\", name: \"Finland\" },\r\n  { code: \"FR\", name: \"France\" },\r\n  { code: \"GA\", name: \"Gabon\" },\r\n  { code: \"GM\", name: \"Gambia\" },\r\n  { code: \"GE\", name: \"Georgia\" },\r\n  { code: \"DE\", name: \"Germany\" },\r\n  { code: \"GH\", name: \"Ghana\" },\r\n  { code: \"GR\", name: \"Greece\" },\r\n  { code: \"GD\", name: \"Grenada\" },\r\n  { code: \"GT\", name: \"Guatemala\" },\r\n  { code: \"GN\", name: \"Guinea\" },\r\n  { code: \"GW\", name: \"Guinea-Bissau\" },\r\n  { code: \"GY\", name: \"Guyana\" },\r\n  { code: \"HT\", name: \"Haiti\" },\r\n  { code: \"HN\", name: \"Honduras\" },\r\n  { code: \"HU\", name: \"Hungary\" },\r\n  { code: \"IS\", name: \"Iceland\" },\r\n  { code: \"IN\", name: \"India\" },\r\n  { code: \"ID\", name: \"Indonesia\" },\r\n  { code: \"IR\", name: \"Iran\" },\r\n  { code: \"IQ\", name: \"Iraq\" },\r\n  { code: \"IE\", name: \"Ireland\" },\r\n  { code: \"IL\", name: \"Israel\" },\r\n  { code: \"IT\", name: \"Italy\" },\r\n  { code: \"JM\", name: \"Jamaica\" },\r\n  { code: \"JP\", name: \"Japan\" },\r\n  { code: \"JO\", name: \"Jordan\" },\r\n  { code: \"KZ\", name: \"Kazakhstan\" },\r\n  { code: \"KE\", name: \"Kenya\" },\r\n  { code: \"KI\", name: \"Kiribati\" },\r\n  { code: \"KP\", name: \"Korea, North\" },\r\n  { code: \"KR\", name: \"Korea, South\" },\r\n  { code: \"KW\", name: \"Kuwait\" },\r\n  { code: \"KG\", name: \"Kyrgyzstan\" },\r\n  { code: \"LA\", name: \"Laos\" },\r\n  { code: \"LV\", name: \"Latvia\" },\r\n  { code: \"LB\", name: \"Lebanon\" },\r\n  { code: \"LS\", name: \"Lesotho\" },\r\n  { code: \"LR\", name: \"Liberia\" },\r\n  { code: \"LY\", name: \"Libya\" },\r\n  { code: \"LI\", name: \"Liechtenstein\" },\r\n  { code: \"LT\", name: \"Lithuania\" },\r\n  { code: \"LU\", name: \"Luxembourg\" },\r\n  { code: \"MG\", name: \"Madagascar\" },\r\n  { code: \"MW\", name: \"Malawi\" },\r\n  { code: \"MY\", name: \"Malaysia\" },\r\n  { code: \"MV\", name: \"Maldives\" },\r\n  { code: \"ML\", name: \"Mali\" },\r\n  { code: \"MT\", name: \"Malta\" },\r\n  { code: \"MH\", name: \"Marshall Islands\" },\r\n  { code: \"MR\", name: \"Mauritania\" },\r\n  { code: \"MU\", name: \"Mauritius\" },\r\n  { code: \"MX\", name: \"Mexico\" },\r\n  { code: \"FM\", name: \"Micronesia\" },\r\n  { code: \"MD\", name: \"Moldova\" },\r\n  { code: \"MC\", name: \"Monaco\" },\r\n  { code: \"MN\", name: \"Mongolia\" },\r\n  { code: \"ME\", name: \"Montenegro\" },\r\n  { code: \"MA\", name: \"Morocco\" },\r\n  { code: \"MZ\", name: \"Mozambique\" },\r\n  { code: \"MM\", name: \"Myanmar\" },\r\n  { code: \"NA\", name: \"Namibia\" },\r\n  { code: \"NR\", name: \"Nauru\" },\r\n  { code: \"NP\", name: \"Nepal\" },\r\n  { code: \"NL\", name: \"Netherlands\" },\r\n  { code: \"NZ\", name: \"New Zealand\" },\r\n  { code: \"NI\", name: \"Nicaragua\" },\r\n  { code: \"NE\", name: \"Niger\" },\r\n  { code: \"NG\", name: \"Nigeria\" },\r\n  { code: \"MK\", name: \"North Macedonia\" },\r\n  { code: \"NO\", name: \"Norway\" },\r\n  { code: \"OM\", name: \"Oman\" },\r\n  { code: \"PK\", name: \"Pakistan\" },\r\n  { code: \"PW\", name: \"Palau\" },\r\n  { code: \"PS\", name: \"Palestine\" },\r\n  { code: \"PA\", name: \"Panama\" },\r\n  { code: \"PG\", name: \"Papua New Guinea\" },\r\n  { code: \"PY\", name: \"Paraguay\" },\r\n  { code: \"PE\", name: \"Peru\" },\r\n  { code: \"PH\", name: \"Philippines\" },\r\n  { code: \"PL\", name: \"Poland\" },\r\n  { code: \"PT\", name: \"Portugal\" },\r\n  { code: \"QA\", name: \"Qatar\" },\r\n  { code: \"RO\", name: \"Romania\" },\r\n  { code: \"RU\", name: \"Russia\" },\r\n  { code: \"RW\", name: \"Rwanda\" },\r\n  { code: \"KN\", name: \"Saint Kitts and Nevis\" },\r\n  { code: \"LC\", name: \"Saint Lucia\" },\r\n  { code: \"VC\", name: \"Saint Vincent and the Grenadines\" },\r\n  { code: \"WS\", name: \"Samoa\" },\r\n  { code: \"SM\", name: \"San Marino\" },\r\n  { code: \"ST\", name: \"Sao Tome and Principe\" },\r\n  { code: \"SA\", name: \"Saudi Arabia\" },\r\n  { code: \"SN\", name: \"Senegal\" },\r\n  { code: \"RS\", name: \"Serbia\" },\r\n  { code: \"SC\", name: \"Seychelles\" },\r\n  { code: \"SL\", name: \"Sierra Leone\" },\r\n  { code: \"SG\", name: \"Singapore\" },\r\n  { code: \"SK\", name: \"Slovakia\" },\r\n  { code: \"SI\", name: \"Slovenia\" },\r\n  { code: \"SB\", name: \"Solomon Islands\" },\r\n  { code: \"SO\", name: \"Somalia\" },\r\n  { code: \"ZA\", name: \"South Africa\" },\r\n  { code: \"SS\", name: \"South Sudan\" },\r\n  { code: \"ES\", name: \"Spain\" },\r\n  { code: \"LK\", name: \"Sri Lanka\" },\r\n  { code: \"SD\", name: \"Sudan\" },\r\n  { code: \"SR\", name: \"Suriname\" },\r\n  { code: \"SE\", name: \"Sweden\" },\r\n  { code: \"CH\", name: \"Switzerland\" },\r\n  { code: \"SY\", name: \"Syria\" },\r\n  { code: \"TW\", name: \"Taiwan\" },\r\n  { code: \"TJ\", name: \"Tajikistan\" },\r\n  { code: \"TZ\", name: \"Tanzania\" },\r\n  { code: \"TH\", name: \"Thailand\" },\r\n  { code: \"TL\", name: \"Timor-Leste\" },\r\n  { code: \"TG\", name: \"Togo\" },\r\n  { code: \"TO\", name: \"Tonga\" },\r\n  { code: \"TT\", name: \"Trinidad and Tobago\" },\r\n  { code: \"TN\", name: \"Tunisia\" },\r\n  { code: \"TR\", name: \"Turkey\" },\r\n  { code: \"TM\", name: \"Turkmenistan\" },\r\n  { code: \"TV\", name: \"Tuvalu\" },\r\n  { code: \"UG\", name: \"Uganda\" },\r\n  { code: \"UA\", name: \"Ukraine\" },\r\n  { code: \"AE\", name: \"United Arab Emirates\" },\r\n  { code: \"GB\", name: \"United Kingdom\" },\r\n  { code: \"US\", name: \"United States\" },\r\n  { code: \"UY\", name: \"Uruguay\" },\r\n  { code: \"UZ\", name: \"Uzbekistan\" },\r\n  { code: \"VU\", name: \"Vanuatu\" },\r\n  { code: \"VA\", name: \"Vatican City\" },\r\n  { code: \"VE\", name: \"Venezuela\" },\r\n  { code: \"VN\", name: \"Vietnam\" },\r\n  { code: \"YE\", name: \"Yemen\" },\r\n  { code: \"ZM\", name: \"Zambia\" },\r\n  { code: \"ZW\", name: \"Zimbabwe\" }\r\n];\r\n\r\n// Common states/provinces for selected countries\r\nexport const statesByCountry: Record<string, string[]> = {\r\n  US: [\r\n    \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \r\n    \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \r\n    \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \r\n    \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \r\n    \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \r\n    \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \r\n    \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \r\n    \"Wisconsin\", \"Wyoming\"\r\n  ],\r\n  CA: [\r\n    \"Alberta\", \"British Columbia\", \"Manitoba\", \"New Brunswick\", \"Newfoundland and Labrador\", \r\n    \"Northwest Territories\", \"Nova Scotia\", \"Nunavut\", \"Ontario\", \"Prince Edward Island\", \r\n    \"Quebec\", \"Saskatchewan\", \"Yukon\"\r\n  ],\r\n  GB: [\r\n    \"England\", \"Northern Ireland\", \"Scotland\", \"Wales\"\r\n  ],\r\n  AU: [\r\n    \"Australian Capital Territory\", \"New South Wales\", \"Northern Territory\", \"Queensland\", \r\n    \"South Australia\", \"Tasmania\", \"Victoria\", \"Western Australia\"\r\n  ],\r\n  IN: [\r\n    \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \r\n    \"Haryana\", \"Himachal Pradesh\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \r\n    \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \r\n    \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \r\n    \"West Bengal\"\r\n  ],\r\n  CN: [\r\n    \"Anhui\", \"Beijing\", \"Chongqing\", \"Fujian\", \"Gansu\", \"Guangdong\", \"Guangxi\", \"Guizhou\", \r\n    \"Hainan\", \"Hebei\", \"Heilongjiang\", \"Henan\", \"Hubei\", \"Hunan\", \"Inner Mongolia\", \"Jiangsu\", \r\n    \"Jiangxi\", \"Jilin\", \"Liaoning\", \"Ningxia\", \"Qinghai\", \"Shaanxi\", \"Shandong\", \"Shanghai\", \r\n    \"Shanxi\", \"Sichuan\", \"Tianjin\", \"Tibet\", \"Xinjiang\", \"Yunnan\", \"Zhejiang\"\r\n  ]\r\n};\r\n\r\n// Function to get sorted countries\r\nexport const getSortedCountries = (): Country[] => {\r\n  return [...countriesList].sort((a, b) => a.name.localeCompare(b.name));\r\n}; ","import React, { useState } from 'react';\nimport { Calendar } from 'lucide-react';\nimport { useAuth } from './AuthContext'; // Import useAuth\nimport { getApiBaseUrl } from './config';\nimport { useNavigate } from 'react-router-dom';\nimport { getSortedCountries, statesByCountry } from './utils/countries';\n\nfunction IndividualOB() {\n    const API_BASE_URL = getApiBaseUrl();\n    const navigate = useNavigate();\n    const [fullName, setFullName] = useState('');\n    const [email, setEmail] = useState('');\n    const [residentStatus, setResidentStatus] = useState('');\n    const [gender, setGender] = useState('');\n    const [dateOfBirth, setDateOfBirth] = useState('');\n    const [nationality, setNationality] = useState('');\n    const [countryOfResidence, setCountryOfResidence] = useState('');\n    const [otherNationalities, setOtherNationalities] = useState(false);\n    const [specifiedOtherNationalities, setSpecifiedOtherNationalities] = useState('');\n    const [nationalIdNumber, setNationalIdNumber] = useState('');\n    const [nationalIdExpiry, setNationalIdExpiry] = useState('');\n    const [passportNumber, setPassportNumber] = useState('');\n    const [passportExpiry, setPassportExpiry] = useState('');\n    const [address, setAddress] = useState('');\n    const [state, setState] = useState('');\n    const [city, setCity] = useState('');\n    const [zipCode, setZipCode] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [dialingCode, setDialingCode] = useState('');\n    const [workType, setWorkType] = useState('');\n    const [industry, setIndustry] = useState('');\n    const [productTypeOffered, setProductTypeOffered] = useState('');\n    const [productOffered, setProductOffered] = useState('');\n    const [companyName, setCompanyName] = useState('');\n    const [positionInCompany, setPositionInCompany] = useState('');\n\n    // Get sorted countries list\n    const countries = getSortedCountries();\n\n    // Get states for selected country\n    const states = countryOfResidence ? statesByCountry[countryOfResidence] || [] : [];\n\n    const { user } = useAuth(); // Use useAuth to get the user\n\n    const handleSubmit = async (event: React.FormEvent) => {\n        event.preventDefault();\n\n        // Basic client-side validation (mirror server-side)\n        if (!fullName || !email) {\n            alert(\"Full Name and Email are required.\"); // Or use a more sophisticated UI element\n            return;\n        }\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(email)) {\n            alert(\"Invalid email format.\");\n            return;\n        }\n         // Convert date strings to ISO format (YYYY-MM-DD) for consistency with MySQL DATE type\n        const formatDate = (dateString: string) => {\n          if (!dateString) return null; // Handle empty date strings\n           return new Date(dateString).toISOString().split('T')[0];\n        };\n\n        const formData = {\n            fullName,\n            email,\n            residentStatus,\n            gender,\n            dateOfBirth: formatDate(dateOfBirth), // Format the date\n            nationality,\n            countryOfResidence,\n            otherNationalities,\n            specifiedOtherNationalities,\n            nationalIdNumber,\n            nationalIdExpiry: formatDate(nationalIdExpiry),  // Format the date\n            passportNumber,\n            passportExpiry: formatDate(passportExpiry), // Format the date\n            address,\n            state,\n            city,\n            zipCode,\n            contactNumber,\n            dialingCode,\n            workType,\n            industry,\n            productTypeOffered,\n            productOffered,\n            companyName,\n            positionInCompany\n        };\n\n        try {\n            const response = await fetch(`${API_BASE_URL}/registerIndividual`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formData),\n                credentials: 'include', // Ensure credentials are sent\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                alert(\"Individual registration successful! Redirecting to Active Tracking.\");\n                \n                // Reset all form fields\n                setFullName('');\n                setEmail('');\n                setResidentStatus('');\n                setGender('');\n                setDateOfBirth('');\n                setNationality('');\n                setCountryOfResidence('');\n                setOtherNationalities(false);\n                setSpecifiedOtherNationalities('');\n                setNationalIdNumber('');\n                setNationalIdExpiry('');\n                setPassportNumber('');\n                setPassportExpiry('');\n                setAddress('');\n                setState('');\n                setCity('');\n                setZipCode('');\n                setContactNumber('');\n                setDialingCode('');\n                setWorkType('');\n                setIndustry('');\n                setProductTypeOffered('');\n                setProductOffered('');\n                setCompanyName('');\n                setPositionInCompany('');\n                \n                // Redirect to Active Tracking tab using URL parameters instead of state\n                const params = new URLSearchParams({\n                    section: 'activeTracking',\n                    refresh: 'true',\n                    t: Date.now().toString()\n                });\n                \n                // Use window.location for a clean navigation\n                window.location.href = `/mainapp?${params.toString()}`;\n            } else {\n                alert(data.message || 'Registration failed'); // Show server error message\n            }\n        } catch (error) {\n            console.error('Error submitting form:', error);\n            alert('An error occurred during submission. Please try again.'); // Network error\n        }\n    };\n\n    return (\n        <div className=\"p-8 bg-gray-50\">\n            <h1 className=\"text-3xl font-bold mb-6\">Register Individual Profile</h1>\n            <p className=\"mb-8 text-gray-600\">Complete the form below to register individual profile.</p>\n            \n            <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-3 gap-6 bg-white p-6 rounded-2xl shadow-lg\">\n                {/* Personal Information */}\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">FULL NAME</label>\n                    <input\n                        type=\"text\"\n                        value={fullName}\n                        onChange={(e) => setFullName(e.target.value)}\n                        placeholder=\"Enter full name\"\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">EMAIL</label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        placeholder=\"Enter email\"\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">RESIDENT STATUS</label>\n                    <select\n                        value={residentStatus}\n                        onChange={(e) => setResidentStatus(e.target.value)}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    >\n                        <option value=\"\">Select Resident Status</option>\n                        <option value=\"citizen\">Citizen</option>\n                        <option value=\"resident\">Resident</option>\n                        <option value=\"non-resident\">Non-Resident</option>\n                    </select>\n                </div>\n\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">GENDER</label>\n                    <select\n                        value={gender}\n                        onChange={(e) => setGender(e.target.value)}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    >\n                        <option value=\"\">Select Gender</option>\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                        <option value=\"other\">Other</option>\n                    </select>\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">DATE OF BIRTH</label>\n                    <input\n                        type=\"date\"\n                        value={dateOfBirth}\n                        onChange={(e) => setDateOfBirth(e.target.value)}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">NATIONALITY</label>\n                    <select\n                        value={nationality}\n                        onChange={(e) => setNationality(e.target.value)}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    >\n                        <option value=\"\">Select Nationality</option>\n                        {countries.map((country) => (\n                            <option key={`nat-${country.code}`} value={country.code}>\n                                {country.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">COUNTRY OF RESIDENCE</label>\n                    <select\n                        value={countryOfResidence}\n                        onChange={(e) => setCountryOfResidence(e.target.value)}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    >\n                        <option value=\"\">Select Country of Residence</option>\n                        {countries.map((country) => (\n                            <option key={`res-${country.code}`} value={country.code}>\n                                {country.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">DO YOU HAVE OTHER NATIONALITIES?</label>\n                    <div className=\"mt-1 flex space-x-4\">\n                        <label className=\"inline-flex items-center\">\n                            <input\n                                type=\"radio\"\n                                value=\"yes\"\n                                checked={otherNationalities === true}\n                                onChange={() => setOtherNationalities(true)}\n                                className=\"form-radio h-4 w-4 text-indigo-600 border-gray-300 focus:ring-indigo-500\"\n                            />\n                            <span className=\"ml-2\">Yes</span>\n                        </label>\n                        <label className=\"inline-flex items-center\">\n                            <input\n                                type=\"radio\"\n                                value=\"no\"\n                                checked={otherNationalities === false}\n                                onChange={() => setOtherNationalities(false)}\n                                className=\"form-radio h-4 w-4 text-indigo-600 border-gray-300 focus:ring-indigo-500\"\n                            />\n                            <span className=\"ml-2\">No</span>\n                        </label>\n                    </div>\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">SPECIFY OTHER NATIONALITIES (IF APPLICABLE)</label>\n                    <select\n                        value={specifiedOtherNationalities}\n                        onChange={(e) => setSpecifiedOtherNationalities(e.target.value)}\n                        disabled={!otherNationalities}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-100 disabled:cursor-not-allowed\"\n                    >\n                        <option value=\"\">Select Other Nationalities</option>\n                        {countries.map((country) => (\n                            <option key={`other-${country.code}`} value={country.code}>\n                                {country.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">NATIONAL ID NUMBER</label>\n                    <input\n                        type=\"text\"\n                        value={nationalIdNumber}\n                        onChange={(e) => setNationalIdNumber(e.target.value)}\n                        placeholder=\"Enter National ID Number\"\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">NATIONAL ID EXPIRY</label>\n                    <input\n                        type=\"date\"\n                        value={nationalIdExpiry}\n                        onChange={(e) => setNationalIdExpiry(e.target.value)}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">PASSPORT NUMBER</label>\n                    <input\n                        type=\"text\"\n                        value={passportNumber}\n                        onChange={(e) => setPassportNumber(e.target.value)}\n                        placeholder=\"Enter Passport Number\"\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">PASSPORT EXPIRY</label>\n                    <input\n                        type=\"date\"\n                        value={passportExpiry}\n                        onChange={(e) => setPassportExpiry(e.target.value)}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n\n                {/* Contact Information - Section Header */}\n                <div className=\"md:col-span-3 mt-6\">\n                    <h2 className=\"text-xl font-semibold text-gray-900\">Contact Information</h2>\n                </div>\n\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">ADDRESS</label>\n                    <input\n                        type=\"text\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                        placeholder=\"Enter address\"\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">STATE</label>\n                    <select\n                        value={state}\n                        onChange={(e) => setState(e.target.value)}\n                        disabled={!countryOfResidence || states.length === 0}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-100 disabled:cursor-not-allowed\"\n                    >\n                        <option value=\"\">Select State</option>\n                        {states.map((stateName) => (\n                            <option key={stateName} value={stateName}>\n                                {stateName}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">CITY</label>\n                    <input \n                        type=\"text\" \n                        value={city} \n                        onChange={(e) => setCity(e.target.value)} \n                        placeholder=\"Enter city\" \n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" \n                    />\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">ZIP CODE/POSTAL CODE</label>\n                    <input\n                        type=\"text\"\n                        value={zipCode}\n                        onChange={(e) => setZipCode(e.target.value)}\n                        placeholder=\"Enter zip code\"\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">DIALING CODE</label>\n                    <input\n                        type=\"text\"\n                        value={dialingCode}\n                        onChange={(e) => setDialingCode(e.target.value)}\n                        placeholder=\"e.g., +1\"\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">CONTACT NUMBER</label>\n                    <input\n                        type=\"tel\"\n                        value={contactNumber}\n                        onChange={(e) => setContactNumber(e.target.value)}\n                        placeholder=\"Enter phone number\"\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n\n                {/* Profile Information - Section Header */}\n                <div className=\"md:col-span-3 mt-6\">\n                    <h2 className=\"text-xl font-semibold text-gray-900\">Profile Information</h2>\n                </div>\n\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">WORK TYPE</label>\n                    <select\n                        value={workType}\n                        onChange={(e) => setWorkType(e.target.value)}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    >\n                        <option value=\"\">Select Work Type</option>\n                        <option value=\"employee\">Employee</option>\n                        <option value=\"contractor\">Contractor</option>\n                        <option value=\"freelancer\">Freelancer</option>\n                        <option value=\"business_owner\">Business Owner</option>\n                    </select>\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">INDUSTRY</label>\n                    <select\n                        value={industry}\n                        onChange={(e) => setIndustry(e.target.value)}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    >\n                        <option value=\"\">Select Industry</option>\n                        <option value=\"finance\">Finance</option>\n                        <option value=\"technology\">Technology</option>\n                        <option value=\"healthcare\">Healthcare</option>\n                        <option value=\"education\">Education</option>\n                        <option value=\"retail\">Retail</option>\n                    </select>\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">PRODUCT TYPE OFFERED TO CUSTOMER</label>\n                    <select\n                        value={productTypeOffered}\n                        onChange={(e) => setProductTypeOffered(e.target.value)}\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    >\n                        <option value=\"\">Select Product Type</option>\n                        <option value=\"goods\">Physical Goods</option>\n                        <option value=\"services\">Services</option>\n                        <option value=\"digital\">Digital Products</option>\n                    </select>\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">PRODUCT OFFERED</label>\n                    <input\n                        type=\"text\"\n                        value={productOffered}\n                        onChange={(e) => setProductOffered(e.target.value)}\n                        placeholder=\"Enter Product Offered\"\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">COMPANY NAME</label>\n                    <input\n                        type=\"text\"\n                        value={companyName}\n                        onChange={(e) => setCompanyName(e.target.value)}\n                        placeholder=\"Enter Company Name\"\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">POSITION IN COMPANY</label>\n                    <input\n                        type=\"text\"\n                        value={positionInCompany}\n                        onChange={(e) => setPositionInCompany(e.target.value)}\n                        placeholder=\"Enter Position in Company\"\n                        className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                </div>\n\n                {/* Submit Button */}\n                <div className=\"md:col-span-3\">\n                    <button \n                        type=\"submit\" \n                        className=\"mt-4 px-6 py-2 bg-[#4A1D96] text-white rounded-lg hover:bg-[#3c177d] focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-50\"\n                    >\n                        REGISTER\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default IndividualOB;","import React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Calendar } from 'lucide-react';\r\nimport { getApiBaseUrl } from './config';\r\nimport { getSortedCountries, statesByCountry } from './utils/countries';\r\n\r\ninterface FormData {\r\n  companyName: string;\r\n  registrationNumber: string;\r\n  companyType: string;\r\n  incorporationDate: string;\r\n  businessNature: string;\r\n  industrySector: string;\r\n  annualTurnover: string;\r\n  employeeCount: string;\r\n  websiteUrl: string;\r\n  registeredAddress: string;\r\n  operatingAddress: string;\r\n  country: string;\r\n  state: string;\r\n  city: string;\r\n  postalCode: string;\r\n  contactPersonName: string;\r\n  contactEmail: string;\r\n  contactPhone: string;\r\n  taxNumber: string;\r\n  regulatoryLicenses: string;\r\n}\r\n\r\nfunction CompanyOB() {\r\n  const navigate = useNavigate();\r\n  const API_BASE_URL = getApiBaseUrl();\r\n  const [formData, setFormData] = useState<FormData>({\r\n    companyName: \"\",\r\n    registrationNumber: \"\",\r\n    companyType: \"\",\r\n    incorporationDate: \"\",\r\n    businessNature: \"\",\r\n    industrySector: \"\",\r\n    annualTurnover: \"\",\r\n    employeeCount: \"\",\r\n    websiteUrl: \"\",\r\n    registeredAddress: \"\",\r\n    operatingAddress: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n    postalCode: \"\",\r\n    contactPersonName: \"\",\r\n    contactEmail: \"\",\r\n    contactPhone: \"\",\r\n    taxNumber: \"\",\r\n    regulatoryLicenses: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n    \r\n    // Reset state when country changes\r\n    if (name === 'country') {\r\n      setFormData(prev => ({...prev, state: ''}));\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string): string | null => {\r\n    if (!dateString) return null;\r\n    try {\r\n      const date = new Date(dateString);\r\n      if (isNaN(date.getTime())) {\r\n        console.warn(\"Invalid date string:\", dateString);\r\n        return null;\r\n      }\r\n      return date.toISOString().split('T')[0];\r\n    } catch (error) {\r\n      console.error(\"Date formatting error\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const formattedFormData = {\r\n      ...formData,\r\n      incorporationDate: formatDate(formData.incorporationDate),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/registerCompany`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(formattedFormData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"Something went wrong\");\r\n      }\r\n\r\n      alert(\"Company registration successful! Redirecting to Active Tracking.\");\r\n      \r\n      // Redirect to Active Tracking tab using URL parameters instead of state\r\n      const params = new URLSearchParams({\r\n        section: 'activeTracking',\r\n        refresh: 'true',\r\n        t: Date.now().toString()\r\n      });\r\n      \r\n      // Use window.location for a clean navigation\r\n      window.location.href = `/mainapp?${params.toString()}`;\r\n    } catch (err) {\r\n      if (err instanceof Error) {\r\n        setError(err.message || \"An unexpected error occurred\");\r\n      } else {\r\n        setError(\"An unexpected error occurred\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Get sorted countries list\r\n  const countries = getSortedCountries();\r\n  \r\n  // Get states for selected country\r\n  const states = formData.country ? statesByCountry[formData.country] || [] : [];\r\n\r\n  // Note: We're using the statesByCountry from the imported utils\r\n\r\n  return (\r\n    <div className=\"p-8 bg-gray-50\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Register Company Profile</h1>\r\n      <p className=\"mb-8 text-gray-600\">\r\n        Complete the form below to register your company profile.\r\n      </p>\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"grid grid-cols-1 md:grid-cols-2 gap-6 bg-white p-6 rounded-2xl shadow-lg\"\r\n      >\r\n        {/* Company Information */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            COMPANY NAME\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"companyName\"\r\n            value={formData.companyName}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter company name\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            REGISTRATION NUMBER\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"registrationNumber\"\r\n            value={formData.registrationNumber}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter registration number\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            COMPANY TYPE\r\n          </label>\r\n          <select\r\n            name=\"companyType\"\r\n            value={formData.companyType}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\">Select company type</option>\r\n            <option value=\"llc\">LLC</option>\r\n            <option value=\"corporation\">Corporation</option>\r\n            <option value=\"partnership\">Partnership</option>\r\n            <option value=\"sole_proprietorship\">Sole Proprietorship</option>\r\n          </select>\r\n        </div>\r\n\r\n                  <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">\r\n              INCORPORATION DATE\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"incorporationDate\"\r\n              value={formData.incorporationDate}\r\n              onChange={handleChange}\r\n              className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            />\r\n          </div>\r\n\r\n        {/* Business Details */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            BUSINESS NATURE\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"businessNature\"\r\n            value={formData.businessNature}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter nature of business\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            INDUSTRY SECTOR\r\n          </label>\r\n          <select\r\n            name=\"industrySector\"\r\n            value={formData.industrySector}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\">Select industry sector</option>\r\n            <option value=\"technology\">Technology</option>\r\n            <option value=\"finance\">Finance</option>\r\n            <option value=\"healthcare\">Healthcare</option>\r\n            <option value=\"retail\">Retail</option>\r\n            <option value=\"manufacturing\">Manufacturing</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            ANNUAL TURNOVER\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"annualTurnover\"\r\n            value={formData.annualTurnover}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter annual turnover\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            NUMBER OF EMPLOYEES\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"employeeCount\"\r\n            value={formData.employeeCount}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter number of employees\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        {/* Contact Information */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            WEBSITE URL\r\n          </label>\r\n          <input\r\n            type=\"url\"\r\n            name=\"websiteUrl\"\r\n            value={formData.websiteUrl}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter website URL\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            REGISTERED ADDRESS\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"registeredAddress\"\r\n            value={formData.registeredAddress}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter registered address\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            OPERATING ADDRESS\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"operatingAddress\"\r\n            value={formData.operatingAddress}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter operating address\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            COUNTRY\r\n          </label>\r\n          <select\r\n            name=\"country\"\r\n            value={formData.country}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\">Select Country</option>\r\n            {countries.map((country) => (\r\n              <option key={country.code} value={country.code}>\r\n                {country.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            STATE\r\n          </label>\r\n          <select\r\n            name=\"state\"\r\n            value={formData.state}\r\n            onChange={handleChange}\r\n            disabled={!formData.country || states.length === 0}\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-100 disabled:cursor-not-allowed\"\r\n          >\r\n            <option value=\"\">Select State</option>\r\n            {states.map((state) => (\r\n              <option key={state} value={state}>\r\n                {state}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            CITY\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"city\"\r\n            value={formData.city}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter city\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            POSTAL CODE\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"postalCode\"\r\n            value={formData.postalCode}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter postal code\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        {/* Contact Person Details */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            CONTACT PERSON NAME\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"contactPersonName\"\r\n            value={formData.contactPersonName}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter contact person name\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            CONTACT EMAIL\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"contactEmail\"\r\n            value={formData.contactEmail}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter contact email\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            CONTACT PHONE\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"contactPhone\"\r\n            value={formData.contactPhone}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter contact phone\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            TAX NUMBER\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"taxNumber\"\r\n            value={formData.taxNumber}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter tax number\"\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            REGULATORY LICENSES\r\n          </label>\r\n          <textarea\r\n            name=\"regulatoryLicenses\"\r\n            value={formData.regulatoryLicenses}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter regulatory licenses\"\r\n            rows={3}\r\n            className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"md:col-span-2\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"mt-4 px-6 py-2 bg-[#4A1D96] text-white rounded-lg hover:bg-[#3c177d] focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-50 disabled:opacity-50\"\r\n          >\r\n            {loading ? \"Submitting...\" : \"REGISTER\"}\r\n          </button>\r\n          {error && <p className=\"mt-2 text-red-500\">{error}</p>}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyOB;","import React from 'react';\r\nimport { User, Building, ArrowRight } from 'lucide-react';\r\n\r\ninterface Customer {\r\n    id: string;\r\n    type: 'individual' | 'company';\r\n    status: string;\r\n    email?: string;\r\n    full_name?: string;\r\n    companyName?: string;\r\n    [key: string]: any;\r\n}\r\n\r\ninterface CustomerListProps {\r\n    customers: Customer[];\r\n    status: string | null;\r\n    onViewCustomer: (customer: Customer) => void;\r\n}\r\n\r\nconst CustomerList: React.FC<CustomerListProps> = ({ customers, status, onViewCustomer }) => {\r\n    // Helper function to format date\r\n    const formatDate = (dateString: string) => {\r\n        if (!dateString) return 'N/A';\r\n        try {\r\n            const date = new Date(dateString);\r\n            return date.toLocaleDateString();\r\n        } catch (e) {\r\n            return 'Invalid Date';\r\n        }\r\n    };\r\n\r\n    // Get customer's date for display\r\n    const getCustomerDate = (customer: any): string => {\r\n        const dateValue = customer.createdAt || \r\n                        customer.created_at || \r\n                        customer.registrationDate || \r\n                        customer.registration_date ||\r\n                        customer.onboardingDate ||\r\n                        customer.onboarding_date ||\r\n                        customer.date;\r\n        \r\n        return formatDate(dateValue);\r\n    };\r\n\r\n    // Get customer's name for display\r\n    const getCustomerName = (customer: Customer): string => {\r\n        if (customer.type === 'individual') {\r\n            return customer.full_name || customer.name || 'Individual Customer';\r\n        } else {\r\n            return customer.companyName || customer.company_name || customer.name || 'Company';\r\n        }\r\n    };\r\n\r\n    if (customers.length === 0) {\r\n        return (\r\n            <div className=\"p-4 text-gray-500 text-center italic\">\r\n                No customers found in this category.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                        {status === null && (\r\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                        )}\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {customers.map((customer) => (\r\n                        <tr key={`${customer.type}-${customer.id}`} className=\"hover:bg-gray-50\">\r\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                {customer.type === 'individual' ? (\r\n                                    <div className=\"flex items-center\">\r\n                                        <User className=\"h-5 w-5 text-gray-400 mr-2\" />\r\n                                        <span>Individual</span>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"flex items-center\">\r\n                                        <Building className=\"h-5 w-5 text-gray-400 mr-2\" />\r\n                                        <span>Company</span>\r\n                                    </div>\r\n                                )}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                <div className=\"text-sm font-medium text-gray-900\">\r\n                                    {getCustomerName(customer)}\r\n                                </div>\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                <div className=\"text-sm text-gray-500\">{customer.email || 'N/A'}</div>\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                <div className=\"text-sm text-gray-500\">{getCustomerDate(customer)}</div>\r\n                            </td>\r\n                            {status === null && (\r\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                    <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full \r\n                                        ${customer.status === 'approved' ? 'bg-green-100 text-green-800' : \r\n                                        customer.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : \r\n                                        'bg-red-100 text-red-800'}`}\r\n                                    >\r\n                                        {customer.status.charAt(0).toUpperCase() + customer.status.slice(1)}\r\n                                    </span>\r\n                                </td>\r\n                            )}\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                                <button \r\n                                    className=\"text-indigo-600 hover:text-indigo-900 flex items-center justify-end\"\r\n                                    onClick={() => onViewCustomer(customer)}\r\n                                >\r\n                                    <span>View</span>\r\n                                    <ArrowRight className=\"h-4 w-4 ml-1\" />\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomerList; ","import React from 'react';\r\nimport { ArrowLeft } from 'lucide-react';\r\n\r\ninterface Customer {\r\n    id: string;\r\n    type: 'individual' | 'company';\r\n    status: string;\r\n    email?: string;\r\n    full_name?: string;\r\n    companyName?: string;\r\n    [key: string]: any;\r\n}\r\n\r\ninterface CustomerDetailsProps {\r\n    customer: Customer;\r\n    onBack: () => void;\r\n}\r\n\r\nconst CustomerDetails: React.FC<CustomerDetailsProps> = ({ customer, onBack }) => {\r\n    // Helper function to format date\r\n    const formatDate = (dateString: string) => {\r\n        if (!dateString) return 'N/A';\r\n        try {\r\n            const date = new Date(dateString);\r\n            return date.toLocaleDateString();\r\n        } catch (e) {\r\n            return 'Invalid Date';\r\n        }\r\n    };\r\n\r\n    // Get customer's date for display\r\n    const getCustomerDate = (customer: any): string => {\r\n        const dateValue = customer.createdAt || \r\n                        customer.created_at || \r\n                        customer.registrationDate || \r\n                        customer.registration_date ||\r\n                        customer.onboardingDate ||\r\n                        customer.onboarding_date ||\r\n                        customer.date;\r\n        \r\n        return formatDate(dateValue);\r\n    };\r\n\r\n    // Get customer's name for display\r\n    const getCustomerName = (customer: Customer): string => {\r\n        if (customer.type === 'individual') {\r\n            return customer.full_name || customer.name || 'Individual Customer';\r\n        } else {\r\n            return customer.companyName || customer.company_name || customer.name || 'Company';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-6\">\r\n            <div className=\"flex items-center mb-6\">\r\n                <button \r\n                    onClick={onBack}\r\n                    className=\"flex items-center text-gray-600 hover:text-gray-900\"\r\n                >\r\n                    <ArrowLeft className=\"h-5 w-5 mr-2\" />\r\n                    <span>Back to List</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n                <h2 className=\"text-2xl font-bold mb-6\">\r\n                    {customer.type === 'individual' ? 'Individual Details' : 'Company Details'}\r\n                </h2>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    {customer.type === 'individual' ? (\r\n                        <>\r\n                            <div>\r\n                                <h3 className=\"text-sm font-medium text-gray-500\">Full Name</h3>\r\n                                <p className=\"mt-1 text-sm text-gray-900\">{getCustomerName(customer)}</p>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <div>\r\n                                <h3 className=\"text-sm font-medium text-gray-500\">Company Name</h3>\r\n                                <p className=\"mt-1 text-sm text-gray-900\">{getCustomerName(customer)}</p>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                    {customer.email && (\r\n                        <div>\r\n                            <h3 className=\"text-sm font-medium text-gray-500\">Email</h3>\r\n                            <p className=\"mt-1 text-sm text-gray-900\">{customer.email}</p>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div>\r\n                        <h3 className=\"text-sm font-medium text-gray-500\">Status</h3>\r\n                        <span className={`mt-1 px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full \r\n                            ${customer.status === 'approved' ? 'bg-green-100 text-green-800' : \r\n                            customer.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : \r\n                            'bg-red-100 text-red-800'}`}\r\n                        >\r\n                            {customer.status.charAt(0).toUpperCase() + customer.status.slice(1)}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3 className=\"text-sm font-medium text-gray-500\">Date Registered</h3>\r\n                        <p className=\"mt-1 text-sm text-gray-900\">{getCustomerDate(customer)}</p>\r\n                    </div>\r\n\r\n                    {/* Display all other available properties */}\r\n                    {Object.entries(customer).map(([key, value]) => {\r\n                        // Skip already displayed or internal properties\r\n                        if (['id', 'type', 'fullName', 'companyName', 'name', 'full_name', 'email', 'status', 'createdAt', 'updatedAt'].includes(key)) {\r\n                            return null;\r\n                        }\r\n                        \r\n                        // Skip empty values or complex objects\r\n                        if (value === null || value === undefined || typeof value === 'object') {\r\n                            return null;\r\n                        }\r\n                        \r\n                        // Format the key for display\r\n                        const formattedKey = key.replace(/([A-Z])/g, ' $1')\r\n                            .replace(/^./, str => str.toUpperCase())\r\n                            .replace(/_/g, ' ');\r\n                        \r\n                        return (\r\n                            <div key={key}>\r\n                                <h3 className=\"text-sm font-medium text-gray-500\">{formattedKey}</h3>\r\n                                <p className=\"mt-1 text-sm text-gray-900\">{value.toString()}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomerDetails; ","import React from 'react';\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    ResponsiveContainer,\r\n    Area,\r\n    AreaChart\r\n} from 'recharts';\r\n\r\ninterface ActivityTimelineProps {\r\n    data: {\r\n        date: string;\r\n        count: number;\r\n    }[];\r\n}\r\n\r\nconst ActivityTimeline: React.FC<ActivityTimelineProps> = ({ data }) => {\r\n    return (\r\n        <div className=\"w-full h-[200px]\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <AreaChart\r\n                    data={data}\r\n                    margin={{\r\n                        top: 10,\r\n                        right: 10,\r\n                        left: 0,\r\n                        bottom: 0,\r\n                    }}\r\n                >\r\n                    <defs>\r\n                        <linearGradient id=\"colorCount\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                            <stop offset=\"5%\" stopColor=\"#4A1D96\" stopOpacity={0.1}/>\r\n                            <stop offset=\"95%\" stopColor=\"#4A1D96\" stopOpacity={0}/>\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n                    <XAxis\r\n                        dataKey=\"date\"\r\n                        tick={{ fontSize: 12 }}\r\n                        tickLine={false}\r\n                        axisLine={false}\r\n                    />\r\n                    <YAxis\r\n                        tick={{ fontSize: 12 }}\r\n                        tickLine={false}\r\n                        axisLine={false}\r\n                        tickFormatter={(value) => Math.floor(value)}\r\n                    />\r\n                    <Tooltip\r\n                        contentStyle={{\r\n                            backgroundColor: 'white',\r\n                            border: 'none',\r\n                            borderRadius: '8px',\r\n                            boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)'\r\n                        }}\r\n                        formatter={(value: number) => [Math.floor(value), 'Customers']}\r\n                        labelFormatter={(label) => `Date: ${label}`}\r\n                    />\r\n                    <Area\r\n                        type=\"monotone\"\r\n                        dataKey=\"count\"\r\n                        stroke=\"#4A1D96\"\r\n                        strokeWidth={2}\r\n                        fill=\"url(#colorCount)\"\r\n                        dot={{ fill: '#4A1D96', r: 4 }}\r\n                        activeDot={{ r: 6, fill: '#4A1D96' }}\r\n                    />\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivityTimeline; ","import React from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\ninterface DonutChartData {\r\n    name: string;\r\n    value: number;\r\n    color: string;\r\n}\r\n\r\ninterface DonutChartProps {\r\n    data: DonutChartData[];\r\n    title: string;\r\n    centerText?: {\r\n        label: string;\r\n        value: string | number;\r\n    };\r\n}\r\n\r\nconst DonutChart: React.FC<DonutChartProps> = ({ data, title, centerText }) => {\r\n    const total = data.reduce((sum, item) => sum + item.value, 0);\r\n\r\n    return (\r\n        <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <h3 className=\"text-base font-medium text-gray-900 mb-4\">{title}</h3>\r\n            <div className=\"w-full h-[300px] relative\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <PieChart>\r\n                        <Pie\r\n                            data={data}\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            innerRadius={60}\r\n                            outerRadius={80}\r\n                            paddingAngle={0}\r\n                            dataKey=\"value\"\r\n                        >\r\n                            {data.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={entry.color} />\r\n                            ))}\r\n                        </Pie>\r\n                        <Tooltip\r\n                            contentStyle={{\r\n                                backgroundColor: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '8px',\r\n                                boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)'\r\n                            }}\r\n                            formatter={(value: number, name: string) => [value, name]}\r\n                        />\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n                {centerText && (\r\n                    <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-center\">\r\n                        <p className=\"text-sm text-gray-500\">{centerText.label}</p>\r\n                        <p className=\"text-xl font-bold text-gray-900\">{centerText.value}</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"mt-4 space-y-2\">\r\n                {data.map((item, index) => (\r\n                    <div key={index} className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center\">\r\n                            <div\r\n                                className=\"w-3 h-3 rounded-full mr-2\"\r\n                                style={{ backgroundColor: item.color }}\r\n                            />\r\n                            <span className=\"text-sm text-gray-600\">{item.name}</span>\r\n                        </div>\r\n                        <span className=\"text-sm font-medium text-gray-900\">\r\n                            {item.value}\r\n                        </span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DonutChart; ","// Insights.tsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Calendar, ArrowRight, ArrowLeft } from 'lucide-react';\nimport { useAuth } from './AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { getApiBaseUrl } from './config';\nimport CustomerList from './components/CustomerList';\nimport CustomerDetails from './components/CustomerDetails';\nimport ActivityTimeline from './components/ActivityTimeline';\nimport DonutChart from './components/DonutChart';\n\ninterface Customer {\n    id: string;\n    type: 'individual' | 'company';\n    status: string;\n    email?: string;\n    full_name?: string;\n    companyName?: string;\n    [key: string]: any;\n}\n\ninterface InsightsProps {}\n\nfunction Insights(_props: InsightsProps) {\n    const [fromDateOpen, setFromDateOpen] = useState(false);\n    const [toDateOpen, setToDateOpen] = useState(false);\n    const [fromDate, setFromDate] = useState('');\n    const [toDate, setToDate] = useState('');\n    const [customerCount, setCustomerCount] = useState(0);\n    const [pendingCustomers, setPendingCustomers] = useState(0);\n    const [approvedCustomers, setApprovedCustomers] = useState(0);\n    const [rejectedCustomers, setRejectedCustomers] = useState(0);\n    \n    // State for storing customer details\n    const [individualCustomers, setIndividualCustomers] = useState<Customer[]>([]);\n    const [companyCustomers, setCompanyCustomers] = useState<Customer[]>([]);\n    \n    // State for navigation and views\n    const [currentView, setCurrentView] = useState<'dashboard' | 'list' | 'details'>('dashboard');\n    const [selectedStatus, setSelectedStatus] = useState<string | null>(null);\n    const [selectedCustomer, setSelectedCustomer] = useState<Customer | null>(null);\n    const [timelineData, setTimelineData] = useState<{ date: string; count: number; }[]>([]);\n    const [customerOnboardingData, setCustomerOnboardingData] = useState<{ name: string; value: number; color: string; }[]>([]);\n\n    const fromDateRef = useRef<HTMLInputElement>(null);\n    const toDateRef = useRef<HTMLInputElement>(null);\n    const { user } = useAuth();\n    const navigate = useNavigate();\n    const API_BASE_URL = getApiBaseUrl();\n\n    useEffect(() => {\n        const handleClickOutside = (event: MouseEvent) => {\n            if (fromDateRef.current && !fromDateRef.current.contains(event.target as Node)) {\n                setFromDateOpen(false);\n            }\n            if (toDateRef.current && !toDateRef.current.contains(event.target as Node)) {\n                setToDateOpen(false);\n            }\n        };\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, []);\n\n    const processTimelineData = (customers: Customer[]) => {\n        const dateMap = new Map<string, number>();\n        \n        customers.forEach(customer => {\n            const date = customer.createdAt || \n                        customer.created_at || \n                        customer.registrationDate || \n                        customer.registration_date ||\n                        customer.onboardingDate ||\n                        customer.onboarding_date ||\n                        customer.date;\n            \n            if (date) {\n                const formattedDate = new Date(date).toLocaleDateString('en-US', {\n                    month: 'short',\n                    day: 'numeric'\n                });\n                dateMap.set(formattedDate, (dateMap.get(formattedDate) || 0) + 1);\n            }\n        });\n\n        // Convert map to array and sort by date\n        const timelineData = Array.from(dateMap.entries())\n            .map(([date, count]) => ({ date, count }))\n            .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n\n        setTimelineData(timelineData);\n    };\n\n    const fetchData = async () => {\n        if (!user) {\n            navigate('/login');\n            return;\n        }\n\n        try {\n            // Fetch Individual Customers\n            const individualResponse = await fetch(`${API_BASE_URL}/individualob`, {\n                method: 'GET',\n                credentials: 'include',\n            });\n\n            if (!individualResponse.ok) {\n                if (individualResponse.status === 401) {\n                    navigate('/login');\n                    return;\n                }\n                throw new Error(`HTTP error: ${individualResponse.status}`);\n            }\n            const individualData = await individualResponse.json();\n            \n            setIndividualCustomers(individualData.map((customer: any) => ({\n                ...customer,\n                type: 'individual',\n                fullName: customer.fullName || customer.name || customer.full_name || `${customer.firstName || ''} ${customer.lastName || ''}`.trim() || 'Unknown'\n            })));\n\n            // Fetch Company Customers\n            const companyResponse = await fetch(`${API_BASE_URL}/companyob`, {\n                method: 'GET',\n                credentials: 'include',\n            });\n\n            if (!companyResponse.ok) {\n                if (companyResponse.status === 401) {\n                    navigate('/login');\n                    return;\n                }\n                throw new Error(`HTTP error: ${companyResponse.status}`);\n            }\n            const companyData = await companyResponse.json();\n            \n            setCompanyCustomers(companyData.map((company: any) => ({\n                ...company,\n                type: 'company',\n                companyName: company.companyName || company.company_name || company.name || 'Unknown Company'\n            })));\n\n            // Update counts\n            const allCustomers = [...individualData, ...companyData];\n            setCustomerCount(allCustomers.length);\n\n            let pending = 0, approved = 0, rejected = 0;\n            allCustomers.forEach(customer => {\n                if (customer.status === 'pending') pending++;\n                else if (customer.status === 'approved') approved++;\n                else if (customer.status === 'rejected') rejected++;\n            });\n\n            setPendingCustomers(pending);\n            setApprovedCustomers(approved);\n            setRejectedCustomers(rejected);\n\n            // Process timeline data\n            processTimelineData(allCustomers);\n\n            // Calculate customers with and without alerts\n            let customersWithAlert = 0;\n            let customersWithoutAlert = 0;\n\n            allCustomers.forEach(customer => {\n                // Check if customer has any matches/alerts\n                // Adjust these conditions based on your actual data structure\n                const hasAlert = customer.hasMatch || \n                               customer.has_match || \n                               customer.alertStatus === 'triggered' ||\n                               customer.alert_status === 'triggered' ||\n                               customer.matches?.length > 0 ||\n                               customer.alerts?.length > 0;\n\n                if (hasAlert) {\n                    customersWithAlert++;\n                } else {\n                    customersWithoutAlert++;\n                }\n            });\n\n            // Update customer onboarding data\n            setCustomerOnboardingData([\n                {\n                    name: 'Onboarding Without Alert',\n                    value: customersWithoutAlert,\n                    color: '#9333EA'\n                },\n                {\n                    name: 'Onboarding With Alert',\n                    value: customersWithAlert,\n                    color: '#22D3EE'\n                }\n            ]);\n\n        } catch (error: any) {\n            console.error('Error fetching data:', error.message);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, [user, navigate]);\n\n    // Get all customers\n    const allCustomers = [...individualCustomers, ...companyCustomers];\n\n    // Get customers by status\n    const getCustomersByStatus = (status: string | null) => {\n        if (status === null) {\n            return allCustomers;\n        }\n        return allCustomers.filter(customer => customer.status === status);\n    };\n\n    // Handle navigation\n    const handleSectionClick = (status: string | null) => {\n        setSelectedStatus(status);\n        setCurrentView('list');\n    };\n\n    const handleViewCustomer = (customer: Customer) => {\n        setSelectedCustomer(customer);\n        setCurrentView('details');\n    };\n\n    const handleBack = () => {\n        if (currentView === 'details') {\n            setCurrentView('list');\n            setSelectedCustomer(null);\n        } else if (currentView === 'list') {\n            setCurrentView('dashboard');\n            setSelectedStatus(null);\n        }\n    };\n\n    // Render dashboard view\n    const renderDashboard = () => (\n        <div className=\"p-6\">\n            <h2 className=\"text-lg font-semibold mb-4\">Activity Dashboard</h2>\n\n            <div className=\"mb-6\">\n                {/* Date Range Picker */}\n                <div className=\"flex items-center space-x-4\">\n                    <div>\n                        <label htmlFor=\"from-date\" className=\"block text-sm font-medium text-gray-700\">From</label>\n                        <div className=\"relative mt-1\">\n                            <input\n                                type=\"date\"\n                                id=\"from-date\"\n                                value={fromDate}\n                                onChange={(e) => setFromDate(e.target.value)}\n                                className=\"w-full px-4 py-2 text-sm border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-purple-500\"\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <label htmlFor=\"to-date\" className=\"block text-sm font-medium text-gray-700\">To</label>\n                        <div className=\"relative mt-1\">\n                            <input\n                                type=\"date\"\n                                id=\"to-date\"\n                                value={toDate}\n                                onChange={(e) => setToDate(e.target.value)}\n                                className=\"w-full px-4 py-2 text-sm border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-purple-500\"\n                            />\n                        </div>\n                    </div>\n                    <button className=\"px-6 py-2 bg-[#4A1D96] text-white rounded-lg text-sm h-10 mt-6\">APPLY</button>\n                    <button className=\"px-6 py-2 bg-[#FFC727] text-black rounded-lg text-sm h-10 mt-6\">EXPORT</button>\n                </div>\n            </div>\n\n            {/* Customer Stats Cards */}\n            <div className=\"grid grid-cols-1 gap-6 mb-6\">\n                <div \n                    className=\"bg-white rounded-lg shadow p-6 cursor-pointer hover:bg-purple-50 transition-colors\"\n                    onClick={() => handleSectionClick(null)}\n                >\n                    <div className=\"flex justify-between items-center\">\n                        <div>\n                            <h3 className=\"text-base font-medium text-gray-900\">CUSTOMER ONBOARDED</h3>\n                            <p className=\"text-2xl font-bold text-gray-900 mt-2\">{customerCount}</p>\n                        </div>\n                        <ArrowRight className=\"h-5 w-5 text-gray-500\" />\n                    </div>\n                </div>\n\n                    <div \n                    className=\"bg-white rounded-lg shadow p-6 cursor-pointer hover:bg-purple-50 transition-colors\"\n                    onClick={() => handleSectionClick('pending')}\n                    >\n                    <div className=\"flex justify-between items-center\">\n                        <div>\n                            <h3 className=\"text-base font-medium text-gray-900\">PENDING CUSTOMERS</h3>\n                            <p className=\"text-2xl font-bold text-gray-900 mt-2\">{pendingCustomers}</p>\n                        </div>\n                        <ArrowRight className=\"h-5 w-5 text-gray-500\" />\n                    </div>\n                </div>\n\n                    <div \n                    className=\"bg-white rounded-lg shadow p-6 cursor-pointer hover:bg-purple-50 transition-colors\"\n                    onClick={() => handleSectionClick('approved')}\n                    >\n                    <div className=\"flex justify-between items-center\">\n                        <div>\n                            <h3 className=\"text-base font-medium text-gray-900\">APPROVED CUSTOMERS</h3>\n                            <p className=\"text-2xl font-bold text-gray-900 mt-2\">{approvedCustomers}</p>\n                        </div>\n                        <ArrowRight className=\"h-5 w-5 text-gray-500\" />\n                    </div>\n                </div>\n\n                    <div \n                    className=\"bg-white rounded-lg shadow p-6 cursor-pointer hover:bg-purple-50 transition-colors\"\n                    onClick={() => handleSectionClick('rejected')}\n                    >\n                    <div className=\"flex justify-between items-center\">\n                        <div>\n                            <h3 className=\"text-base font-medium text-gray-900\">REJECTED CUSTOMERS</h3>\n                            <p className=\"text-2xl font-bold text-gray-900 mt-2\">{rejectedCustomers}</p>\n                        </div>\n                        <ArrowRight className=\"h-5 w-5 text-gray-500\" />\n                    </div>\n                </div>\n            </div>\n\n            {/* Activity Timeline */}\n            <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\n                <h3 className=\"text-base font-medium text-gray-900 mb-4\">Activity Timeline</h3>\n                <ActivityTimeline data={timelineData} />\n            </div>\n\n            {/* Customer Onboarding Chart */}\n            <div className=\"mb-6\">\n                <DonutChart\n                    title=\"Customer Onboarding With / Without Alert\"\n                    data={customerOnboardingData}\n                    centerText={{\n                        label: 'HIGHEST',\n                        value: customerOnboardingData.length > 0 \n                            ? `${customerOnboardingData.reduce((prev, current) => \n                                prev.value > current.value ? prev : current).name} ${\n                                customerOnboardingData.reduce((prev, current) => \n                                prev.value > current.value ? prev : current).value}`\n                            : 'No data'\n                    }}\n                />\n            </div>\n\n            {/* Onboard New Profile Button */}\n            <div className=\"flex justify-end\">\n                <button className=\"px-6 py-2 mt-4 bg-[#FFC727] text-black rounded-lg text-sm\">+ Onboard New Profile</button>\n            </div>\n        </div>\n    );\n\n    // Render the appropriate view\n    if (currentView === 'details' && selectedCustomer) {\n        return <CustomerDetails customer={selectedCustomer} onBack={handleBack} />;\n    }\n\n    if (currentView === 'list') {\n        return (\n            <div className=\"p-6\">\n                <div className=\"flex items-center mb-6\">\n                    <button \n                        onClick={handleBack}\n                        className=\"flex items-center text-gray-600 hover:text-gray-900\"\n                    >\n                        <ArrowLeft className=\"h-5 w-5 mr-2\" />\n                        <span>Back to Dashboard</span>\n                    </button>\n                </div>\n                <h2 className=\"text-lg font-semibold mb-4\">\n                    {selectedStatus === null ? 'All Customers' :\n                     `${selectedStatus.charAt(0).toUpperCase() + selectedStatus.slice(1)} Customers`}\n                </h2>\n                <CustomerList \n                    customers={getCustomersByStatus(selectedStatus)}\n                    status={selectedStatus}\n                    onViewCustomer={handleViewCustomer}\n                />\n            </div>\n        );\n    }\n\n    return renderDashboard();\n}\n\nexport default Insights;\n","import React, { useEffect, useState } from 'react';\nimport { Loader2, XCircle, Download, CheckCircle, RefreshCw, FileText, ChevronUp, ChevronDown, Search, Edit, AlertCircle } from 'lucide-react';\nimport { SearchResult, Tracking } from './types';\nimport { generateCustomerPDF } from './utils/pdfGenerator';\nimport { useNavigate } from 'react-router-dom';\n\ninterface ActiveTrackingProps {\n    trackedResults: SearchResult[];\n    tracking: Tracking;\n    isLoading: boolean;\n    onToggleTracking: (name: string, newTrackingStatus: boolean) => Promise<void>;\n}\n\ntype SortableColumn = 'identifiers' | 'name' | 'country' | 'aging' | 'blacklist' | 'risk' | 'status' | 'dataset';\ntype SortDirection = 'asc' | 'desc';\n\n// Add confirmation dialog component\nconst ConfirmationDialog = ({ isOpen, onConfirm, onCancel, name }: {\n    isOpen: boolean,\n    onConfirm: () => void,\n    onCancel: () => void,\n    name: string\n}) => {\n    if (!isOpen) return null;\n\n    return (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 shadow-xl max-w-md w-full\">\n                <div className=\"flex items-center mb-4 text-amber-600\">\n                    <AlertCircle className=\"w-6 h-6 mr-2\" />\n                    <h3 className=\"text-lg font-semibold\">Confirm Tracking</h3>\n                </div>\n                <p className=\"mb-4\">\n                    This action will deduct <span className=\"font-bold\">1 credit</span> from your account to start tracking <span className=\"font-bold\">{name}</span>.\n                </p>\n                <p className=\"mb-6 text-sm text-gray-600\">\n                    Credits are only deducted the first time you track a profile. You can pause and resume tracking at any time without additional charges.\n                </p>\n                <div className=\"flex justify-end space-x-3\">\n                    <button\n                        onClick={onCancel}\n                        className=\"px-4 py-2 text-gray-700 border border-gray-300 rounded-md hover:bg-gray-100\"\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        onClick={onConfirm}\n                        className=\"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\"\n                    >\n                        Confirm\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nfunction ActiveTracking({ trackedResults, tracking, isLoading, onToggleTracking }: ActiveTrackingProps) {\n    const [lastUpdated, setLastUpdated] = useState<string>(new Date().toLocaleTimeString());\n    const [generatingPdf, setGeneratingPdf] = useState<{[key: number]: boolean}>({});\n    const [sortColumn, setSortColumn] = useState<SortableColumn>('name');\n    const [sortDirection, setSortDirection] = useState<SortDirection>('asc');\n    const [nameQuery, setNameQuery] = useState<string>('');\n    const [idQuery, setIdQuery] = useState<string>('');\n    const [appliedNameQuery, setAppliedNameQuery] = useState<string>('');\n    const [appliedIdQuery, setAppliedIdQuery] = useState<string>('');\n    const [activeFilter, setActiveFilter] = useState<'all' | 'custom'>('all');\n    const navigate = useNavigate();\n    \n    // Minimum search term length\n    const MIN_SEARCH_LENGTH = 2;\n    \n    console.log('🔶 ActiveTracking rendered with props:', { \n        trackedResultsLength: trackedResults?.length || 0,\n        trackingKeys: Object.keys(tracking || {}),\n        isLoading \n    });\n    \n    // Add effect to log information on mount and updates\n    useEffect(() => {\n        console.log('🔶 ActiveTracking mount/update effect');\n        console.log('🔶 trackedResults details:', trackedResults);\n        console.log('🔶 tracking details:', tracking);\n        \n        // Update last updated timestamp when data changes\n        if (!isLoading && trackedResults) {\n            setLastUpdated(new Date().toLocaleTimeString());\n        }\n    }, [trackedResults, tracking, isLoading]);\n\n    const getRiskColor = (percentage: number): string => {\n        if (percentage >= 85) return 'text-red-600';\n        if (percentage >= 60) return 'text-yellow-600';\n        return 'text-green-600';\n    };\n\n    const calculateAging = (result: SearchResult): string => {\n        if (!result) {\n            console.warn('🔶 calculateAging called with null/undefined result');\n            return 'None';\n        }\n\n        const trackingInfo = tracking?.[result.name];\n        \n        if (!trackingInfo) {\n            console.warn(`🔶 No tracking info for ${result.name}`);\n            return 'None';\n        }\n        \n        if (trackingInfo.isTracking) {\n            return trackingInfo.startDate\n                ? `${Math.floor((Date.now() - new Date(trackingInfo.startDate).getTime()) / (1000 * 60 * 60 * 24))}D`\n                : '0D';\n        }\n        \n        if (trackingInfo.stopDate && trackingInfo.startDate) {\n            const diffInDays = Math.floor(\n                (new Date(trackingInfo.stopDate).getTime() - new Date(trackingInfo.startDate).getTime()) / \n                (1000 * 60 * 60 * 24)\n            );\n            return `${diffInDays}D`;\n        }\n        \n        return 'None';\n    };\n\n    // Add safety check for trackedResults\n    const safeTrackedResults = Array.isArray(trackedResults) ? trackedResults : [];\n    console.log('🔶 Safe tracked results count:', safeTrackedResults.length);\n    \n    if (safeTrackedResults.length === 0 && !isLoading) {\n        console.log('🔶 No tracked results and not loading');\n    }\n\n    // Sort function for column headers\n    const handleSort = (column: SortableColumn) => {\n        if (sortColumn === column) {\n            // Toggle direction if same column\n            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n        } else {\n            // Set new column and default to ascending\n            setSortColumn(column);\n            setSortDirection('asc');\n        }\n    };\n\n    // Render sort indicator\n    const renderSortIndicator = (column: SortableColumn) => {\n        if (sortColumn !== column) return null;\n        \n        return sortDirection === 'asc' \n            ? <ChevronUp className=\"w-4 h-4 inline-block ml-1\" /> \n            : <ChevronDown className=\"w-4 h-4 inline-block ml-1\" />;\n    };\n\n    // Apply filters when search is applied\n    const applySearch = () => {\n        setAppliedNameQuery(nameQuery);\n        setAppliedIdQuery(idQuery);\n        setActiveFilter('custom');\n    };\n\n    // Reset filters\n    const resetFilters = () => {\n        setNameQuery('');\n        setIdQuery('');\n        setAppliedNameQuery('');\n        setAppliedIdQuery('');\n        setActiveFilter('all');\n    };\n\n    // Apply filtering to results\n    const getFilteredResults = () => {\n        if (activeFilter === 'all') return safeTrackedResults;\n        \n        return safeTrackedResults.filter(result => {\n            const matchesName = !appliedNameQuery || \n                (result.name?.toLowerCase().includes(appliedNameQuery.toLowerCase()));\n            \n            const matchesId = !appliedIdQuery || \n                (result.identifiers?.toLowerCase().includes(appliedIdQuery.toLowerCase()));\n            \n            return matchesName && matchesId;\n        });\n    };\n\n    // First filter, then sort\n    const getFilteredAndSortedResults = () => {\n        const filteredResults = getFilteredResults();\n        \n        // First sort by tracking status\n        const baseResults = [...filteredResults].sort((a, b) => {\n            const aIsTracking = tracking?.[a.name]?.isTracking ? 1 : 0;\n            const bIsTracking = tracking?.[b.name]?.isTracking ? 1 : 0;\n            return bIsTracking - aIsTracking;\n        });\n        \n        // Then apply column-specific sorting\n        return baseResults.sort((a, b) => {\n            const multiplier = sortDirection === 'asc' ? 1 : -1;\n            \n            switch (sortColumn) {\n                case 'identifiers':\n                    return multiplier * (a.identifiers || '').localeCompare(b.identifiers || '');\n                case 'name':\n                    return multiplier * (a.name || '').localeCompare(b.name || '');\n                case 'country':\n                    return multiplier * (a.country || '').localeCompare(b.country || '');\n                case 'aging':\n                    const aAging = calculateAging(a).replace('D', '');\n                    const bAging = calculateAging(b).replace('D', '');\n                    return multiplier * (parseInt(aAging) || 0) - (parseInt(bAging) || 0);\n                case 'blacklist':\n                    const aBlacklist = a.dataset === 'onboarded' ? 0 : 1;\n                    const bBlacklist = b.dataset === 'onboarded' ? 0 : 1;\n                    return multiplier * (aBlacklist - bBlacklist);\n                case 'risk':\n                    return multiplier * ((a.riskLevel || 0) - (b.riskLevel || 0));\n                case 'status':\n                    const aStatus = tracking?.[a.name]?.isTracking ? 1 : 0;\n                    const bStatus = tracking?.[b.name]?.isTracking ? 1 : 0;\n                    return multiplier * (aStatus - bStatus);\n                case 'dataset':\n                    const aDataset = a.dataset || '';\n                    const bDataset = b.dataset || '';\n                    return multiplier * aDataset.localeCompare(bDataset);\n                default:\n                    return 0;\n            }\n        });\n    };\n\n    const handleGeneratePDF = async (person: SearchResult) => {\n        try {\n            // Set PDF generation status for this person\n            setGeneratingPdf(prev => ({ ...prev, [person.id]: true }));\n            \n            // Generate the PDF\n            await generateCustomerPDF(person);\n            \n            // Reset PDF generation status\n            setGeneratingPdf(prev => ({ ...prev, [person.id]: false }));\n        } catch (error) {\n            console.error('Error generating PDF:', error);\n            setGeneratingPdf(prev => ({ ...prev, [person.id]: false }));\n            alert('Failed to generate PDF. Please try again.');\n        }\n    };\n\n    // Handle navigating to edit profile page\n    const handleEditProfile = (result: SearchResult) => {\n        navigate(`/edit-profile/${result.id}`, { state: { profile: result } });\n    };\n\n    // Get filtered and sorted results\n    const filteredAndSortedResults = getFilteredAndSortedResults();\n    const resultsCount = filteredAndSortedResults.length;\n    const totalCount = safeTrackedResults.length;\n\n    // Function to handle manual refresh\n    const handleManualRefresh = async () => {\n        if (isLoading) return;\n        \n        // We can't directly set isLoading since it's a prop, so we use the callback instead\n        setLastUpdated(new Date().toLocaleTimeString());\n        \n        try {\n            // Use the onToggleTracking callback to trigger a refresh in the parent component\n            await onToggleTracking('__refresh__', false); // Use a special value to trigger refresh without actual changes\n            console.log('🔄 Manual refresh completed');\n        } catch (error) {\n            console.error('Error during manual refresh:', error);\n        }\n    };\n\n    // Add state for confirmation dialog\n    const [confirmDialog, setConfirmDialog] = useState<{\n        isOpen: boolean;\n        name: string;\n        pendingStatus: boolean;\n    }>({\n        isOpen: false,\n        name: '',\n        pendingStatus: false\n    });\n\n    // Handle toggle tracking with confirmation dialog\n    const handleToggleTracking = async (name: string, newStatus: boolean) => {\n        // If turning off tracking, no need for confirmation\n        if (!newStatus) {\n            await onToggleTracking(name, newStatus);\n            return;\n        }\n\n        // Check if this profile was ever tracked before (even if inactive now)\n        const wasEverTracked = name in tracking;\n        \n        // If profile was previously tracked, skip confirmation and just toggle\n        if (wasEverTracked) {\n            await onToggleTracking(name, newStatus);\n            return;\n        }\n\n        // Only show confirmation dialog for first-time tracking\n        setConfirmDialog({\n            isOpen: true,\n            name,\n            pendingStatus: newStatus\n        });\n    };\n\n    // Handle confirm tracking from dialog\n    const handleConfirmTracking = async () => {\n        const { name, pendingStatus } = confirmDialog;\n        \n        // Close dialog first\n        setConfirmDialog(prev => ({ ...prev, isOpen: false }));\n        \n        // Then apply tracking change\n        await onToggleTracking(name, pendingStatus);\n        \n        // Manually trigger a refresh of credits after confirming tracking\n        const refreshCreditsEvent = new CustomEvent('refresh-credits');\n        window.dispatchEvent(refreshCreditsEvent);\n    };\n\n    // Handle cancel from dialog\n    const handleCancelTracking = () => {\n        setConfirmDialog({ isOpen: false, name: '', pendingStatus: false });\n    };\n\n    return (\n        <div className=\"p-6\">\n            <div className=\"mb-6\">\n                <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"flex-1\">\n                        <div className=\"relative\">\n                            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                            <input\n                                type=\"text\"\n                                value={nameQuery}\n                                onChange={(e) => {\n                                    const value = e.target.value;\n                                    setNameQuery(value);\n                                    if (value.length < MIN_SEARCH_LENGTH) {\n                                        // Clear results only if using auto-search\n                                    }\n                                }}\n                                placeholder={`Search by name (min. ${MIN_SEARCH_LENGTH} characters)`}\n                                className=\"w-full pl-10 pr-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"flex space-x-3\">\n                        <input\n                            type=\"text\"\n                            value={idQuery}\n                            onChange={(e) => {\n                                setIdQuery(e.target.value);\n                            }}\n                            placeholder=\"Search by ID\"\n                            className=\"px-4 py-2 rounded-lg border border-gray-200 text-sm\"\n                        />\n                        <button\n                            onClick={applySearch}\n                            disabled={nameQuery.length > 0 && nameQuery.length < MIN_SEARCH_LENGTH}\n                            className={`px-6 py-2 bg-[#4A1D96] text-white rounded-lg text-sm ${\n                                nameQuery.length > 0 && nameQuery.length < MIN_SEARCH_LENGTH \n                                ? 'opacity-50 cursor-not-allowed' \n                                : ''\n                            }`}\n                        >\n                            APPLY\n                        </button>\n                    </div>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                    <div>\n                        <p className=\"text-sm text-gray-500\">\n                            {activeFilter === 'custom' \n                                ? `Showing ${resultsCount} of ${totalCount} tracked items` \n                                : `Total tracked items: ${totalCount}`}\n                        </p>\n                        <p className=\"text-xs text-gray-400 mt-1\">\n                            Last updated: {lastUpdated}\n                        </p>\n                    </div>\n                    <div className=\"flex space-x-3\">\n                        {activeFilter === 'custom' && (\n                            <button \n                                onClick={resetFilters}\n                                className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg text-sm hover:bg-gray-100\"\n                            >\n                                Clear Filter\n                            </button>\n                        )}\n                        <button \n                            onClick={handleManualRefresh}\n                            className=\"flex items-center space-x-2 px-4 py-2 bg-purple-100 text-purple-800 rounded-lg hover:bg-purple-200\"\n                            disabled={isLoading}\n                        >\n                            {isLoading ? (\n                                <Loader2 className=\"w-4 h-4 animate-spin\" />\n                            ) : (\n                                <RefreshCw className=\"w-4 h-4\" />\n                            )}\n                            <span>{isLoading ? 'Loading...' : 'Refresh'}</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            {isLoading ? (\n                <div className=\"flex justify-center items-center h-64\">\n                    <Loader2 className=\"w-8 h-8 animate-spin text-purple-600\" />\n                </div>\n            ) : safeTrackedResults.length === 0 ? (\n                <div className=\"bg-yellow-50 border border-yellow-100 p-4 rounded-md\">\n                    <p className=\"text-center text-yellow-700\">No tracked persons found</p>\n                    <p className=\"text-center text-sm text-yellow-600 mt-2\">\n                        There are {Object.keys(tracking || {}).length} tracking entries but no matching person records.\n                    </p>\n                </div>\n            ) : filteredAndSortedResults.length === 0 && activeFilter === 'custom' ? (\n                <div className=\"bg-blue-50 border border-blue-100 p-4 rounded-md\">\n                    <p className=\"text-center text-blue-700\">No results match your search</p>\n                    <p className=\"text-center text-sm text-blue-600 mt-2\">\n                        Try different search terms or click \"Clear Filter\" to see all {totalCount} tracked items.\n                    </p>\n                </div>\n            ) : (\n                <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                        <thead>\n                            <tr className=\"text-left text-sm text-gray-500\">\n                                <th className=\"pb-4 px-6 whitespace-nowrap cursor-pointer\" onClick={() => handleSort('identifiers')}>\n                                    CUSTOMER {renderSortIndicator('identifiers')}\n                                </th>\n                                <th className=\"pb-4 px-6 whitespace-nowrap cursor-pointer text-center\" onClick={() => handleSort('name')}>\n                                    FULL NAME {renderSortIndicator('name')}\n                                </th>\n                                <th className=\"pb-4 px-6 whitespace-nowrap cursor-pointer text-center\" onClick={() => handleSort('country')}>\n                                    NATIONALITY {renderSortIndicator('country')}\n                                </th>\n                                <th className=\"pb-4 px-6 whitespace-nowrap cursor-pointer text-center\" onClick={() => handleSort('aging')}>\n                                    AGING {renderSortIndicator('aging')}\n                                </th>\n                                <th className=\"pb-4 px-6 whitespace-nowrap cursor-pointer text-center\" onClick={() => handleSort('blacklist')}>\n                                    BLACKLIST STATUS {renderSortIndicator('blacklist')}\n                                </th>\n                                <th className=\"pb-4 px-6 whitespace-nowrap cursor-pointer text-center\" onClick={() => handleSort('dataset')}>\n                                    CATEGORY {renderSortIndicator('dataset')}\n                                </th>\n                                <th className=\"pb-4 px-6 whitespace-nowrap text-center\">\n                                    DOCUMENTATION\n                                </th>\n                                <th className=\"pb-4 px-6 whitespace-nowrap cursor-pointer text-center\" onClick={() => handleSort('risk')}>\n                                    RISK RATING {renderSortIndicator('risk')}\n                                </th>\n                                <th className=\"pb-4 px-6 whitespace-nowrap cursor-pointer text-center\" onClick={() => handleSort('status')}>\n                                    STATUS {renderSortIndicator('status')}\n                                </th>\n                                <th className=\"pb-4 px-6 whitespace-nowrap text-center\">\n                                    TRACKING\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {filteredAndSortedResults.map((result, index) => (\n                                <tr key={`tracked-${index}-${result.name}`} \n                                    className=\"border-t border-gray-100 hover:bg-gray-50 bg-white\">\n                                    <td className=\"py-4 px-6\">\n                                        <div className=\"flex items-center space-x-3\">\n                                            <img src={`https://ui-avatars.com/api/?name=${encodeURIComponent(result.name || 'Unknown')}`} alt={result.name || 'Unknown'} className=\"w-8 h-8 rounded-full\" />\n                                            <span className=\"text-sm\">{result.identifiers || 'N/A'}</span>\n                                        </div>\n                                    </td>\n                                    <td className=\"py-4 px-6 text-sm text-center\">{result.name || 'Unknown'}</td>\n                                    <td className=\"py-4 px-6 text-sm text-center\">\n                                        {result.country && result.country !== 'Unknown' && result.country !== 'N/A' ? (\n                                            <div className=\"flex items-center justify-center\">\n                                                <img \n                                                    src={`https://flagcdn.com/w20/${result.country.toLowerCase()}.png`}\n                                                    alt={result.country}\n                                                    className=\"mr-2 h-3 rounded shadow-sm\"\n                                                    title={result.country}\n                                                />\n                                                {result.country}\n                                            </div>\n                                        ) : (\n                                            \"-\"\n                                        )}\n                                    </td>\n                                    <td className=\"py-4 px-6 text-sm text-center\">\n                                        <span className={tracking?.[result.name]?.isTracking ? 'text-green-600' : 'text-red-600'}>\n                                            {calculateAging(result)}\n                                        </span>\n                                    </td>\n                                    <td className=\"py-4 px-6 text-center\">\n                                        {/* Blacklist status based on dataset */}\n                                        {result.dataset === 'onboarded' ? (\n                                            <div className=\"flex items-center justify-center\">\n                                                <div className=\"w-6 h-6 rounded-full bg-green-100 flex items-center justify-center\">\n                                                    <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                                                </div>\n                                                <span className=\"ml-2 text-xs text-green-600\">Not Blacklisted</span>\n                                            </div>\n                                        ) : (\n                                            <div className=\"flex items-center justify-center\">\n                                                <div className=\"w-6 h-6 rounded-full bg-red-100 flex items-center justify-center\">\n                                                    <XCircle className=\"w-4 h-4 text-red-500\" />\n                                                </div>\n                                                <span className=\"ml-2 text-xs text-red-600\">Blacklisted</span>\n                                            </div>\n                                        )}\n                                    </td>\n                                    <td className=\"py-4 px-6 text-center\">\n                                        {result.dataset ? (\n                                            <span className={`px-2 py-1 text-xs rounded-full ${\n                                                result.dataset === 'onboarded' \n                                                    ? 'bg-green-100 text-green-700'\n                                                    : result.dataset.includes('peps')\n                                                        ? 'bg-yellow-100 text-yellow-700'\n                                                        : result.dataset.includes('terrorists')\n                                                            ? 'bg-red-100 text-red-700'\n                                                            : result.dataset.includes('sanctions')\n                                                                ? 'bg-orange-100 text-orange-700'\n                                                                : result.dataset.includes('debarment')\n                                                                    ? 'bg-purple-100 text-purple-700'\n                                                                    : 'bg-blue-100 text-blue-700'\n                                            }`}>\n                                                {result.dataset === 'onboarded' \n                                                    ? 'Onboarded' \n                                                    : result.dataset.includes('peps') \n                                                        ? 'PEP' \n                                                        : result.dataset.includes('terrorists') \n                                                            ? 'Terrorist' \n                                                            : result.dataset.includes('sanctions') \n                                                                ? 'Sanctions' \n                                                                : result.dataset.includes('debarment') \n                                                                    ? 'Debarred' \n                                                                    : result.dataset}\n                                            </span>\n                                        ) : (\n                                            <span>-</span>\n                                        )}\n                                    </td>\n                                    <td className=\"py-4 px-6 text-center\">\n                                        <div className=\"flex justify-center\">\n                                            <button \n                                                onClick={() => handleGeneratePDF(result)}\n                                                disabled={generatingPdf[result.id]}\n                                                className=\"flex items-center justify-center bg-blue-50 hover:bg-blue-100 text-blue-700 p-2 rounded-full transition-colors duration-200\"\n                                                title=\"Download Report\"\n                                            >\n                                                {generatingPdf[result.id] ? (\n                                                    <Loader2 className=\"w-4 h-4 animate-spin\" />\n                                                ) : (\n                                                    <FileText className=\"w-4 h-4\" />\n                                                )}\n                                            </button>\n                                        </div>\n                                    </td>\n                                    <td className=\"py-4 px-6 text-center\">\n                                        <span className={`text-sm ${getRiskColor(result.riskLevel || 0)}`}>{result.riskLevel || 0}%</span>\n                                    </td>\n                                    <td className=\"py-4 px-6 text-center\">\n                                        <div className=\"flex justify-center\">\n                                            <span className={`px-2 py-1 text-xs rounded-full ${\n                                                tracking?.[result.name]?.isTracking\n                                                    ? 'bg-green-100 text-green-800'\n                                                    : 'bg-red-100 text-red-800'\n                                            }`}>\n                                                {tracking?.[result.name]?.isTracking ? 'Active' : 'Inactive'}\n                                            </span>\n                                        </div>\n                                    </td>\n                                    <td className=\"py-4 px-6 text-center\">\n                                        <div className=\"flex justify-center items-center space-x-2\">\n                                            <button\n                                                onClick={() => handleToggleTracking(result.name, !tracking?.[result.name]?.isTracking)}\n                                                className={`w-8 h-5 rounded-full flex items-center transition-colors duration-300 focus:outline-none ${tracking?.[result.name]?.isTracking ? 'bg-purple-500' : 'bg-gray-300'}`}\n                                            >\n                                                <div\n                                                    className={`w-3 h-3 rounded-full bg-white shadow-md transform transition-transform duration-300 ${tracking?.[result.name]?.isTracking ? 'translate-x-5' : 'translate-x-0.5'}`}\n                                                ></div>\n                                            </button>\n                                            \n                                            <button\n                                                onClick={() => handleEditProfile(result)}\n                                                className=\"ml-2 p-1 bg-blue-50 hover:bg-blue-100 text-blue-700 rounded-full transition-colors duration-200\"\n                                                title=\"Edit Profile\"\n                                            >\n                                                <Edit className=\"w-4 h-4\" />\n                                            </button>\n                                        </div>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            )}\n\n            {/* Add the confirmation dialog */}\n            <ConfirmationDialog \n                isOpen={confirmDialog.isOpen}\n                onConfirm={handleConfirmTracking}\n                onCancel={handleCancelTracking}\n                name={confirmDialog.name}\n            />\n        </div>\n    );\n}\n\nexport default ActiveTracking; ","import React, { Component, ErrorInfo, ReactNode } from 'react';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error: Error | null;\r\n}\r\n\r\nclass ErrorBoundary extends Component<Props, State> {\r\n  public state: State = {\r\n    hasError: false,\r\n    error: null\r\n  };\r\n\r\n  public static getDerivedStateFromError(error: Error): State {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error('Uncaught error:', error, errorInfo);\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n          <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-8\">\r\n            <h2 className=\"text-2xl font-bold text-red-600 mb-4\">Something went wrong</h2>\r\n            <p className=\"text-gray-600 mb-4\">\r\n              {this.state.error?.message || 'An unexpected error occurred'}\r\n            </p>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ hasError: false, error: null });\r\n                window.location.reload();\r\n              }}\r\n              className=\"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700\"\r\n            >\r\n              Try again\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary; ","import React, { useState, useEffect } from 'react';\r\n\r\ninterface LogEntry {\r\n    message: string;\r\n    timestamp: Date;\r\n    type: 'info' | 'error' | 'success';\r\n}\r\n\r\n// Global log storage\r\nconst logEntries: LogEntry[] = [];\r\n\r\n// Function to add to the log (can be called from anywhere)\r\nexport function addLog(message: string, type: 'info' | 'error' | 'success' = 'info') {\r\n    const entry: LogEntry = {\r\n        message,\r\n        timestamp: new Date(),\r\n        type\r\n    };\r\n    logEntries.unshift(entry); // Add to beginning\r\n    \r\n    // Keep the log size manageable\r\n    if (logEntries.length > 50) {\r\n        logEntries.pop();\r\n    }\r\n    \r\n    // Dispatch an event to notify components\r\n    const event = new CustomEvent('debug-log-updated');\r\n    window.dispatchEvent(event);\r\n}\r\n\r\ninterface DebugLogProps {\r\n    show?: boolean;\r\n}\r\n\r\nconst DebugLog: React.FC<DebugLogProps> = ({ show = true }) => {\r\n    const [entries, setEntries] = useState<LogEntry[]>(logEntries);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        const handleUpdate = () => {\r\n            setEntries([...logEntries]);\r\n        };\r\n        \r\n        window.addEventListener('debug-log-updated', handleUpdate);\r\n        return () => {\r\n            window.removeEventListener('debug-log-updated', handleUpdate);\r\n        };\r\n    }, []);\r\n    \r\n    if (!show) return null;\r\n    \r\n    return (\r\n        <div className=\"fixed bottom-0 right-0 z-50\">\r\n            <button \r\n                onClick={() => setIsVisible(!isVisible)}\r\n                className=\"bg-gray-800 text-white px-4 py-2 rounded-tl-md\"\r\n            >\r\n                {isVisible ? 'Hide Debug' : 'Show Debug'}\r\n            </button>\r\n            \r\n            {isVisible && (\r\n                <div className=\"w-96 h-64 bg-gray-900 text-white p-4 overflow-auto\">\r\n                    <h3 className=\"text-lg font-semibold mb-2\">Debug Log</h3>\r\n                    <div className=\"space-y-2\">\r\n                        {entries.map((entry, index) => (\r\n                            <div \r\n                                key={index} \r\n                                className={`text-xs p-1 ${\r\n                                    entry.type === 'error' ? 'text-red-400' : \r\n                                    entry.type === 'success' ? 'text-green-400' : \r\n                                    'text-gray-300'\r\n                                }`}\r\n                            >\r\n                                <span className=\"text-gray-500\">\r\n                                    {entry.timestamp.toLocaleTimeString()}:\r\n                                </span>{' '}\r\n                                {entry.message}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DebugLog; ","import React, { useState, useEffect } from 'react';\nimport {\n    Search, FileText, Shield, LogOut, Link, Users, CreditCard, ChevronDown\n} from 'lucide-react';\nimport { useAuth } from '../AuthContext';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\ninterface LayoutProps {\n    children: React.ReactNode;\n    activeSection?: 'insights' | 'profiles' | 'deepLink' | 'selfService' | 'bulk' | 'activeTracking' | 'credits';\n    deepLinkSubSection?: 'individual' | 'company' | null;\n    credits?: number;\n    loadingCredits?: boolean;\n    handleSidebarNavigation?: (section: string) => void;\n    handleDeepLinkClick?: () => void;\n    handleIndividualOBClick?: () => void;\n    handleCompanyOBClick?: () => void;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ \n    children,\n    activeSection = 'insights',\n    deepLinkSubSection = null,\n    credits = 0,\n    loadingCredits = false,\n    handleSidebarNavigation,\n    handleDeepLinkClick,\n    handleIndividualOBClick,\n    handleCompanyOBClick\n}) => {\n    const { user, logout } = useAuth();\n    const navigate = useNavigate();\n    const location = useLocation();\n    \n    // Local state to handle dropdown when handleDeepLinkClick is not provided\n    const [isDeepLinkOpen, setIsDeepLinkOpen] = useState(activeSection === 'deepLink');\n    // Store last known credit value to prevent flashing \"...\" when switching tabs\n    const [lastKnownCredit, setLastKnownCredit] = useState(credits);\n    // Store the last active section before navigating away\n    const [previousSection, setPreviousSection] = useState<string | null>(null);\n\n    // Update lastKnownCredit whenever credits changes and is not in loading state\n    useEffect(() => {\n        if (!loadingCredits && typeof credits === 'number') {\n            setLastKnownCredit(credits);\n        }\n    }, [credits, loadingCredits]);\n    \n    // Keep track of the current section to restore it when returning from credits\n    useEffect(() => {\n        if (activeSection !== 'credits' && activeSection !== previousSection) {\n            setPreviousSection(activeSection);\n        }\n    }, [activeSection, previousSection]);\n\n    // Default handlers if not provided\n    const defaultNavHandler = (section: string) => {\n        console.log(`Navigation to: ${section}`);\n        \n        // If current location is credits page and we're navigating to another tab\n        if (location.pathname === '/credits' && section !== 'credits') {\n            // Navigate back to mainapp with the selected section\n            navigate('/mainapp', { state: { activeSection: section } });\n        } else {\n            // Normal navigation within mainapp\n            if (handleSidebarNavigation) {\n                handleSidebarNavigation(section);\n            } else {\n                navigate('/mainapp');\n            }\n        }\n    };\n\n    const defaultDeepLinkHandler = () => {\n        console.log('Deep link clicked');\n        \n        // If on credits page, navigate back to mainapp with deepLink as the active section\n        if (location.pathname === '/credits') {\n            navigate('/mainapp', { \n                state: { \n                    activeSection: 'deepLink',\n                    deepLinkSubSection: 'individual' \n                }\n            });\n        } else {\n            // Toggle dropdown state when already in mainapp\n            setIsDeepLinkOpen(!isDeepLinkOpen);\n        }\n    };\n\n    const defaultIndividualHandler = () => {\n        console.log('Individual onboarding clicked');\n    };\n\n    const defaultCompanyHandler = () => {\n        console.log('Company onboarding clicked');\n    };\n\n    // Use provided handlers or fallback to defaults\n    const navHandler = handleSidebarNavigation || defaultNavHandler;\n    const deepLinkHandler = handleDeepLinkClick || defaultDeepLinkHandler;\n    const individualHandler = handleIndividualOBClick || defaultIndividualHandler;\n    const companyHandler = handleCompanyOBClick || defaultCompanyHandler;\n\n    // Dropdown is expanded either through parent state or local state\n    const isDropdownOpen = activeSection === 'deepLink' || isDeepLinkOpen;\n\n    const handleCreditsClick = () => {\n        // Store the current section before navigating to credits\n        if (activeSection !== 'credits') {\n            setPreviousSection(activeSection);\n        }\n        // Navigate to credits page\n        navigate('/credits');\n    };\n\n    return (\n        <div className=\"flex min-h-screen bg-gray-50\">\n            {/* Fixed Sidebar */}\n            <div className=\"w-64 bg-[#4A1D96] text-white fixed h-screen z-10\">\n                <div className=\"p-6 flex flex-col h-full\">\n                    <h1 className=\"text-2xl font-bold mb-6\">AML Checker</h1>\n                    \n                    <nav className=\"space-y-2 mb-24\">\n                        <button\n                            onClick={() => navHandler('insights')}\n                            className={`flex items-center space-x-3 w-full p-3 rounded-lg text-gray-300 ${\n                                activeSection === 'insights' ? 'bg-[#5D2BA8] text-white' : 'hover:bg-[#5D2BA8]'\n                            }`}\n                        >\n                            <FileText className=\"w-5 h-5\" />\n                            <span>Insights</span>\n                        </button>\n\n                        <button\n                            onClick={() => navHandler('activeTracking')}\n                            className={`flex items-center space-x-3 w-full p-3 rounded-lg text-gray-300 ${\n                                activeSection === 'activeTracking' ? 'bg-[#5D2BA8] text-white' : 'hover:bg-[#5D2BA8]'\n                            }`}\n                        >\n                            <Shield className=\"w-5 h-5\" />\n                            <span>Screening</span>\n                        </button>\n\n                        <button\n                            onClick={() => navHandler('profiles')}\n                            className={`flex items-center space-x-3 w-full p-3 rounded-lg text-gray-300 ${\n                                activeSection === 'profiles' ? 'bg-[#5D2BA8] text-white' : 'hover:bg-[#5D2BA8]'\n                            }`}\n                        >\n                            <Users className=\"w-5 h-5\" />\n                            <span>Search Profiles</span>\n                        </button>\n\n                        {/* Deep Link Onboarding Button and Sub-Options */}\n                        <div className=\"relative\">\n                            <button\n                                onClick={deepLinkHandler}\n                                className={`flex items-center justify-between w-full p-3 rounded-lg text-gray-300 ${\n                                    isDropdownOpen ? 'bg-[#5D2BA8] text-white' : 'hover:bg-[#5D2BA8]'\n                                }`}\n                                aria-expanded={isDropdownOpen}\n                                aria-controls=\"deeplink-submenu\"\n                            >\n                                <div className=\"flex items-center space-x-3\">\n                                    <Link className=\"w-5 h-5\" />\n                                    <span>Deep Link Onboarding</span>\n                                </div>\n                                <ChevronDown \n                                    className={`w-4 h-4 transition-transform duration-200 ${\n                                        isDropdownOpen ? 'transform rotate-180' : ''\n                                    }`} \n                                />\n                            </button>\n                            \n                            {/* Submenu with transition */}\n                            <div \n                                id=\"deeplink-submenu\"\n                                className={`overflow-hidden transition-all duration-300 ease-in-out ${\n                                    isDropdownOpen ? 'max-h-24 mt-1 opacity-100' : 'max-h-0 opacity-0'\n                                }`}\n                            >\n                                <div className=\"py-1 pl-4 pr-2 bg-[#421C87] rounded-lg\">\n                                    <button\n                                        onClick={individualHandler}\n                                        className={`flex items-center w-full py-2 px-3 text-left text-gray-300 rounded transition-colors duration-150 ${\n                                            deepLinkSubSection === 'individual' \n                                                ? 'bg-[#5D2BA8] text-white' \n                                                : 'hover:bg-[#5D2BA8] hover:text-white'\n                                        }`}\n                                    >\n                                        <span className=\"text-sm\">Individual Onboarding</span>\n                                    </button>\n                                    <button\n                                        onClick={companyHandler}\n                                        className={`flex items-center w-full py-2 px-3 text-left text-gray-300 rounded transition-colors duration-150 ${\n                                            deepLinkSubSection === 'company' \n                                                ? 'bg-[#5D2BA8] text-white' \n                                                : 'hover:bg-[#5D2BA8] hover:text-white'\n                                        }`}\n                                    >\n                                        <span className=\"text-sm\">Company Onboarding</span>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Credits Management */}\n                        <button\n                            onClick={handleCreditsClick}\n                            className={`flex items-center space-x-3 w-full p-3 rounded-lg text-gray-300 ${\n                                activeSection === 'credits' ? 'bg-[#5D2BA8] text-white' : 'hover:bg-[#5D2BA8]'\n                            }`}\n                        >\n                            <CreditCard className=\"w-5 h-5\" />\n                            <span>Manage Credits</span>\n                        </button>\n                    </nav>\n                    \n                    {/* User profile and credits display - fixed at bottom */}\n                    <div className=\"mt-auto\">\n                        <div className=\"bg-[#3D1678] rounded-lg p-3\">\n                            <div className=\"flex items-center mb-2\">\n                                <div className=\"w-10 h-10 rounded-full bg-purple-300 flex items-center justify-center text-purple-800 font-bold mr-3\">\n                                    {user?.name?.charAt(0) || user?.email?.charAt(0) || 'U'}\n                                </div>\n                                <div>\n                                    <div className=\"font-medium\">{user?.name || user?.email?.split('@')[0] || 'User'}</div>\n                                    <div className=\"text-xs text-purple-300\">{user?.email || ''}</div>\n                                </div>\n                            </div>\n                            \n                            <div className=\"flex justify-between items-center mb-2\">\n                                <span className=\"text-xs text-purple-300\">Credits</span>\n                                <span className=\"font-medium\">\n                                    {loadingCredits ? lastKnownCredit : credits}\n                                </span>\n                            </div>\n                            \n                            <button\n                                onClick={async () => {\n                                    await logout();\n                                    navigate('/login');\n                                }}\n                                className=\"flex items-center space-x-3 w-full p-2 mt-3 rounded-lg text-gray-300 hover:bg-[#4A1D96] text-sm\"\n                            >\n                                <LogOut className=\"w-4 h-4\" />\n                                <span>Sign Out</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Main Content - with left padding to account for fixed sidebar */}\n            <div className=\"flex-1 pl-64\">\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Layout; ","// MainApp.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n    Search, FileText, Shield, LogOut, Link, Users, File,\n    Plus, Loader2, CheckCircle, XCircle, Eye, CreditCard\n} from 'lucide-react';\nimport type { SearchResult, Tracking, TrackingItem } from './types';\nimport { useAuth } from './AuthContext';\nimport ActivityDashboard from './Insights';\nimport Profiles from './Profiles';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport IndividualOB from './IndividualOB';\nimport CompanyOB from './CompanyOB';\nimport Insights from './Insights';\nimport { getApiBaseUrl } from './config';\nimport ActiveTracking from './ActiveTracking';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport DebugLog, { addLog } from './components/DebugLog';\nimport EditProfile from './EditProfile';\nimport Layout from './components/Layout';\n\nconst API_BASE_URL = getApiBaseUrl();\n\n// Cache interface\ninterface SearchCache {\n    [key: string]: {\n        results: SearchResult[];\n        timestamp: number;\n        totalPages?: number;\n        totalResults?: number;\n    };\n}\n\n// Cache interface for tracking data\ninterface TrackingCache {\n    data: Tracking;\n    persons: SearchResult[];\n    timestamp: number;\n}\n\ninterface MainAppProps { }\n\nfunction MainApp(_props: MainAppProps) {\n    const { user, logout } = useAuth();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [searchResults, setSearchResults] = useState<SearchResult[]>([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [searchId, setSearchId] = useState('');\n    const [tracking, setTracking] = useState<Tracking>({});\n    const [trackedResults, setTrackedResults] = useState<SearchResult[]>([]);\n    const [showDashboard, setShowDashboard] = useState(true);\n    const [activeSection, setActiveSection] = useState<'insights' | 'profiles' | 'deepLink' | 'selfService' | 'bulk' | 'activeTracking'>('insights');\n    const [deepLinkSubSection, setDeepLinkSubSection] = useState<'individual' | 'company' | null>(null);\n    const [showIndividualOB, setShowIndividualOB] = useState(false);\n    const [showCompanyOB, setShowCompanyOB] = useState(false);\n    \n    // Handle navigation back from credits page\n    useEffect(() => {\n        // Check if we have state when returning from another route (like credits)\n        if (location.state && location.state.activeSection) {\n            console.log('Restoring section from router state:', location.state.activeSection);\n            setActiveSection(location.state.activeSection);\n            setShowCompanyOB(false);\n            setShowIndividualOB(false);\n            setShowDashboard(location.state.activeSection === 'insights');\n            \n            // Clear the state to prevent it from being applied again\n            window.history.replaceState({}, document.title);\n        }\n    }, [location.state]);\n    \n    // Add state for pending approvals\n    const [pendingApprovals, setPendingApprovals] = useState<{\n        id: number, \n        name: string, \n        type: string, \n        isMatched: boolean,\n        matches?: SearchResult[],\n        processedMatches?: {[matchId: number]: 'approved' | 'rejected'}, // Track which matches have been processed\n        status: string | null | undefined\n    }[]>([]);\n    \n    // Add search cache\n    const [searchCache] = useState<SearchCache>({});\n    \n    // Add tracking cache\n    const [trackingCache, setTrackingCache] = useState<TrackingCache | null>(null);\n    \n    // Add last refresh timestamp to prevent multiple refreshes\n    const [lastRefreshTimestamp, setLastRefreshTimestamp] = useState<number>(0);\n    \n    // Add state for user credits\n    const [credits, setCredits] = useState<number>(0);\n    const [loadingCredits, setLoadingCredits] = useState<boolean>(false);\n    \n    // Inside MainApp, add state for pagination\n    const [currentPage, setCurrentPage] = useState<number>(1);\n    const [totalPages, setTotalPages] = useState<number>(1);\n    const [totalResults, setTotalResults] = useState<number>(0);\n    \n    // Navigation hooks are already declared at the top\n\n    // Cache duration in milliseconds (5 minutes)\n    const CACHE_DURATION = 5 * 60 * 1000;\n    \n    // Minimum search term length\n    const MIN_SEARCH_LENGTH = 2;\n\n    // Cache duration for tracking data (2 minutes)\n    const TRACKING_CACHE_DURATION = 2 * 60 * 1000;\n    \n    // Minimum time between refreshes (3 seconds)\n    const REFRESH_COOLDOWN = 3000;\n\n    const fetchTrackedData = useCallback(async () => {\n        if (!user) return;\n        \n        // Check if we're within the cooldown period\n        const now = Date.now();\n        if (now - lastRefreshTimestamp < REFRESH_COOLDOWN) {\n            console.log('🔍 Refresh cooldown active, skipping fetch');\n            return;\n        }\n        \n        console.log('🔍 Starting fetchTrackedData');\n        setLastRefreshTimestamp(now);\n\n        // Check cache first\n        if (trackingCache && Date.now() - trackingCache.timestamp < TRACKING_CACHE_DURATION) {\n            console.log('🔍 Using cached tracking data');\n            setTracking(trackingCache.data);\n            setTrackedResults(trackingCache.persons);\n            return;\n        }\n\n        setIsLoading(true);\n\n        try {\n            console.log('🔍 Fetching tracked persons data from new endpoint...');\n            // Use the new endpoint that returns complete information in one request\n            // Don't include additional headers that might trigger CORS issues\n            const trackedPersonsResponse = await fetch(\n                `${API_BASE_URL}/tracked-persons`, \n                { credentials: 'include' }\n            );\n\n            if (trackedPersonsResponse.status === 401) {\n                console.error('🔍 Authentication error - redirecting to login');\n                navigate('/login');\n                return;\n            }\n\n            if (!trackedPersonsResponse.ok) {\n                console.error(`🔍 Tracked persons response error: ${trackedPersonsResponse.status}`);\n                throw new Error('Network response was not ok for tracked persons');\n            }\n\n            const responseData = await trackedPersonsResponse.json();\n            console.log('🔍 Tracked persons data from server:', responseData);\n\n            // Get the tracked results array\n            const trackedPersons = Array.isArray(responseData.data) ? responseData.data : [];\n            console.log('🔍 Tracked persons array length:', trackedPersons.length);\n\n            // Transform tracking data into the expected format\n            const transformedTracking: Tracking = {};\n            trackedPersons.forEach((person: any) => {\n                transformedTracking[person.name] = {\n                    isTracking: person.isTracking === 1,\n                    startDate: person.startDate,\n                    stopDate: person.stopDate\n                };\n            });\n\n            console.log('🔍 Transformed tracking data:', transformedTracking);\n\n            // Create SearchResult objects from the response\n            const tracked = trackedPersons.map((person: any) => ({\n                id: person.id,\n                name: person.name,\n                type: person.type || 'Unknown',\n                country: person.country || 'Unknown',\n                identifiers: person.identifiers || 'N/A',\n                riskLevel: person.riskLevel || 50,\n                sanctions: Array.isArray(person.sanctions) ? person.sanctions : [],\n                dataset: person.dataset || ''\n            }));\n\n            console.log('🔍 Final tracked results:', tracked);\n            console.log('🔍 Final tracked results count:', tracked.length);\n\n            // Update cache\n            setTrackingCache({\n                data: transformedTracking,\n                persons: tracked,\n                timestamp: Date.now()\n            });\n\n            // Update state\n            console.log('🔍 Updating state with tracked results');\n            setTracking(transformedTracking);\n            setTrackedResults(tracked);\n\n        } catch (error) {\n            console.error('🔍 Could not fetch tracked data:', error);\n            setTracking({});\n            setTrackedResults([]);\n        } finally {\n            setIsLoading(false);\n            console.log('🔍 Completed fetchTrackedData');\n        }\n    }, [user, navigate]);\n\n    // Function to fetch pending approvals\n    const fetchPendingApprovals = useCallback(async () => {\n        try {\n            // Fetch individuals from individualob table\n            const individualsResponse = await fetch(`${API_BASE_URL}/individualob`, { \n                credentials: 'include' \n            });\n            \n            // Fetch companies from companyob table\n            const companiesResponse = await fetch(`${API_BASE_URL}/companyob`, { \n                credentials: 'include' \n            });\n            \n            if (!individualsResponse.ok || !companiesResponse.ok) {\n                throw new Error('Failed to fetch onboarded customers');\n            }\n            \n            const individuals = await individualsResponse.json();\n            const companies = await companiesResponse.json();\n            \n            console.log('🔍 Fetched onboarded individuals:', individuals);\n            console.log('🔍 Fetched onboarded companies:', companies);\n            \n            // Filter out already approved, rejected, or processed customers\n            // Consider both 'pending' and null/undefined/empty string as pending status\n            const pendingStatuses = ['pending', null, undefined, ''];\n            \n            const pendingIndividuals = individuals.filter((ind: any) => \n                pendingStatuses.includes(ind.status)\n            );\n            const pendingCompanies = companies.filter((comp: any) => \n                pendingStatuses.includes(comp.status)\n            );\n            \n            console.log('🔍 Filtered to pending individuals:', pendingIndividuals.length);\n            console.log('🔍 Filtered to pending companies:', pendingCompanies.length);\n            \n            // Create list of names to check for matches\n            const pendingList = [\n                ...pendingIndividuals.map((ind: any) => ({ \n                    id: ind.id, \n                    name: ind.full_name, \n                    type: 'individual',\n                    isMatched: false,\n                    status: ind.status\n                })),\n                ...pendingCompanies.map((comp: any) => ({ \n                    id: comp.id, \n                    name: comp.company_name, \n                    type: 'company',\n                    isMatched: false,\n                    status: comp.status\n                }))\n            ];\n            \n            // Check for matches against the persons table\n            if (pendingList.length > 0) {\n                const matchPromises = pendingList.map(async (item) => {\n                    try {\n                        const searchResponse = await fetch(\n                            `${API_BASE_URL}/persons/search?searchTerm=${encodeURIComponent(item.name)}`, \n                            { credentials: 'include' }\n                        );\n                        \n                        if (!searchResponse.ok) {\n                            return item;\n                        }\n                        \n                        const searchResults = await searchResponse.json();\n                        const matches = searchResults.data || [];\n                        \n                        return {\n                            ...item,\n                            isMatched: matches.length > 0,\n                            matches: matches // Store the actual matches\n                        };\n                    } catch (error) {\n                        console.error(`Error checking matches for ${item.name}:`, error);\n                        return item;\n                    }\n                });\n                \n                const checkedList = await Promise.all(matchPromises);\n                \n                // Process customers with no matches - automatically add to tracking\n                const customersWithNoMatches = checkedList.filter(item => !item.isMatched);\n                console.log(`🔍 Found ${customersWithNoMatches.length} customers with no matches to auto-process`);\n                \n                for (const item of customersWithNoMatches) {\n                    try {\n                        console.log(`🔄 Auto-approving customer with no matches: ${item.name}`);\n                        \n                        // Call approve endpoint to add to tracking\n                        await fetch(`${API_BASE_URL}/customer/${item.type}/${item.id}/approve`, {\n                            method: 'POST',\n                            credentials: 'include',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            }\n                        });\n                        \n                        console.log(`✅ Auto-approved ${item.type} ${item.name}`);\n                    } catch (error) {\n                        console.error(`Error auto-approving no-match customer ${item.name}:`, error);\n                    }\n                }\n                \n                // If we auto-approved any customers, refresh tracking data\n                if (customersWithNoMatches.length > 0) {\n                    fetchTrackedData();\n                }\n                \n                // Update the pending approvals list with only matched items that need approval\n                const filteredList = checkedList.filter(item => \n                    item.isMatched && pendingStatuses.includes(item.status)\n                );\n                setPendingApprovals(filteredList);\n                console.log('🔍 Pending approvals with match status:', filteredList);\n            } else {\n                setPendingApprovals([]);\n            }\n            \n        } catch (error) {\n            console.error('Error fetching pending approvals:', error);\n            setPendingApprovals([]);\n        }\n    }, [API_BASE_URL, fetchTrackedData]);\n\n    // Refresh tracking data periodically\n    useEffect(() => {\n        console.log('Fetching tracked data...');\n        fetchTrackedData();\n        \n        // Also fetch pending approvals on initial load\n        fetchPendingApprovals();\n        \n        // Set up periodic refresh every 2 minutes\n        const refreshInterval = setInterval(() => {\n            fetchTrackedData();\n            fetchPendingApprovals(); // Also periodically refresh pending approvals\n        }, TRACKING_CACHE_DURATION);\n        \n        return () => clearInterval(refreshInterval);\n    }, [fetchTrackedData, fetchPendingApprovals]);\n\n    // Add debug logging for render\n    console.log('MainApp render state:', {\n        activeSection,\n        trackedResults,\n        tracking,\n        isLoading\n    });\n    \n    // Handle navigation back from credits page\n    useEffect(() => {\n        // Check if we have state when returning from another route (like credits)\n        if (location.state && location.state.activeSection) {\n            console.log('Restoring section from router state:', location.state.activeSection);\n            setActiveSection(location.state.activeSection);\n            setShowCompanyOB(false);\n            setShowIndividualOB(false);\n            setShowDashboard(location.state.activeSection === 'insights');\n            \n            // Clear the state to prevent it from being applied again\n            window.history.replaceState({}, document.title);\n        }\n    }, [location.state]);\n\n    // Update tracking with optimistic updates\n    const updateTracking = useCallback(async (name: string, newTrackingStatus: boolean) => {\n        try {\n            // Special case for refreshing data without changing tracking status\n            if (name === '__refresh__') {\n                console.log('🔄 Refreshing data via special refresh command');\n                setTrackingCache(null); // Invalidate cache\n                await fetchTrackedData(); // Fetch fresh data\n                return;\n            }\n\n            // Optimistically update UI\n            const updatedTracking = { ...tracking };\n            updatedTracking[name] = {\n                ...updatedTracking[name],\n                isTracking: newTrackingStatus,\n                startDate: newTrackingStatus ? new Date().toISOString() : undefined,\n                stopDate: !newTrackingStatus ? new Date().toISOString() : undefined\n            };\n            setTracking(updatedTracking);\n\n            // Update tracked results immediately\n            const updatedResults = trackedResults.filter(result => \n                updatedTracking[result.name]?.isTracking\n            );\n            setTrackedResults(updatedResults);\n\n            // Make API call\n            const response = await fetch(`${API_BASE_URL}/tracking/${name}`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ isTracking: newTrackingStatus }),\n                credentials: 'include',\n            });\n\n            if (!response.ok) {\n                if (response.status === 401) {\n                    navigate('/login');\n                    return;\n                }\n                throw new Error(`Server error: ${response.status}`);\n            }\n\n            // Update cache\n            if (trackingCache) {\n                setTrackingCache({\n                    ...trackingCache,\n                    data: updatedTracking,\n                    persons: updatedResults,\n                    timestamp: Date.now()\n                });\n            }\n            \n            // If we're starting tracking for the first time, also refresh credits\n            if (newTrackingStatus && !tracking[name]?.isTracking) {\n                // Wait a bit to allow the server to process the credit deduction\n                setTimeout(() => {\n                    console.log('Refreshing credits after starting tracking');\n                    fetchUserCredits();\n                }, 500);\n            }\n\n        } catch (error) {\n            console.error('Error updating tracking:', error);\n            // Revert optimistic update on error\n            await fetchTrackedData();\n        }\n    }, [tracking, trackedResults, trackingCache, navigate]);\n\n    // Add a function to handle tab changes\n    const handleTabChange = useCallback((section: string, shouldRefreshData: boolean = true) => {\n        console.log(`🔄 Tab change request to: ${section}, refresh: ${shouldRefreshData}`);\n        \n        // Always update the UI state regardless of refresh status\n        setActiveSection(section as any);\n        setShowCompanyOB(false);\n        setShowIndividualOB(false);\n        setShowDashboard(section === 'insights');\n        \n        // Fetch fresh data when switching to active tracking, but only if shouldRefreshData is true\n        if (section === 'activeTracking' && shouldRefreshData) {\n            console.log('🔄 Switching to Screening tab - fetching fresh data');\n            // Check if we're within the cooldown period\n            const now = Date.now();\n            if (now - lastRefreshTimestamp < REFRESH_COOLDOWN) {\n                console.log('🔄 Refresh cooldown active, skipping data refresh');\n                return;\n            }\n            \n            // Update refresh timestamp\n            setLastRefreshTimestamp(now);\n            \n            // Force data refresh by invalidating cache\n            setTrackingCache(null);\n            // Fetch new data\n            setIsLoading(true);\n            fetchTrackedData();\n            // Fetch pending approvals\n            fetchPendingApprovals();\n        }\n    }, [fetchTrackedData, lastRefreshTimestamp, fetchPendingApprovals]);\n\n    // Handle approving or rejecting a specific match\n    const handleMatchApproval = async (\n        customerId: number, \n        customerType: string, \n        matchId: number, \n        matchName: string,\n        action: 'approved' | 'rejected'\n    ) => {\n        try {\n            console.log(`🔄 ${action === 'approved' ? 'Approving' : 'Rejecting'} match ${matchName} (ID: ${matchId}) for ${customerType} (ID: ${customerId})`);\n            \n            // Find the customer in pending approvals\n            const updatedApprovals = [...pendingApprovals];\n            const customerIndex = updatedApprovals.findIndex(\n                item => item.id === customerId && item.type === customerType\n            );\n            \n            if (customerIndex === -1) return;\n            \n            // Initialize processedMatches object if it doesn't exist\n            if (!updatedApprovals[customerIndex].processedMatches) {\n                updatedApprovals[customerIndex].processedMatches = {};\n            }\n            \n            // Mark this match as processed\n            updatedApprovals[customerIndex].processedMatches![matchId] = action;\n            \n            // Update state immediately for responsive UI\n            setPendingApprovals(updatedApprovals);\n            \n            if (action === 'approved') {\n                // Add this match to tracking (use person from sanctioned list)\n                await fetch(`${API_BASE_URL}/tracking/${matchName}`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ isTracking: true }),\n                    credentials: 'include',\n                });\n                \n                // Also mark the sanctioned person as matched so we know it was blacklisted\n                await fetch(`${API_BASE_URL}/mark-matched/${matchId}`, {\n                    method: 'POST',\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ dataset: 'matched' })\n                }).catch(error => {\n                    // Log error but continue with approval process\n                    console.error(\"Error marking as matched:\", error);\n                    addLog(`Failed to mark ${matchName} as matched: ${error}`, 'error');\n                });\n                \n                // Refresh tracking data\n                fetchTrackedData();\n                \n                // Mark the customer as approved in the database\n                await fetch(`${API_BASE_URL}/customer/${customerType}/${customerId}/approve`, {\n                    method: 'POST',\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n                \n                // Remove this customer from pending list immediately after approval\n                const filteredApprovals = pendingApprovals.filter(\n                    item => !(item.id === customerId && item.type === customerType)\n                );\n                setPendingApprovals(filteredApprovals);\n                \n                // Show success message\n                alert(`${matchName} has been approved and added to tracking`);\n                return;\n            } else if (action === 'rejected') {\n                // Simpler approach: When rejecting any match, mark it in the UI and call the backend\n                console.log(`Rejecting match ${matchName} for customer ID ${customerId}`);\n                addLog(`Rejecting match ${matchName} for customer ID ${customerId}`, 'info');\n                \n                try {\n                    // Make direct API call to reject the customer\n                    addLog(`Sending rejection request to ${API_BASE_URL}/customer/${customerType}/${customerId}/reject`, 'info');\n                    \n                    const response = await fetch(`${API_BASE_URL}/customer/${customerType}/${customerId}/reject`, {\n                        method: 'POST',\n                        credentials: 'include',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        }\n                    });\n                    \n                    const responseData = await response.json();\n                    console.log('Rejection response:', responseData);\n                    addLog(`Server response: ${JSON.stringify(responseData)}`, response.ok ? 'success' : 'error');\n                    \n                    if (!response.ok) {\n                        throw new Error(responseData.message || `Server error: ${response.status}`);\n                    }\n                    \n                    // Remove this customer from the pending approvals list\n                    setPendingApprovals(prevApprovals => prevApprovals.filter(\n                        item => !(item.id === customerId && item.type === customerType)\n                    ));\n                    \n                    addLog(`Successfully removed customer ${customerId} from approvals list`, 'success');\n                    \n                    // Show success message\n                    alert(`Customer has been rejected successfully`);\n                } catch (error) {\n                    console.error('Error during rejection:', error);\n                    addLog(`Rejection error: ${error instanceof Error ? error.message : 'Unknown error'}`, 'error');\n                    alert(`Failed to reject: ${error instanceof Error ? error.message : 'Unknown error'}`);\n                }\n            }\n            \n        } catch (error) {\n            console.error(`Error processing match with action '${action}':`, error);\n            alert(`Failed to process match. Please try again.`);\n        }\n    };\n\n    // Modify the handleSearch function to support pagination\n    const handleSearch = useCallback(async (page: number = 1) => {\n        if ((!searchTerm && !searchId) || (searchTerm && searchTerm.length < MIN_SEARCH_LENGTH)) {\n            setSearchResults([]);\n            setTotalPages(1);\n            setTotalResults(0);\n            return;\n        }\n\n        // Create cache key from search parameters including page number\n        const cacheKey = `${searchTerm}-${searchId}-page${page}`;\n\n        // Check cache first\n        const cachedData = searchCache[cacheKey];\n        if (cachedData && Date.now() - cachedData.timestamp < CACHE_DURATION) {\n            setSearchResults(cachedData.results || []);\n            setTotalPages(cachedData.totalPages || 1);\n            setTotalResults(cachedData.totalResults || 0);\n            setCurrentPage(page);\n            return;\n        }\n\n        setIsLoading(true);\n\n        try {\n            const url = new URL(`${API_BASE_URL}/persons/search`);\n            if (searchTerm) url.searchParams.append('searchTerm', searchTerm);\n            if (searchId) url.searchParams.append('searchId', searchId);\n            url.searchParams.append('page', page.toString());\n            url.searchParams.append('limit', '50'); // 50 results per page\n\n            const response = await fetch(url.toString(), {\n                credentials: 'include',\n            });\n\n            if (!response.ok) {\n                if (response.status === 401) {\n                    navigate('/login');\n                    return;\n                }\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const responseData = await response.json();\n            const results = Array.isArray(responseData.data) ? responseData.data : [];\n            const totalPagesFromServer = responseData.pagination?.totalPages || 1;\n            const totalResultsFromServer = responseData.pagination?.total || 0;\n            \n            // Update cache\n            searchCache[cacheKey] = {\n                results,\n                timestamp: Date.now(),\n                totalPages: totalPagesFromServer,\n                totalResults: totalResultsFromServer\n            };\n            \n            setSearchResults(results);\n            setTotalPages(totalPagesFromServer);\n            setTotalResults(totalResultsFromServer);\n            setCurrentPage(page);\n            console.log('Search results:', results.length, 'Page:', page, 'Total pages:', totalPagesFromServer); // Debug log\n        } catch (error) {\n            console.error('Search failed:', error);\n            setSearchResults([]);\n            setTotalPages(1);\n            setTotalResults(0);\n        } finally {\n            setIsLoading(false);\n        }\n    }, [searchTerm, searchId, searchCache, navigate]);\n\n    // Create debounced search function\n    const debouncedSearch = useCallback(\n        debounce(() => handleSearch(1), 300), // Reset to page 1 when search terms change\n        [handleSearch]\n    );\n\n    // Function to handle page changes\n    const handlePageChange = (newPage: number) => {\n        if (newPage >= 1 && newPage <= totalPages) {\n            handleSearch(newPage);\n        }\n    };\n\n    // Update search when terms change\n    useEffect(() => {\n        debouncedSearch();\n        return () => {\n            debouncedSearch.cancel();\n        };\n    }, [searchTerm, searchId, debouncedSearch]);\n\n    const handleDeepLinkClick = () => {\n        if (activeSection === 'deepLink') {\n            handleSidebarNavigation('insights');\n            setDeepLinkSubSection(null);\n        } else {\n            handleSidebarNavigation('deepLink');\n            setDeepLinkSubSection('individual'); // Set a default sub-section\n            setShowIndividualOB(true); // show by default\n            setShowCompanyOB(false);\n        }\n    };\n\n    const handleIndividualOBClick = () => {\n        setDeepLinkSubSection('individual');\n        setShowIndividualOB(true);\n        setShowCompanyOB(false);\n        setShowDashboard(false); // Add this to hide dashboard\n        setActiveSection('deepLink'); // Add this to ensure correct sidebar highlighting\n    }\n\n    const handleCompanyOBClick = () => {\n        setDeepLinkSubSection('company');\n        setShowCompanyOB(true);\n        setShowIndividualOB(false);\n        setShowDashboard(false); // Add this to hide dashboard\n        setActiveSection('deepLink'); // Add this to ensure correct sidebar highlighting\n    }\n\n    // Handle general navigation through sidebar\n    const handleSidebarNavigation = useCallback((section: string) => {\n        console.log(`Navigation via sidebar to: ${section}`);\n        \n        // Don't force a refresh when it's just a normal tab switch\n        // This separates navigation from data refreshing\n        const shouldRefresh = false;\n        handleTabChange(section, shouldRefresh);\n        \n        // Also update the URL without triggering a page reload\n        window.history.pushState({}, document.title, '/mainapp');\n    }, [handleTabChange]);\n\n    // Add code to handle the redirect from onboarding components\n    useEffect(() => {\n        // First check for URL parameters (new approach)\n        const urlParams = new URLSearchParams(window.location.search);\n        const sectionParam = urlParams.get('section');\n        const refreshParam = urlParams.get('refresh') === 'true';\n        \n        if (sectionParam) {\n            console.log('📊 Handling navigation from URL parameters');\n            \n            // Determine if we should refresh data\n            const now = Date.now();\n            const shouldRefresh = refreshParam && (now - lastRefreshTimestamp > REFRESH_COOLDOWN);\n            \n            // Call handleTabChange with the refreshData flag\n            handleTabChange(sectionParam, shouldRefresh);\n            \n            // If refreshData flag is set, force a refresh of tracked data\n            if (shouldRefresh && sectionParam === 'activeTracking') {\n                console.log('📊 Refreshing tracked data after profile update (URL params)');\n                \n                // First invalidate cache to force fresh data fetch\n                setTrackingCache(null);\n                \n                // Then fetch data immediately\n                setIsLoading(true);\n                fetchTrackedData();\n                \n                // Also fetch pending approvals to ensure consistency\n                fetchPendingApprovals();\n                \n                // Update refresh timestamp\n                setLastRefreshTimestamp(now);\n            }\n            \n            // Clean up the URL to prevent future refreshes\n            window.history.replaceState({}, document.title, '/mainapp');\n            return; // Skip the rest of the effect if URL params were processed\n        }\n        \n        // Then check for redirected state with activeSection (old approach)\n        const state = location.state as { \n            activeSection?: string;\n            deepLinkSubSection?: 'individual' | 'company';\n            refreshData?: boolean;\n            timestamp?: number;\n        } || {};\n        \n        if (state.activeSection) {\n            console.log('📊 Handling navigation with state:', state);\n            \n            // Determine if we should refresh data based on the refreshData flag\n            // and check if we're within the cooldown period\n            const now = Date.now();\n            const shouldRefresh = state.refreshData === true && (now - lastRefreshTimestamp > REFRESH_COOLDOWN);\n            \n            // Handle Deep Link Onboarding special case\n            if (state.activeSection === 'deepLink') {\n                setActiveSection('deepLink');\n                // Set deepLinkSubSection if provided, otherwise default to 'individual'\n                const subSection = state.deepLinkSubSection || 'individual';\n                setDeepLinkSubSection(subSection);\n                setShowIndividualOB(subSection === 'individual');\n                setShowCompanyOB(subSection === 'company');\n                setShowDashboard(false);\n            } else {\n                // Call handleTabChange with the refreshData flag for other sections\n                handleTabChange(state.activeSection, shouldRefresh);\n            }\n            \n            // If refreshData flag is set, force a refresh of tracked data\n            if (shouldRefresh && state.activeSection === 'activeTracking') {\n                console.log('📊 Refreshing tracked data after profile update');\n                \n                // First invalidate cache to force fresh data fetch\n                setTrackingCache(null);\n                \n                // Then fetch data immediately\n                setIsLoading(true);\n                fetchTrackedData();\n                \n                // Also fetch pending approvals to ensure consistency\n                fetchPendingApprovals();\n                \n                // Update refresh timestamp\n                setLastRefreshTimestamp(now);\n            }\n            \n            // Always clear the state to prevent re-triggering\n            window.history.replaceState({}, document.title);\n        }\n    }, [location, handleTabChange, fetchTrackedData, fetchPendingApprovals, lastRefreshTimestamp]);\n\n    // Function to fetch user credits\n    const fetchUserCredits = useCallback(async () => {\n        if (!user) return;\n        \n        setLoadingCredits(true);\n        try {\n            console.log('Fetching credits for user:', user.id);\n            const response = await fetch(`${API_BASE_URL}/credits`, { \n                credentials: 'include' \n            });\n            \n            if (!response.ok) {\n                throw new Error(`Failed to fetch credits: ${response.status}`);\n            }\n            \n            const data = await response.json();\n            console.log('Credits data received:', data); // Debug log\n            \n            if (typeof data.credits === 'number') {\n                setCredits(data.credits);\n            } else {\n                console.error('Invalid credits data received:', data);\n                // If server returns non-numeric value, try to parse it or default to 0\n                const parsedCredits = parseInt(data.credits);\n                setCredits(isNaN(parsedCredits) ? 0 : parsedCredits);\n            }\n        } catch (error) {\n            console.error('Error fetching credits:', error);\n            setCredits(0);\n        } finally {\n            setLoadingCredits(false);\n        }\n    }, [user, API_BASE_URL]);\n\n    // Add credits fetch to initial loading and when active section changes\n    useEffect(() => {\n        fetchUserCredits();\n        \n        // Also fetch credits when switching views\n        const refreshInterval = setInterval(() => {\n            fetchUserCredits();\n        }, 30000); // Refresh every 30 seconds\n        \n        // Add event listener for custom refresh-credits event\n        const handleRefreshCredits = () => {\n            console.log('Refreshing credits from custom event');\n            fetchUserCredits();\n        };\n        \n        window.addEventListener('refresh-credits', handleRefreshCredits);\n        \n        return () => {\n            clearInterval(refreshInterval);\n            window.removeEventListener('refresh-credits', handleRefreshCredits);\n        };\n    }, [fetchUserCredits, activeSection]);\n    \n    // Also refetch credits after handling profile approvals or rejections\n    useEffect(() => {\n        if (pendingApprovals.length > 0) {\n            fetchUserCredits();\n        }\n    }, [pendingApprovals, fetchUserCredits]);\n\n    // Add credits button navigation handler\n    const handleCreditsClick = () => {\n        navigate('/credits');\n    };\n\n    return (\n        <Layout \n            activeSection={activeSection}\n            deepLinkSubSection={deepLinkSubSection}\n            credits={credits}\n            loadingCredits={loadingCredits}\n            handleSidebarNavigation={handleSidebarNavigation}\n            handleDeepLinkClick={handleDeepLinkClick}\n            handleIndividualOBClick={handleIndividualOBClick}\n            handleCompanyOBClick={handleCompanyOBClick}\n        >\n            <div className=\"flex-1\">\n                <header className=\"bg-white border-b border-gray-200\">\n                    <div className=\"flex justify-between items-center px-6 py-4\">\n                        <h2 className=\"text-xl font-semibold\">\n                            {showDashboard ? 'Activity Dashboard' : \n                             showIndividualOB ? 'Individual Onboarding' :\n                             showCompanyOB ? 'Company Onboarding' :\n                             activeSection === 'activeTracking' ? 'Screening' :\n                            'Search'}\n                        </h2>\n                    </div>\n\n                    {!showDashboard && !showIndividualOB && !showCompanyOB && \n                     activeSection !== 'activeTracking' && (\n                        <div className=\"px-6 py-3 flex items-center space-x-4 border-t border-gray-200\">\n                            <div className=\"flex space-x-2\">\n                                <button className=\"px-4 py-1 rounded-full bg-[#4A1D96] text-white text-sm\">\n                                    All\n                                </button>\n\n                            </div>\n\n                            <div className=\"flex-1\">\n                                <div className=\"relative\">\n                                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                                    <input\n                                        type=\"text\"\n                                        value={searchTerm}\n                                        onChange={(e) => {\n                                            const value = e.target.value;\n                                            setSearchTerm(value);\n                                            if (value.length < MIN_SEARCH_LENGTH) {\n                                                setSearchResults([]);\n                                            }\n                                        }}\n                                        placeholder={`Search by name (min. ${MIN_SEARCH_LENGTH} characters)`}\n                                        className=\"w-full pl-10 pr-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"flex space-x-3\">\n                                <input\n                                    type=\"text\"\n                                    value={searchId}\n                                    onChange={(e) => {\n                                        setSearchId(e.target.value);\n                                    }}\n                                    placeholder=\"Search by ID\"\n                                    className=\"px-4 py-2 rounded-lg border border-gray-200 text-sm\"\n                                />\n                                <button\n                                    onClick={() => handleSearch()}\n                                    disabled={searchTerm.length > 0 && searchTerm.length < MIN_SEARCH_LENGTH}\n                                    className={`px-6 py-2 bg-[#4A1D96] text-white rounded-lg text-sm ${\n                                        searchTerm.length > 0 && searchTerm.length < MIN_SEARCH_LENGTH \n                                        ? 'opacity-50 cursor-not-allowed' \n                                        : ''\n                                    }`}\n                                >\n                                    APPLY\n                                </button>\n                            </div>\n                        </div>\n                    )}\n                </header>\n\n                {showDashboard ? (\n                    <ErrorBoundary>\n                        <Insights />\n                    </ErrorBoundary>\n                ) : showIndividualOB ? (\n                    <ErrorBoundary>\n                        <IndividualOB />\n                    </ErrorBoundary>\n                ) : showCompanyOB ? (\n                    <ErrorBoundary>\n                        <CompanyOB />\n                    </ErrorBoundary>\n                ) : activeSection === 'activeTracking' ? (\n                    <ErrorBoundary>\n                        <div>\n                            {/* Pending approvals section */}\n                            {pendingApprovals.filter(item => item.isMatched).length > 0 && (\n                                <div className=\"p-6 border-b border-gray-200\">\n                                    <h3 className=\"text-lg font-semibold mb-4\">Customers Requiring Approval</h3>\n                                    <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n                                        <table className=\"min-w-full divide-y divide-gray-200\">\n                                            <thead className=\"bg-gray-50\">\n                                                <tr>\n                                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\n                                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\n                                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Matches</th>\n                                                    <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                                                {pendingApprovals.filter(item => item.isMatched).map((item) => (\n                                                    <React.Fragment key={`${item.type}-${item.id}`}>\n                                                        <tr>\n                                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{item.name}</td>\n                                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                                                {item.type === 'individual' ? 'Individual' : 'Company'}\n                                                            </td>\n                                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                                <span className=\"px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800\">\n                                                                    Potential Match Found\n                                                                </span>\n                                                            </td>\n                                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                                <div className=\"text-sm text-gray-900\">\n                                                                    {item.matches && item.matches.length > 0 && (\n                                                                        <details className=\"cursor-pointer\">\n                                                                            <summary className=\"flex items-center\">\n                                                                                <span className=\"font-semibold\">{item.matches.length} potential {item.matches.length === 1 ? 'match' : 'matches'}</span>\n                                                                                <Eye className=\"h-4 w-4 ml-2 text-purple-500\" />\n                                                                            </summary>\n                                                                            <div className=\"mt-3 p-4 bg-gray-50 rounded-md border border-gray-200\">\n                                                                                <h4 className=\"font-medium text-gray-700 mb-2\">Match Details:</h4>\n                                                                                <ul className=\"space-y-2\">\n                                                                                    {item.matches.map((match, index) => (\n                                                                                        <li key={`match-${match.id}-${index}`} className={`p-2 border-b border-gray-200 last:border-0 ${\n                                                                                            item.processedMatches?.[match.id] === 'approved' ? 'bg-green-50' :\n                                                                                            item.processedMatches?.[match.id] === 'rejected' ? 'bg-red-50' : ''\n                                                                                        }`}>\n                                                                                            <div className=\"flex justify-between\">\n                                                                                                <span className=\"font-medium\">{match.name}</span>\n                                                                                                <span className={`px-2 py-1 text-xs rounded-full ${\n                                                                                                    match.riskLevel >= 85 ? 'bg-red-100 text-red-800' :\n                                                                                                    match.riskLevel >= 65 ? 'bg-yellow-100 text-yellow-800' :\n                                                                                                    'bg-green-100 text-green-800'\n                                                                                                }`}>\n                                                                                                    Risk: {match.riskLevel}%\n                                                                                                </span>\n                                                                                            </div>\n                                                                                            <div className=\"mt-1 text-sm text-gray-600\">\n                                                                                                <div><span className=\"font-medium\">Type:</span> {match.type}</div>\n                                                                                                <div><span className=\"font-medium\">Country:</span> {match.country}</div>\n                                                                                                <div><span className=\"font-medium\">ID:</span> {match.identifiers}</div>\n                                                                                            </div>\n                                                                                            \n                                                                                            {/* Match approval/rejection buttons */}\n                                                                                            {!item.processedMatches?.[match.id] ? (\n                                                                                                <div className=\"mt-2 flex justify-end space-x-2\">\n                                                                                                    <button \n                                                                                                        onClick={() => handleMatchApproval(item.id, item.type, match.id, match.name, 'approved')}\n                                                                                                        className=\"px-3 py-1 bg-green-100 text-green-800 rounded-md text-xs flex items-center hover:bg-green-200\"\n                                                                                                    >\n                                                                                                        <CheckCircle className=\"w-3 h-3 mr-1\" />\n                                                                                                        Approve Match\n                                                                                                    </button>\n                                                                                                    <button \n                                                                                                        onClick={() => handleMatchApproval(item.id, item.type, match.id, match.name, 'rejected')}\n                                                                                                        className=\"px-3 py-1 bg-red-100 text-red-800 rounded-md text-xs flex items-center hover:bg-red-200\"\n                                                                                                    >\n                                                                                                        <XCircle className=\"w-3 h-3 mr-1\" />\n                                                                                                        Reject Match\n                                                                                                    </button>\n                                                                                                </div>\n                                                                                            ) : (\n                                                                                                <div className=\"mt-2 text-sm italic\">\n                                                                                                    {item.processedMatches[match.id] === 'approved' ? (\n                                                                                                        <span className=\"text-green-600\">✓ Approved - Added to tracking</span>\n                                                                                                    ) : (\n                                                                                                        <span className=\"text-red-600\">✗ Rejected</span>\n                                                                                                    )}\n                                                                                                </div>\n                                                                                            )}\n                                                                                        </li>\n                                                                                    ))}\n                                                                                </ul>\n                                                                            </div>\n                                                                        </details>\n                                                                    )}\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                                                                <button \n                                                                    onClick={() => handleMatchApproval(item.id, item.type, item.id, item.name, 'approved')}\n                                                                    className=\"text-green-600 hover:text-green-900 mr-4\"\n                                                                >\n                                                                    <CheckCircle className=\"inline w-5 h-5 mr-1\" />\n                                                                    Approve\n                                                                </button>\n                                                                <button \n                                                                    onClick={() => handleMatchApproval(item.id, item.type, item.id, item.name, 'rejected')}\n                                                                    className=\"text-red-600 hover:text-red-900\"\n                                                                >\n                                                                    <XCircle className=\"inline w-5 h-5 mr-1\" />\n                                                                    Reject\n                                                                </button>\n                                                            </td>\n                                                        </tr>\n                                                    </React.Fragment>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            )}\n                            \n                            {/* Main active tracking component */}\n                            <ActiveTracking\n                                trackedResults={trackedResults}\n                                tracking={tracking}\n                                isLoading={isLoading}\n                                onToggleTracking={updateTracking}\n                            />\n                        </div>\n                    </ErrorBoundary>\n                ) : (\n                    <ErrorBoundary>\n                        <div className=\"p-6\">\n                            {/* Loading indicator and search results */}\n                            {isLoading && (\n                                <div className=\"flex items-center text-purple-700 mb-6\">\n                                    <Loader2 className=\"w-5 h-5 mr-2 animate-spin\" />\n                                    <span>Searching...</span>\n                                </div>\n                            )}\n                            \n                            {/* Search guidance */}\n                            {!isLoading && searchTerm.length < MIN_SEARCH_LENGTH && searchResults.length === 0 && (\n                                <div className=\"text-center p-12\">\n                                    <p className=\"text-gray-500 mb-4\">\n                                        Enter at least {MIN_SEARCH_LENGTH} characters to search for profiles\n                                    </p>\n                                </div>\n                            )}\n                            \n                            {/* No results message */}\n                            {!isLoading && searchTerm.length >= MIN_SEARCH_LENGTH && searchResults.length === 0 && (\n                                <div className=\"text-center p-12\">\n                                    <p className=\"text-gray-500 mb-4\">\n                                        No results found for \"{searchTerm}\"\n                                    </p>\n                                </div>\n                            )}\n                            \n                                                         {/* Search Results */}\n                             {searchResults.length > 0 && (\n                                 <Profiles \n                                     searchResults={searchResults} \n                                     isLoading={false}\n                                     currentPage={currentPage}\n                                     totalPages={totalPages}\n                                     totalResults={totalResults}\n                                     onPageChange={handlePageChange}\n                                 />\n                             )}\n                        </div>\n                    </ErrorBoundary>\n                )}\n            </div>\n        </Layout>\n    );\n}\n\nexport default MainApp;","// src/App.tsx\r\nimport React, { Suspense, lazy, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './AuthContext';\r\n\r\n// Import MainApp directly for faster loading\r\nimport MainApp from './MainApp';\r\n\r\n// Only lazy-load components that aren't critical for the main user flow\r\nconst Login = lazy(() => import('./pages/Login'));\r\nconst Register = lazy(() => import('./pages/Register'));\r\nconst EditProfile = lazy(() => import('./EditProfile'));\r\nconst Credits = lazy(() => import('./pages/Credits'));\r\n// KycBox component removed in favor of static KYCSync page\r\n\r\n// Loading component with minimal footprint\r\nconst LoadingSpinner = () => (\r\n    <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"w-12 h-12 border-4 border-purple-600 border-t-transparent rounded-full animate-spin\"></div>\r\n    </div>\r\n);\r\n\r\n// Preload helper\r\nconst preloadComponent = (importFn: () => Promise<any>) => {\r\n    importFn();\r\n};\r\n\r\n// Preload the EditProfile component when authenticated\r\nconst PreloadEditProfile = () => {\r\n    const { isAuthenticated } = useAuth();\r\n    \r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            // Preload EditProfile after a delay when user is authenticated\r\n            const timer = setTimeout(() => {\r\n                preloadComponent(() => import('./EditProfile'));\r\n            }, 2000); // 2-second delay\r\n            \r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [isAuthenticated]);\r\n    \r\n    return null;\r\n};\r\n\r\ninterface ProtectedRouteProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nfunction ProtectedRoute({ children }: ProtectedRouteProps) {\r\n    const { isAuthenticated, loading } = useAuth();\r\n\r\n    if (loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return isAuthenticated ? children : <Navigate to=\"/login\" replace />;\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <AuthProvider>\r\n                <PreloadEditProfile />\r\n                <Suspense fallback={<LoadingSpinner />}>\r\n                    <Routes>\r\n                        <Route path=\"/login\" element={<Login />} />\r\n                        <Route path=\"/register\" element={<Register />} />\r\n                        <Route path=\"/mainapp\" element={<ProtectedRoute><MainApp /></ProtectedRoute>} />\r\n                        <Route path=\"/edit-profile/:id\" element={<ProtectedRoute><EditProfile /></ProtectedRoute>} />\r\n                        <Route path=\"/credits\" element={<ProtectedRoute><Credits /></ProtectedRoute>} />\r\n                        {/* Root path is handled by the static index.html file in the public folder */}\r\n                        <Route path=\"/*\" element={null} />\r\n                    </Routes>\r\n                </Suspense>\r\n            </AuthProvider>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","import { StrictMode } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './App.tsx';\r\nimport './index.css';\r\n\r\ncreateRoot(document.getElementById('root')!).render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n"],"file":"assets/index-D4FcVlNj.js"}
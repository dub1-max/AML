{"version":3,"file":"EditProfile-y_hD3dT9.js","sources":["../../src/EditProfile.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { getApiBaseUrl } from './config';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { getSortedCountries, statesByCountry } from './utils/countries';\nimport { Loader2 } from 'lucide-react';\nimport { SearchResult } from './types';\nimport Layout from './components/Layout';\n\nfunction EditProfile() {\n    const API_BASE_URL = getApiBaseUrl();\n    const navigate = useNavigate();\n    const { id } = useParams<{ id: string }>();\n    const location = useLocation();\n    const initialProfile = location.state?.profile;\n    const [isLoading, setIsLoading] = useState(true);\n    const [fullName, setFullName] = useState('');\n    const [email, setEmail] = useState('');\n    const [residentStatus, setResidentStatus] = useState('');\n    const [gender, setGender] = useState('');\n    const [dateOfBirth, setDateOfBirth] = useState('');\n    const [nationality, setNationality] = useState('');\n    const [countryOfResidence, setCountryOfResidence] = useState('');\n    const [otherNationalities, setOtherNationalities] = useState(false);\n    const [specifiedOtherNationalities, setSpecifiedOtherNationalities] = useState('');\n    const [nationalIdNumber, setNationalIdNumber] = useState('');\n    const [nationalIdExpiry, setNationalIdExpiry] = useState('');\n    const [passportNumber, setPassportNumber] = useState('');\n    const [passportExpiry, setPassportExpiry] = useState('');\n    const [address, setAddress] = useState('');\n    const [state, setState] = useState('');\n    const [city, setCity] = useState('');\n    const [zipCode, setZipCode] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [dialingCode, setDialingCode] = useState('');\n    const [workType, setWorkType] = useState('');\n    const [industry, setIndustry] = useState('');\n    const [productTypeOffered, setProductTypeOffered] = useState('');\n    const [productOffered, setProductOffered] = useState('');\n    const [companyName, setCompanyName] = useState('');\n    const [positionInCompany, setPositionInCompany] = useState('');\n\n    // Add state for credits display in sidebar\n    const [credits, setCredits] = useState<number>(0);\n    const [loadingCredits, setLoadingCredits] = useState<boolean>(false);\n\n    // Get sorted countries list\n    const countries = getSortedCountries();\n\n    // Get states for selected country\n    const states = countryOfResidence ? statesByCountry[countryOfResidence] || [] : [];\n\n    const { user } = useAuth();\n\n    // Fetch profile data when component mounts\n    useEffect(() => {\n        const fetchProfileData = async () => {\n            try {\n                if (initialProfile) {\n                    // Initialize form with data from location state\n                    setFullName(initialProfile.name || '');\n                    setNationalIdNumber(initialProfile.identifiers || '');\n                    \n                    // We need to fetch the full profile data from the server\n                    const response = await fetch(`${API_BASE_URL}/profile/${id}`, {\n                        credentials: 'include'\n                    });\n\n                    if (response.ok) {\n                        const profileData = await response.json();\n                        \n                        // Fill in the rest of the form based on the full profile data\n                        setEmail(profileData.email || '');\n                        setResidentStatus(profileData.residentStatus || '');\n                        setGender(profileData.gender || '');\n                        setDateOfBirth(profileData.dateOfBirth ? new Date(profileData.dateOfBirth).toISOString().split('T')[0] : '');\n                        setNationality(profileData.nationality || '');\n                        setCountryOfResidence(profileData.countryOfResidence || '');\n                        setOtherNationalities(profileData.otherNationalities || false);\n                        setSpecifiedOtherNationalities(profileData.specifiedOtherNationalities || '');\n                        setNationalIdExpiry(profileData.nationalIdExpiry ? new Date(profileData.nationalIdExpiry).toISOString().split('T')[0] : '');\n                        setPassportNumber(profileData.passportNumber || '');\n                        setPassportExpiry(profileData.passportExpiry ? new Date(profileData.passportExpiry).toISOString().split('T')[0] : '');\n                        setAddress(profileData.address || '');\n                        setState(profileData.state || '');\n                        setCity(profileData.city || '');\n                        setZipCode(profileData.zipCode || '');\n                        setContactNumber(profileData.contactNumber || '');\n                        setDialingCode(profileData.dialingCode || '');\n                        setWorkType(profileData.workType || '');\n                        setIndustry(profileData.industry || '');\n                        setProductTypeOffered(profileData.productTypeOffered || '');\n                        setProductOffered(profileData.productOffered || '');\n                        setCompanyName(profileData.companyName || '');\n                        setPositionInCompany(profileData.positionInCompany || '');\n                    } else {\n                        // If profile not found, use minimal data from initialProfile\n                        console.error('Failed to fetch profile data');\n                    }\n                } else if (id) {\n                    // If we don't have initialProfile but have ID, fetch from server\n                    const response = await fetch(`${API_BASE_URL}/profile/${id}`, {\n                        credentials: 'include'\n                    });\n\n                    if (response.ok) {\n                        const profileData = await response.json();\n                        // Fill the form with fetched data\n                        setFullName(profileData.fullName || profileData.name || '');\n                        setEmail(profileData.email || '');\n                        setResidentStatus(profileData.residentStatus || '');\n                        setGender(profileData.gender || '');\n                        setDateOfBirth(profileData.dateOfBirth ? new Date(profileData.dateOfBirth).toISOString().split('T')[0] : '');\n                        setNationality(profileData.nationality || '');\n                        setCountryOfResidence(profileData.countryOfResidence || '');\n                        setOtherNationalities(profileData.otherNationalities || false);\n                        setSpecifiedOtherNationalities(profileData.specifiedOtherNationalities || '');\n                        setNationalIdNumber(profileData.nationalIdNumber || profileData.identifiers || '');\n                        setNationalIdExpiry(profileData.nationalIdExpiry ? new Date(profileData.nationalIdExpiry).toISOString().split('T')[0] : '');\n                        setPassportNumber(profileData.passportNumber || '');\n                        setPassportExpiry(profileData.passportExpiry ? new Date(profileData.passportExpiry).toISOString().split('T')[0] : '');\n                        setAddress(profileData.address || '');\n                        setState(profileData.state || '');\n                        setCity(profileData.city || '');\n                        setZipCode(profileData.zipCode || '');\n                        setContactNumber(profileData.contactNumber || '');\n                        setDialingCode(profileData.dialingCode || '');\n                        setWorkType(profileData.workType || '');\n                        setIndustry(profileData.industry || '');\n                        setProductTypeOffered(profileData.productTypeOffered || '');\n                        setProductOffered(profileData.productOffered || '');\n                        setCompanyName(profileData.companyName || '');\n                        setPositionInCompany(profileData.positionInCompany || '');\n                    } else {\n                        alert('Failed to fetch profile data');\n                        navigate('/mainapp');\n                    }\n                } else {\n                    // If no ID or initial profile, go back to main app\n                    alert('No profile selected for editing');\n                    navigate('/mainapp');\n                }\n            } catch (error) {\n                console.error('Error fetching profile data:', error);\n                alert('An error occurred while loading profile data');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchProfileData();\n    }, [id, initialProfile, API_BASE_URL, navigate]);\n\n    // Add useEffect to fetch credits for sidebar\n    useEffect(() => {\n        const fetchCredits = async () => {\n            try {\n                setLoadingCredits(true);\n                const response = await fetch(`${API_BASE_URL}/credits`, {\n                    credentials: 'include'\n                });\n                if (response.ok) {\n                    const data = await response.json();\n                    if (typeof data.credits === 'number') {\n                        setCredits(data.credits);\n                    } else {\n                        const parsedCredits = parseInt(data.credits);\n                        setCredits(isNaN(parsedCredits) ? 0 : parsedCredits);\n                    }\n                }\n            } catch (error) {\n                console.error('Error fetching credits:', error);\n            } finally {\n                setLoadingCredits(false);\n            }\n        };\n        \n        fetchCredits();\n    }, [API_BASE_URL]);\n\n    const handleSubmit = async (event: React.FormEvent) => {\n        event.preventDefault();\n\n        // Basic client-side validation\n        if (!fullName || !email) {\n            alert(\"Full Name and Email are required.\");\n            return;\n        }\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(email)) {\n            alert(\"Invalid email format.\");\n            return;\n        }\n\n        // Convert date strings to ISO format (YYYY-MM-DD) for consistency with MySQL DATE type\n        const formatDate = (dateString: string) => {\n            if (!dateString) return null; // Handle empty date strings\n            return new Date(dateString).toISOString().split('T')[0];\n        };\n\n        const formData = {\n            id: id, // Include the profile ID for update\n            originalName: initialProfile?.name, // Include original name for reference\n            fullName,\n            email,\n            residentStatus,\n            gender,\n            dateOfBirth: formatDate(dateOfBirth),\n            nationality,\n            countryOfResidence,\n            otherNationalities,\n            specifiedOtherNationalities,\n            nationalIdNumber,\n            nationalIdExpiry: formatDate(nationalIdExpiry),\n            passportNumber,\n            passportExpiry: formatDate(passportExpiry),\n            address,\n            state,\n            city,\n            zipCode,\n            contactNumber,\n            dialingCode,\n            workType,\n            industry,\n            productTypeOffered,\n            productOffered,\n            companyName,\n            positionInCompany\n        };\n\n        try {\n            setIsLoading(true);\n            const response = await fetch(`${API_BASE_URL}/updateProfile/${id}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formData),\n                credentials: 'include',\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                alert(\"Profile updated successfully!\");\n                // Construct a URL with query parameters instead of using state\n                // This avoids issues with React Router state management\n                const params = new URLSearchParams({\n                    section: 'activeTracking',\n                    refresh: 'true',\n                    t: Date.now().toString()\n                });\n                \n                // Use window.location for a clean navigation\n                window.location.href = `/mainapp?${params.toString()}`;\n                \n                // Alternative approach with React Router\n                // navigate('/mainapp', { \n                //     state: { \n                //         activeSection: 'activeTracking',\n                //         refreshData: true,\n                //         timestamp: Date.now()\n                //     } \n                // });\n            } else {\n                alert(data.message || 'Update failed');\n            }\n        } catch (error) {\n            console.error('Error updating profile:', error);\n            alert('An error occurred during submission. Please try again.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <Layout\n            credits={credits}\n            loadingCredits={loadingCredits}\n        >\n            <div className=\"max-w-7xl mx-auto p-6\">\n                <h1 className=\"text-2xl font-bold mb-6\">Edit Profile</h1>\n                \n                {isLoading ? (\n                    <div className=\"flex justify-center items-center h-64\">\n                        <Loader2 className=\"w-8 h-8 animate-spin text-purple-600\" />\n                    </div>\n                ) : (\n                    <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-3 gap-6 bg-white p-6 rounded-lg shadow\">\n                        {/* Personal Information - Section Header */}\n                        <div className=\"md:col-span-3\">\n                            <h2 className=\"text-xl font-semibold text-gray-900\">Personal Information</h2>\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">FULL NAME</label>\n                            <input\n                                type=\"text\"\n                                value={fullName}\n                                onChange={(e) => setFullName(e.target.value)}\n                                placeholder=\"Enter full name\"\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">EMAIL</label>\n                            <input\n                                type=\"email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                placeholder=\"Enter email\"\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">RESIDENT STATUS</label>\n                            <select\n                                value={residentStatus}\n                                onChange={(e) => setResidentStatus(e.target.value)}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            >\n                                <option value=\"\">Select Resident Status</option>\n                                <option value=\"citizen\">Citizen</option>\n                                <option value=\"resident\">Resident</option>\n                                <option value=\"non-resident\">Non-Resident</option>\n                            </select>\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">GENDER</label>\n                            <select\n                                value={gender}\n                                onChange={(e) => setGender(e.target.value)}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            >\n                                <option value=\"\">Select Gender</option>\n                                <option value=\"male\">Male</option>\n                                <option value=\"female\">Female</option>\n                                <option value=\"other\">Other</option>\n                            </select>\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">DATE OF BIRTH</label>\n                            <input\n                                type=\"date\"\n                                value={dateOfBirth}\n                                onChange={(e) => setDateOfBirth(e.target.value)}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">NATIONALITY</label>\n                            <select\n                                value={nationality}\n                                onChange={(e) => setNationality(e.target.value)}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            >\n                                <option value=\"\">Select Nationality</option>\n                                {countries.map((country) => (\n                                    <option key={`nat-${country.code}`} value={country.code}>\n                                        {country.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">COUNTRY OF RESIDENCE</label>\n                            <select\n                                value={countryOfResidence}\n                                onChange={(e) => setCountryOfResidence(e.target.value)}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            >\n                                <option value=\"\">Select Country of Residence</option>\n                                {countries.map((country) => (\n                                    <option key={`res-${country.code}`} value={country.code}>\n                                        {country.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">DO YOU HAVE OTHER NATIONALITIES?</label>\n                            <div className=\"mt-1 flex space-x-4\">\n                                <label className=\"inline-flex items-center\">\n                                    <input\n                                        type=\"radio\"\n                                        value=\"yes\"\n                                        checked={otherNationalities === true}\n                                        onChange={() => setOtherNationalities(true)}\n                                        className=\"form-radio h-4 w-4 text-indigo-600 border-gray-300 focus:ring-indigo-500\"\n                                    />\n                                    <span className=\"ml-2\">Yes</span>\n                                </label>\n                                <label className=\"inline-flex items-center\">\n                                    <input\n                                        type=\"radio\"\n                                        value=\"no\"\n                                        checked={otherNationalities === false}\n                                        onChange={() => setOtherNationalities(false)}\n                                        className=\"form-radio h-4 w-4 text-indigo-600 border-gray-300 focus:ring-indigo-500\"\n                                    />\n                                    <span className=\"ml-2\">No</span>\n                                </label>\n                            </div>\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">SPECIFY OTHER NATIONALITIES (IF APPLICABLE)</label>\n                            <select\n                                value={specifiedOtherNationalities}\n                                onChange={(e) => setSpecifiedOtherNationalities(e.target.value)}\n                                disabled={!otherNationalities}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-100 disabled:cursor-not-allowed\"\n                            >\n                                <option value=\"\">Select Other Nationalities</option>\n                                {countries.map((country) => (\n                                    <option key={`other-${country.code}`} value={country.code}>\n                                        {country.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">NATIONAL ID NUMBER</label>\n                            <input\n                                type=\"text\"\n                                value={nationalIdNumber}\n                                onChange={(e) => setNationalIdNumber(e.target.value)}\n                                placeholder=\"Enter National ID Number\"\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">NATIONAL ID EXPIRY</label>\n                            <input\n                                type=\"date\"\n                                value={nationalIdExpiry}\n                                onChange={(e) => setNationalIdExpiry(e.target.value)}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">PASSPORT NUMBER</label>\n                            <input\n                                type=\"text\"\n                                value={passportNumber}\n                                onChange={(e) => setPassportNumber(e.target.value)}\n                                placeholder=\"Enter Passport Number\"\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">PASSPORT EXPIRY</label>\n                            <input\n                                type=\"date\"\n                                value={passportExpiry}\n                                onChange={(e) => setPassportExpiry(e.target.value)}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n\n                        {/* Contact Information - Section Header */}\n                        <div className=\"md:col-span-3 mt-6\">\n                            <h2 className=\"text-xl font-semibold text-gray-900\">Contact Information</h2>\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">ADDRESS</label>\n                            <input\n                                type=\"text\"\n                                value={address}\n                                onChange={(e) => setAddress(e.target.value)}\n                                placeholder=\"Enter address\"\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">STATE</label>\n                            <select\n                                value={state}\n                                onChange={(e) => setState(e.target.value)}\n                                disabled={!countryOfResidence || states.length === 0}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-100 disabled:cursor-not-allowed\"\n                            >\n                                <option value=\"\">Select State</option>\n                                {states.map((stateName) => (\n                                    <option key={stateName} value={stateName}>\n                                        {stateName}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">CITY</label>\n                            <input \n                                type=\"text\" \n                                value={city} \n                                onChange={(e) => setCity(e.target.value)} \n                                placeholder=\"Enter city\" \n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" \n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">ZIP CODE/POSTAL CODE</label>\n                            <input\n                                type=\"text\"\n                                value={zipCode}\n                                onChange={(e) => setZipCode(e.target.value)}\n                                placeholder=\"Enter zip code\"\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">DIALING CODE</label>\n                            <input\n                                type=\"text\"\n                                value={dialingCode}\n                                onChange={(e) => setDialingCode(e.target.value)}\n                                placeholder=\"e.g., +1\"\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">CONTACT NUMBER</label>\n                            <input\n                                type=\"tel\"\n                                value={contactNumber}\n                                onChange={(e) => setContactNumber(e.target.value)}\n                                placeholder=\"Enter phone number\"\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n\n                        {/* Profile Information - Section Header */}\n                        <div className=\"md:col-span-3 mt-6\">\n                            <h2 className=\"text-xl font-semibold text-gray-900\">Profile Information</h2>\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">WORK TYPE</label>\n                            <select\n                                value={workType}\n                                onChange={(e) => setWorkType(e.target.value)}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            >\n                                <option value=\"\">Select Work Type</option>\n                                <option value=\"employee\">Employee</option>\n                                <option value=\"contractor\">Contractor</option>\n                                <option value=\"freelancer\">Freelancer</option>\n                                <option value=\"business_owner\">Business Owner</option>\n                            </select>\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">INDUSTRY</label>\n                            <select\n                                value={industry}\n                                onChange={(e) => setIndustry(e.target.value)}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            >\n                                <option value=\"\">Select Industry</option>\n                                <option value=\"finance\">Finance</option>\n                                <option value=\"technology\">Technology</option>\n                                <option value=\"healthcare\">Healthcare</option>\n                                <option value=\"education\">Education</option>\n                                <option value=\"retail\">Retail</option>\n                            </select>\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">PRODUCT TYPE OFFERED TO CUSTOMER</label>\n                            <select\n                                value={productTypeOffered}\n                                onChange={(e) => setProductTypeOffered(e.target.value)}\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            >\n                                <option value=\"\">Select Product Type</option>\n                                <option value=\"goods\">Physical Goods</option>\n                                <option value=\"services\">Services</option>\n                                <option value=\"digital\">Digital Products</option>\n                            </select>\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">PRODUCT OFFERED</label>\n                            <input\n                                type=\"text\"\n                                value={productOffered}\n                                onChange={(e) => setProductOffered(e.target.value)}\n                                placeholder=\"Enter Product Offered\"\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">COMPANY NAME</label>\n                            <input\n                                type=\"text\"\n                                value={companyName}\n                                onChange={(e) => setCompanyName(e.target.value)}\n                                placeholder=\"Enter Company Name\"\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">POSITION IN COMPANY</label>\n                            <input\n                                type=\"text\"\n                                value={positionInCompany}\n                                onChange={(e) => setPositionInCompany(e.target.value)}\n                                placeholder=\"Enter Position in Company\"\n                                className=\"mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                            />\n                        </div>\n\n                        {/* Submit Button */}\n                        <div className=\"md:col-span-3\">\n                            <div className=\"flex space-x-4\">\n                                <button \n                                    type=\"submit\" \n                                    className=\"mt-4 px-6 py-2 bg-[#4A1D96] text-white rounded-lg hover:bg-[#3c177d] focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-50\"\n                                    disabled={isLoading}\n                                >\n                                    {isLoading ? (\n                                        <>\n                                            <Loader2 className=\"w-4 h-4 mr-2 inline animate-spin\" />\n                                            UPDATING...\n                                        </>\n                                    ) : 'UPDATE PROFILE'}\n                                </button>\n                                <button \n                                    type=\"button\" \n                                    onClick={() => {\n                                        // Navigate to activeTracking using URL parameters instead of state\n                                        const params = new URLSearchParams({\n                                            section: 'activeTracking',\n                                            t: Date.now().toString()\n                                        });\n                                        \n                                        // Use window.location for a clean navigation\n                                        window.location.href = `/mainapp?${params.toString()}`;\n                                    }}\n                                    className=\"mt-4 px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50\"\n                                >\n                                    CANCEL\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </Layout>\n    );\n}\n\nexport default EditProfile; "],"names":["EditProfile","API_BASE_URL","getApiBaseUrl","navigate","useNavigate","id","useParams","initialProfile","_a","useLocation","isLoading","setIsLoading","useState","fullName","setFullName","email","setEmail","residentStatus","setResidentStatus","gender","setGender","dateOfBirth","setDateOfBirth","nationality","setNationality","countryOfResidence","setCountryOfResidence","otherNationalities","setOtherNationalities","specifiedOtherNationalities","setSpecifiedOtherNationalities","nationalIdNumber","setNationalIdNumber","nationalIdExpiry","setNationalIdExpiry","passportNumber","setPassportNumber","passportExpiry","setPassportExpiry","address","setAddress","state","setState","city","setCity","zipCode","setZipCode","contactNumber","setContactNumber","dialingCode","setDialingCode","workType","setWorkType","industry","setIndustry","productTypeOffered","setProductTypeOffered","productOffered","setProductOffered","companyName","setCompanyName","positionInCompany","setPositionInCompany","credits","setCredits","loadingCredits","setLoadingCredits","countries","getSortedCountries","states","statesByCountry","user","useAuth","useEffect","__async","response","profileData","error","data","parsedCredits","handleSubmit","event","formatDate","dateString","formData","params","jsx","Layout","jsxs","Loader2","e","country","stateName","Fragment"],"mappings":"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"}